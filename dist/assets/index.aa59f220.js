const rp=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const a of r)if(a.type==="childList")for(const s of a.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function n(r){const a={};return r.integrity&&(a.integrity=r.integrity),r.referrerpolicy&&(a.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?a.credentials="include":r.crossorigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(r){if(r.ep)return;r.ep=!0;const a=n(r);fetch(r.href,a)}};rp();/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Xc="148",ap=0,pu=1,sp=2,Af=1,op=2,ca=3,wi=0,wn=1,qc=2,ms=3,_i=0,br=1,mu=2,gu=3,vu=4,lp=5,vr=100,cp=101,up=102,yu=103,xu=104,hp=200,fp=201,dp=202,pp=203,Lf=204,Cf=205,mp=206,gp=207,vp=208,yp=209,xp=210,_p=0,bp=1,Mp=2,ql=3,wp=4,Sp=5,Ep=6,Tp=7,Yc=0,Ap=1,Lp=2,si=0,Cp=1,Pp=2,Rp=3,Dp=4,Ip=5,Pf=300,Tr=301,Ar=302,Yl=303,$l=304,Ho=306,$s=1e3,Dn=1001,Zl=1002,Ht=1003,_u=1004,el=1005,bn=1006,Op=1007,ya=1008,Hi=1009,Fp=1010,Np=1011,Rf=1012,zp=1013,zi=1014,Ui=1015,xa=1016,Up=1017,Bp=1018,Mr=1020,Gp=1021,kp=1022,In=1023,Vp=1024,Hp=1025,Gi=1026,Lr=1027,Wp=1028,jp=1029,Xp=1030,qp=1031,Yp=1033,tl=33776,nl=33777,il=33778,rl=33779,bu=35840,Mu=35841,wu=35842,Su=35843,$p=36196,Eu=37492,Tu=37496,Au=37808,Lu=37809,Cu=37810,Pu=37811,Ru=37812,Du=37813,Iu=37814,Ou=37815,Fu=37816,Nu=37817,zu=37818,Uu=37819,Bu=37820,Gu=37821,ku=36492,Wi=3e3,gt=3001,Zp=3200,Jp=3201,Df=0,Qp=1,Nn="srgb",_a="srgb-linear",al=7680,Kp=519,Vu=35044,Hu="300 es",Jl=1035;class $r{addEventListener(e,n){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(n)===-1&&i[e].push(n)}hasEventListener(e,n){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(n)!==-1}removeEventListener(e,n){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const a=r.indexOf(n);a!==-1&&r.splice(a,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let a=0,s=r.length;a<s;a++)r[a].call(this,e);e.target=null}}}const Ft=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],sl=Math.PI/180,Wu=180/Math.PI;function ss(){const t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Ft[t&255]+Ft[t>>8&255]+Ft[t>>16&255]+Ft[t>>24&255]+"-"+Ft[e&255]+Ft[e>>8&255]+"-"+Ft[e>>16&15|64]+Ft[e>>24&255]+"-"+Ft[n&63|128]+Ft[n>>8&255]+"-"+Ft[n>>16&255]+Ft[n>>24&255]+Ft[i&255]+Ft[i>>8&255]+Ft[i>>16&255]+Ft[i>>24&255]).toLowerCase()}function hn(t,e,n){return Math.max(e,Math.min(n,t))}function em(t,e){return(t%e+e)%e}function ol(t,e,n){return(1-n)*t+n*e}function ju(t){return(t&t-1)===0&&t!==0}function Ql(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}function gs(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function an(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return Math.round(t*65535);case Uint8Array:return Math.round(t*255);case Int16Array:return Math.round(t*32767);case Int8Array:return Math.round(t*127);default:throw new Error("Invalid component type.")}}class dt{constructor(e=0,n=0){dt.prototype.isVector2=!0,this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,r=e.elements;return this.x=r[0]*n+r[3]*i+r[6],this.y=r[1]*n+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),r=Math.sin(n),a=this.x-e.x,s=this.y-e.y;return this.x=a*i-s*r+e.x,this.y=a*r+s*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class pn{constructor(){pn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,n,i,r,a,s,o,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=o,u[3]=n,u[4]=a,u[5]=l,u[6]=i,u[7]=s,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,a=this.elements,s=i[0],o=i[3],l=i[6],c=i[1],u=i[4],h=i[7],f=i[2],d=i[5],m=i[8],g=r[0],p=r[3],v=r[6],_=r[1],x=r[4],y=r[7],M=r[2],T=r[5],L=r[8];return a[0]=s*g+o*_+l*M,a[3]=s*p+o*x+l*T,a[6]=s*v+o*y+l*L,a[1]=c*g+u*_+h*M,a[4]=c*p+u*x+h*T,a[7]=c*v+u*y+h*L,a[2]=f*g+d*_+m*M,a[5]=f*p+d*x+m*T,a[8]=f*v+d*y+m*L,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],r=e[2],a=e[3],s=e[4],o=e[5],l=e[6],c=e[7],u=e[8];return n*s*u-n*o*c-i*a*u+i*o*l+r*a*c-r*s*l}invert(){const e=this.elements,n=e[0],i=e[1],r=e[2],a=e[3],s=e[4],o=e[5],l=e[6],c=e[7],u=e[8],h=u*s-o*c,f=o*l-u*a,d=c*a-s*l,m=n*h+i*f+r*d;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/m;return e[0]=h*g,e[1]=(r*c-u*i)*g,e[2]=(o*i-r*s)*g,e[3]=f*g,e[4]=(u*n-r*l)*g,e[5]=(r*a-o*n)*g,e[6]=d*g,e[7]=(i*l-c*n)*g,e[8]=(s*n-i*a)*g,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,r,a,s,o){const l=Math.cos(a),c=Math.sin(a);return this.set(i*l,i*c,-i*(l*s+c*o)+s+e,-r*c,r*l,-r*(-c*s+l*o)+o+n,0,0,1),this}scale(e,n){return this.premultiply(ll.makeScale(e,n)),this}rotate(e){return this.premultiply(ll.makeRotation(-e)),this}translate(e,n){return this.premultiply(ll.makeTranslation(e,n)),this}makeTranslation(e,n){return this.set(1,0,e,0,1,n,0,0,1),this}makeRotation(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,i,n,0,0,0,1),this}makeScale(e,n){return this.set(e,0,0,0,n,0,0,0,1),this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<9;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n=0){for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const ll=new pn;function If(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}function ba(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function ki(t){return t<.04045?t*.0773993808:Math.pow(t*.9478672986+.0521327014,2.4)}function Hs(t){return t<.0031308?t*12.92:1.055*Math.pow(t,.41666)-.055}const cl={[Nn]:{[_a]:ki},[_a]:{[Nn]:Hs}},Gt={legacyMode:!0,get workingColorSpace(){return _a},set workingColorSpace(t){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(t,e,n){if(this.legacyMode||e===n||!e||!n)return t;if(cl[e]&&cl[e][n]!==void 0){const i=cl[e][n];return t.r=i(t.r),t.g=i(t.g),t.b=i(t.b),t}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)}},Of={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Lt={r:0,g:0,b:0},Ln={h:0,s:0,l:0},vs={h:0,s:0,l:0};function ul(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*6*n:n<1/2?e:n<2/3?t+(e-t)*6*(2/3-n):t}function ys(t,e){return e.r=t.r,e.g=t.g,e.b=t.b,e}class ut{constructor(e,n,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,n===void 0&&i===void 0?this.set(e):this.setRGB(e,n,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,n=Nn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Gt.toWorkingColorSpace(this,n),this}setRGB(e,n,i,r=Gt.workingColorSpace){return this.r=e,this.g=n,this.b=i,Gt.toWorkingColorSpace(this,r),this}setHSL(e,n,i,r=Gt.workingColorSpace){if(e=em(e,1),n=hn(n,0,1),i=hn(i,0,1),n===0)this.r=this.g=this.b=i;else{const a=i<=.5?i*(1+n):i+n-i*n,s=2*i-a;this.r=ul(s,a,e+1/3),this.g=ul(s,a,e),this.b=ul(s,a,e-1/3)}return Gt.toWorkingColorSpace(this,r),this}setStyle(e,n=Nn){function i(a){a!==void 0&&parseFloat(a)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let a;const s=r[1],o=r[2];switch(s){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,Gt.toWorkingColorSpace(this,n),i(a[4]),this;if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,Gt.toWorkingColorSpace(this,n),i(a[4]),this;break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const l=parseFloat(a[1])/360,c=parseFloat(a[2])/100,u=parseFloat(a[3])/100;return i(a[4]),this.setHSL(l,c,u,n)}break}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const a=r[1],s=a.length;if(s===3)return this.r=parseInt(a.charAt(0)+a.charAt(0),16)/255,this.g=parseInt(a.charAt(1)+a.charAt(1),16)/255,this.b=parseInt(a.charAt(2)+a.charAt(2),16)/255,Gt.toWorkingColorSpace(this,n),this;if(s===6)return this.r=parseInt(a.charAt(0)+a.charAt(1),16)/255,this.g=parseInt(a.charAt(2)+a.charAt(3),16)/255,this.b=parseInt(a.charAt(4)+a.charAt(5),16)/255,Gt.toWorkingColorSpace(this,n),this}return e&&e.length>0?this.setColorName(e,n):this}setColorName(e,n=Nn){const i=Of[e.toLowerCase()];return i!==void 0?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ki(e.r),this.g=ki(e.g),this.b=ki(e.b),this}copyLinearToSRGB(e){return this.r=Hs(e.r),this.g=Hs(e.g),this.b=Hs(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Nn){return Gt.fromWorkingColorSpace(ys(this,Lt),e),hn(Lt.r*255,0,255)<<16^hn(Lt.g*255,0,255)<<8^hn(Lt.b*255,0,255)<<0}getHexString(e=Nn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,n=Gt.workingColorSpace){Gt.fromWorkingColorSpace(ys(this,Lt),n);const i=Lt.r,r=Lt.g,a=Lt.b,s=Math.max(i,r,a),o=Math.min(i,r,a);let l,c;const u=(o+s)/2;if(o===s)l=0,c=0;else{const h=s-o;switch(c=u<=.5?h/(s+o):h/(2-s-o),s){case i:l=(r-a)/h+(r<a?6:0);break;case r:l=(a-i)/h+2;break;case a:l=(i-r)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,n=Gt.workingColorSpace){return Gt.fromWorkingColorSpace(ys(this,Lt),n),e.r=Lt.r,e.g=Lt.g,e.b=Lt.b,e}getStyle(e=Nn){return Gt.fromWorkingColorSpace(ys(this,Lt),e),e!==Nn?`color(${e} ${Lt.r} ${Lt.g} ${Lt.b})`:`rgb(${Lt.r*255|0},${Lt.g*255|0},${Lt.b*255|0})`}offsetHSL(e,n,i){return this.getHSL(Ln),Ln.h+=e,Ln.s+=n,Ln.l+=i,this.setHSL(Ln.h,Ln.s,Ln.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpColors(e,n,i){return this.r=e.r+(n.r-e.r)*i,this.g=e.g+(n.g-e.g)*i,this.b=e.b+(n.b-e.b)*i,this}lerpHSL(e,n){this.getHSL(Ln),e.getHSL(vs);const i=ol(Ln.h,vs.h,n),r=ol(Ln.s,vs.s,n),a=ol(Ln.l,vs.l,n);return this.setHSL(i,r,a),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n=0){return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e=[],n=0){return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}ut.NAMES=Of;let tr;class Ff{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{tr===void 0&&(tr=ba("canvas")),tr.width=e.width,tr.height=e.height;const i=tr.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=tr}return n.width>2048||n.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),n.toDataURL("image/jpeg",.6)):n.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const n=ba("canvas");n.width=e.width,n.height=e.height;const i=n.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),a=r.data;for(let s=0;s<a.length;s++)a[s]=ki(a[s]/255)*255;return i.putImageData(r,0,0),n}else if(e.data){const n=e.data.slice(0);for(let i=0;i<n.length;i++)n instanceof Uint8Array||n instanceof Uint8ClampedArray?n[i]=Math.floor(ki(n[i]/255)*255):n[i]=ki(n[i]);return{data:n,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Nf{constructor(e=null){this.isSource=!0,this.uuid=ss(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let a;if(Array.isArray(r)){a=[];for(let s=0,o=r.length;s<o;s++)r[s].isDataTexture?a.push(hl(r[s].image)):a.push(hl(r[s]))}else a=hl(r);i.url=a}return n||(e.images[this.uuid]=i),i}}function hl(t){return typeof HTMLImageElement!="undefined"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&t instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&t instanceof ImageBitmap?Ff.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let tm=0;class tn extends $r{constructor(e=tn.DEFAULT_IMAGE,n=tn.DEFAULT_MAPPING,i=Dn,r=Dn,a=bn,s=ya,o=In,l=Hi,c=tn.DEFAULT_ANISOTROPY,u=Wi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:tm++}),this.uuid=ss(),this.name="",this.source=new Nf(e),this.mipmaps=[],this.mapping=n,this.wrapS=i,this.wrapT=r,this.magFilter=a,this.minFilter=s,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new dt(0,0),this.repeat=new dt(1,1),this.center=new dt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new pn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),n||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Pf)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case $s:e.x=e.x-Math.floor(e.x);break;case Dn:e.x=e.x<0?0:1;break;case Zl:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case $s:e.y=e.y-Math.floor(e.y);break;case Dn:e.y=e.y<0?0:1;break;case Zl:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}tn.DEFAULT_IMAGE=null;tn.DEFAULT_MAPPING=Pf;tn.DEFAULT_ANISOTROPY=1;class _t{constructor(e=0,n=0,i=0,r=1){_t.prototype.isVector4=!0,this.x=e,this.y=n,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,r){return this.x=e,this.y=n,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,a=this.w,s=e.elements;return this.x=s[0]*n+s[4]*i+s[8]*r+s[12]*a,this.y=s[1]*n+s[5]*i+s[9]*r+s[13]*a,this.z=s[2]*n+s[6]*i+s[10]*r+s[14]*a,this.w=s[3]*n+s[7]*i+s[11]*r+s[15]*a,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,r,a;const l=e.elements,c=l[0],u=l[4],h=l[8],f=l[1],d=l[5],m=l[9],g=l[2],p=l[6],v=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-g)<.01&&Math.abs(m-p)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+g)<.1&&Math.abs(m+p)<.1&&Math.abs(c+d+v-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const x=(c+1)/2,y=(d+1)/2,M=(v+1)/2,T=(u+f)/4,L=(h+g)/4,b=(m+p)/4;return x>y&&x>M?x<.01?(i=0,r=.707106781,a=.707106781):(i=Math.sqrt(x),r=T/i,a=L/i):y>M?y<.01?(i=.707106781,r=0,a=.707106781):(r=Math.sqrt(y),i=T/r,a=b/r):M<.01?(i=.707106781,r=.707106781,a=0):(a=Math.sqrt(M),i=L/a,r=b/a),this.set(i,r,a,n),this}let _=Math.sqrt((p-m)*(p-m)+(h-g)*(h-g)+(f-u)*(f-u));return Math.abs(_)<.001&&(_=1),this.x=(p-m)/_,this.y=(h-g)/_,this.z=(f-u)/_,this.w=Math.acos((c+d+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this.w=Math.max(e.w,Math.min(n.w,this.w)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this.w=Math.max(e,Math.min(n,this.w)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class ji extends $r{constructor(e=1,n=1,i={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=n,this.depth=1,this.scissor=new _t(0,0,e,n),this.scissorTest=!1,this.viewport=new _t(0,0,e,n);const r={width:e,height:n,depth:1};this.texture=new tn(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:bn,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null,this.samples=i.samples!==void 0?i.samples:0}setSize(e,n,i=1){(this.width!==e||this.height!==n||this.depth!==i)&&(this.width=e,this.height=n,this.depth=i,this.texture.image.width=e,this.texture.image.height=n,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const n=Object.assign({},e.texture.image);return this.texture.source=new Nf(n),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class zf extends tn{constructor(e=null,n=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:n,height:i,depth:r},this.magFilter=Ht,this.minFilter=Ht,this.wrapR=Dn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class nm extends tn{constructor(e=null,n=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:n,height:i,depth:r},this.magFilter=Ht,this.minFilter=Ht,this.wrapR=Dn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class os{constructor(e=0,n=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=n,this._z=i,this._w=r}static slerpFlat(e,n,i,r,a,s,o){let l=i[r+0],c=i[r+1],u=i[r+2],h=i[r+3];const f=a[s+0],d=a[s+1],m=a[s+2],g=a[s+3];if(o===0){e[n+0]=l,e[n+1]=c,e[n+2]=u,e[n+3]=h;return}if(o===1){e[n+0]=f,e[n+1]=d,e[n+2]=m,e[n+3]=g;return}if(h!==g||l!==f||c!==d||u!==m){let p=1-o;const v=l*f+c*d+u*m+h*g,_=v>=0?1:-1,x=1-v*v;if(x>Number.EPSILON){const M=Math.sqrt(x),T=Math.atan2(M,v*_);p=Math.sin(p*T)/M,o=Math.sin(o*T)/M}const y=o*_;if(l=l*p+f*y,c=c*p+d*y,u=u*p+m*y,h=h*p+g*y,p===1-o){const M=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=M,c*=M,u*=M,h*=M}}e[n]=l,e[n+1]=c,e[n+2]=u,e[n+3]=h}static multiplyQuaternionsFlat(e,n,i,r,a,s){const o=i[r],l=i[r+1],c=i[r+2],u=i[r+3],h=a[s],f=a[s+1],d=a[s+2],m=a[s+3];return e[n]=o*m+u*h+l*d-c*f,e[n+1]=l*m+u*f+c*h-o*d,e[n+2]=c*m+u*d+o*f-l*h,e[n+3]=u*m-o*h-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,r){return this._x=e,this._y=n,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n){const i=e._x,r=e._y,a=e._z,s=e._order,o=Math.cos,l=Math.sin,c=o(i/2),u=o(r/2),h=o(a/2),f=l(i/2),d=l(r/2),m=l(a/2);switch(s){case"XYZ":this._x=f*u*h+c*d*m,this._y=c*d*h-f*u*m,this._z=c*u*m+f*d*h,this._w=c*u*h-f*d*m;break;case"YXZ":this._x=f*u*h+c*d*m,this._y=c*d*h-f*u*m,this._z=c*u*m-f*d*h,this._w=c*u*h+f*d*m;break;case"ZXY":this._x=f*u*h-c*d*m,this._y=c*d*h+f*u*m,this._z=c*u*m+f*d*h,this._w=c*u*h-f*d*m;break;case"ZYX":this._x=f*u*h-c*d*m,this._y=c*d*h+f*u*m,this._z=c*u*m-f*d*h,this._w=c*u*h+f*d*m;break;case"YZX":this._x=f*u*h+c*d*m,this._y=c*d*h+f*u*m,this._z=c*u*m-f*d*h,this._w=c*u*h-f*d*m;break;case"XZY":this._x=f*u*h-c*d*m,this._y=c*d*h-f*u*m,this._z=c*u*m+f*d*h,this._w=c*u*h+f*d*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return n!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],r=n[4],a=n[8],s=n[1],o=n[5],l=n[9],c=n[2],u=n[6],h=n[10],f=i+o+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-l)*d,this._y=(a-c)*d,this._z=(s-r)*d}else if(i>o&&i>h){const d=2*Math.sqrt(1+i-o-h);this._w=(u-l)/d,this._x=.25*d,this._y=(r+s)/d,this._z=(a+c)/d}else if(o>h){const d=2*Math.sqrt(1+o-i-h);this._w=(a-c)/d,this._x=(r+s)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+h-i-o);this._w=(s-r)/d,this._x=(a+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let i=e.dot(n)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(hn(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,n/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,r=e._y,a=e._z,s=e._w,o=n._x,l=n._y,c=n._z,u=n._w;return this._x=i*u+s*o+r*c-a*l,this._y=r*u+s*l+a*o-i*c,this._z=a*u+s*c+i*l-r*o,this._w=s*u-i*o-r*l-a*c,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,r=this._y,a=this._z,s=this._w;let o=s*e._w+i*e._x+r*e._y+a*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=s,this._x=i,this._y=r,this._z=a,this;const l=1-o*o;if(l<=Number.EPSILON){const d=1-n;return this._w=d*s+n*this._w,this._x=d*i+n*this._x,this._y=d*r+n*this._y,this._z=d*a+n*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,o),h=Math.sin((1-n)*u)/c,f=Math.sin(n*u)/c;return this._w=s*h+this._w*f,this._x=i*h+this._x*f,this._y=r*h+this._y*f,this._z=a*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,n,i){return this.copy(e).slerp(n,i)}random(){const e=Math.random(),n=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),a=2*Math.PI*Math.random();return this.set(n*Math.cos(r),i*Math.sin(a),i*Math.cos(a),n*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n=0){return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class ne{constructor(e=0,n=0,i=0){ne.prototype.isVector3=!0,this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return this.applyQuaternion(Xu.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(Xu.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,r=this.z,a=e.elements;return this.x=a[0]*n+a[3]*i+a[6]*r,this.y=a[1]*n+a[4]*i+a[7]*r,this.z=a[2]*n+a[5]*i+a[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,a=e.elements,s=1/(a[3]*n+a[7]*i+a[11]*r+a[15]);return this.x=(a[0]*n+a[4]*i+a[8]*r+a[12])*s,this.y=(a[1]*n+a[5]*i+a[9]*r+a[13])*s,this.z=(a[2]*n+a[6]*i+a[10]*r+a[14])*s,this}applyQuaternion(e){const n=this.x,i=this.y,r=this.z,a=e.x,s=e.y,o=e.z,l=e.w,c=l*n+s*r-o*i,u=l*i+o*n-a*r,h=l*r+a*i-s*n,f=-a*n-s*i-o*r;return this.x=c*l+f*-a+u*-o-h*-s,this.y=u*l+f*-s+h*-a-c*-o,this.z=h*l+f*-o+c*-s-u*-a,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,r=this.z,a=e.elements;return this.x=a[0]*n+a[4]*i+a[8]*r,this.y=a[1]*n+a[5]*i+a[9]*r,this.z=a[2]*n+a[6]*i+a[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,r=e.y,a=e.z,s=n.x,o=n.y,l=n.z;return this.x=r*l-a*o,this.y=a*s-i*l,this.z=i*o-r*s,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return fl.copy(this).projectOnVector(e),this.sub(fl)}reflect(e){return this.sub(fl.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(hn(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return n*n+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const r=Math.sin(n)*e;return this.x=r*Math.sin(i),this.y=Math.cos(n)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=r,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,n=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(n),this.y=i*Math.sin(n),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const fl=new ne,Xu=new os;class ls{constructor(e=new ne(1/0,1/0,1/0),n=new ne(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=n}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){let n=1/0,i=1/0,r=1/0,a=-1/0,s=-1/0,o=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],h=e[l+1],f=e[l+2];u<n&&(n=u),h<i&&(i=h),f<r&&(r=f),u>a&&(a=u),h>s&&(s=h),f>o&&(o=f)}return this.min.set(n,i,r),this.max.set(a,s,o),this}setFromBufferAttribute(e){let n=1/0,i=1/0,r=1/0,a=-1/0,s=-1/0,o=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),h=e.getY(l),f=e.getZ(l);u<n&&(n=u),h<i&&(i=h),f<r&&(r=f),u>a&&(a=u),h>s&&(s=h),f>o&&(o=f)}return this.min.set(n,i,r),this.max.set(a,s,o),this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=Ri.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,n=!1){return this.makeEmpty(),this.expandByObject(e,n)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,n=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0)if(n&&i.attributes!=null&&i.attributes.position!==void 0){const a=i.attributes.position;for(let s=0,o=a.count;s<o;s++)Ri.fromBufferAttribute(a,s).applyMatrix4(e.matrixWorld),this.expandByPoint(Ri)}else i.boundingBox===null&&i.computeBoundingBox(),dl.copy(i.boundingBox),dl.applyMatrix4(e.matrixWorld),this.union(dl);const r=e.children;for(let a=0,s=r.length;a<s;a++)this.expandByObject(r[a],n);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ri),Ri.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ta),xs.subVectors(this.max,ta),nr.subVectors(e.a,ta),ir.subVectors(e.b,ta),rr.subVectors(e.c,ta),pi.subVectors(ir,nr),mi.subVectors(rr,ir),Di.subVectors(nr,rr);let n=[0,-pi.z,pi.y,0,-mi.z,mi.y,0,-Di.z,Di.y,pi.z,0,-pi.x,mi.z,0,-mi.x,Di.z,0,-Di.x,-pi.y,pi.x,0,-mi.y,mi.x,0,-Di.y,Di.x,0];return!pl(n,nr,ir,rr,xs)||(n=[1,0,0,0,1,0,0,0,1],!pl(n,nr,ir,rr,xs))?!1:(_s.crossVectors(pi,mi),n=[_s.x,_s.y,_s.z],pl(n,nr,ir,rr,xs))}clampPoint(e,n){return n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Ri.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Ri).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Jn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Jn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Jn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Jn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Jn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Jn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Jn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Jn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Jn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Jn=[new ne,new ne,new ne,new ne,new ne,new ne,new ne,new ne],Ri=new ne,dl=new ls,nr=new ne,ir=new ne,rr=new ne,pi=new ne,mi=new ne,Di=new ne,ta=new ne,xs=new ne,_s=new ne,Ii=new ne;function pl(t,e,n,i,r){for(let a=0,s=t.length-3;a<=s;a+=3){Ii.fromArray(t,a);const o=r.x*Math.abs(Ii.x)+r.y*Math.abs(Ii.y)+r.z*Math.abs(Ii.z),l=e.dot(Ii),c=n.dot(Ii),u=i.dot(Ii);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>o)return!1}return!0}const im=new ls,na=new ne,ml=new ne;class cs{constructor(e=new ne,n=-1){this.center=e,this.radius=n}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):im.setFromPoints(e).getCenter(i);let r=0;for(let a=0,s=e.length;a<s;a++)r=Math.max(r,i.distanceToSquared(e[a]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;na.subVectors(e,this.center);const n=na.lengthSq();if(n>this.radius*this.radius){const i=Math.sqrt(n),r=(i-this.radius)*.5;this.center.addScaledVector(na,r/i),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(ml.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(na.copy(e.center).add(ml)),this.expandByPoint(na.copy(e.center).sub(ml))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Qn=new ne,gl=new ne,bs=new ne,gi=new ne,vl=new ne,Ms=new ne,yl=new ne;class $c{constructor(e=new ne,n=new ne(0,0,-1)){this.origin=e,this.direction=n}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Qn)),this}closestPointToPoint(e,n){n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=Qn.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(Qn.copy(this.direction).multiplyScalar(n).add(this.origin),Qn.distanceToSquared(e))}distanceSqToSegment(e,n,i,r){gl.copy(e).add(n).multiplyScalar(.5),bs.copy(n).sub(e).normalize(),gi.copy(this.origin).sub(gl);const a=e.distanceTo(n)*.5,s=-this.direction.dot(bs),o=gi.dot(this.direction),l=-gi.dot(bs),c=gi.lengthSq(),u=Math.abs(1-s*s);let h,f,d,m;if(u>0)if(h=s*l-o,f=s*o-l,m=a*u,h>=0)if(f>=-m)if(f<=m){const g=1/u;h*=g,f*=g,d=h*(h+s*f+2*o)+f*(s*h+f+2*l)+c}else f=a,h=Math.max(0,-(s*f+o)),d=-h*h+f*(f+2*l)+c;else f=-a,h=Math.max(0,-(s*f+o)),d=-h*h+f*(f+2*l)+c;else f<=-m?(h=Math.max(0,-(-s*a+o)),f=h>0?-a:Math.min(Math.max(-a,-l),a),d=-h*h+f*(f+2*l)+c):f<=m?(h=0,f=Math.min(Math.max(-a,-l),a),d=f*(f+2*l)+c):(h=Math.max(0,-(s*a+o)),f=h>0?a:Math.min(Math.max(-a,-l),a),d=-h*h+f*(f+2*l)+c);else f=s>0?-a:a,h=Math.max(0,-(s*f+o)),d=-h*h+f*(f+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(h).add(this.origin),r&&r.copy(bs).multiplyScalar(f).add(gl),d}intersectSphere(e,n){Qn.subVectors(e.center,this.origin);const i=Qn.dot(this.direction),r=Qn.dot(Qn)-i*i,a=e.radius*e.radius;if(r>a)return null;const s=Math.sqrt(a-r),o=i-s,l=i+s;return o<0&&l<0?null:o<0?this.at(l,n):this.at(o,n)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,r,a,s,o,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(i=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(i=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),u>=0?(a=(e.min.y-f.y)*u,s=(e.max.y-f.y)*u):(a=(e.max.y-f.y)*u,s=(e.min.y-f.y)*u),i>s||a>r||((a>i||isNaN(i))&&(i=a),(s<r||isNaN(r))&&(r=s),h>=0?(o=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(o=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),i>l||o>r)||((o>i||i!==i)&&(i=o),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,n)}intersectsBox(e){return this.intersectBox(e,Qn)!==null}intersectTriangle(e,n,i,r,a){vl.subVectors(n,e),Ms.subVectors(i,e),yl.crossVectors(vl,Ms);let s=this.direction.dot(yl),o;if(s>0){if(r)return null;o=1}else if(s<0)o=-1,s=-s;else return null;gi.subVectors(this.origin,e);const l=o*this.direction.dot(Ms.crossVectors(gi,Ms));if(l<0)return null;const c=o*this.direction.dot(vl.cross(gi));if(c<0||l+c>s)return null;const u=-o*gi.dot(yl);return u<0?null:this.at(u/s,a)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class wt{constructor(){wt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,n,i,r,a,s,o,l,c,u,h,f,d,m,g,p){const v=this.elements;return v[0]=e,v[4]=n,v[8]=i,v[12]=r,v[1]=a,v[5]=s,v[9]=o,v[13]=l,v[2]=c,v[6]=u,v[10]=h,v[14]=f,v[3]=d,v[7]=m,v[11]=g,v[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new wt().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}setFromMatrix3(e){const n=e.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,r=1/ar.setFromMatrixColumn(e,0).length(),a=1/ar.setFromMatrixColumn(e,1).length(),s=1/ar.setFromMatrixColumn(e,2).length();return n[0]=i[0]*r,n[1]=i[1]*r,n[2]=i[2]*r,n[3]=0,n[4]=i[4]*a,n[5]=i[5]*a,n[6]=i[6]*a,n[7]=0,n[8]=i[8]*s,n[9]=i[9]*s,n[10]=i[10]*s,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){const n=this.elements,i=e.x,r=e.y,a=e.z,s=Math.cos(i),o=Math.sin(i),l=Math.cos(r),c=Math.sin(r),u=Math.cos(a),h=Math.sin(a);if(e.order==="XYZ"){const f=s*u,d=s*h,m=o*u,g=o*h;n[0]=l*u,n[4]=-l*h,n[8]=c,n[1]=d+m*c,n[5]=f-g*c,n[9]=-o*l,n[2]=g-f*c,n[6]=m+d*c,n[10]=s*l}else if(e.order==="YXZ"){const f=l*u,d=l*h,m=c*u,g=c*h;n[0]=f+g*o,n[4]=m*o-d,n[8]=s*c,n[1]=s*h,n[5]=s*u,n[9]=-o,n[2]=d*o-m,n[6]=g+f*o,n[10]=s*l}else if(e.order==="ZXY"){const f=l*u,d=l*h,m=c*u,g=c*h;n[0]=f-g*o,n[4]=-s*h,n[8]=m+d*o,n[1]=d+m*o,n[5]=s*u,n[9]=g-f*o,n[2]=-s*c,n[6]=o,n[10]=s*l}else if(e.order==="ZYX"){const f=s*u,d=s*h,m=o*u,g=o*h;n[0]=l*u,n[4]=m*c-d,n[8]=f*c+g,n[1]=l*h,n[5]=g*c+f,n[9]=d*c-m,n[2]=-c,n[6]=o*l,n[10]=s*l}else if(e.order==="YZX"){const f=s*l,d=s*c,m=o*l,g=o*c;n[0]=l*u,n[4]=g-f*h,n[8]=m*h+d,n[1]=h,n[5]=s*u,n[9]=-o*u,n[2]=-c*u,n[6]=d*h+m,n[10]=f-g*h}else if(e.order==="XZY"){const f=s*l,d=s*c,m=o*l,g=o*c;n[0]=l*u,n[4]=-h,n[8]=c*u,n[1]=f*h+g,n[5]=s*u,n[9]=d*h-m,n[2]=m*h-d,n[6]=o*u,n[10]=g*h+f}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(rm,e,am)}lookAt(e,n,i){const r=this.elements;return sn.subVectors(e,n),sn.lengthSq()===0&&(sn.z=1),sn.normalize(),vi.crossVectors(i,sn),vi.lengthSq()===0&&(Math.abs(i.z)===1?sn.x+=1e-4:sn.z+=1e-4,sn.normalize(),vi.crossVectors(i,sn)),vi.normalize(),ws.crossVectors(sn,vi),r[0]=vi.x,r[4]=ws.x,r[8]=sn.x,r[1]=vi.y,r[5]=ws.y,r[9]=sn.y,r[2]=vi.z,r[6]=ws.z,r[10]=sn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,a=this.elements,s=i[0],o=i[4],l=i[8],c=i[12],u=i[1],h=i[5],f=i[9],d=i[13],m=i[2],g=i[6],p=i[10],v=i[14],_=i[3],x=i[7],y=i[11],M=i[15],T=r[0],L=r[4],b=r[8],S=r[12],D=r[1],N=r[5],J=r[9],k=r[13],G=r[2],H=r[6],z=r[10],Z=r[14],w=r[3],R=r[7],V=r[11],F=r[15];return a[0]=s*T+o*D+l*G+c*w,a[4]=s*L+o*N+l*H+c*R,a[8]=s*b+o*J+l*z+c*V,a[12]=s*S+o*k+l*Z+c*F,a[1]=u*T+h*D+f*G+d*w,a[5]=u*L+h*N+f*H+d*R,a[9]=u*b+h*J+f*z+d*V,a[13]=u*S+h*k+f*Z+d*F,a[2]=m*T+g*D+p*G+v*w,a[6]=m*L+g*N+p*H+v*R,a[10]=m*b+g*J+p*z+v*V,a[14]=m*S+g*k+p*Z+v*F,a[3]=_*T+x*D+y*G+M*w,a[7]=_*L+x*N+y*H+M*R,a[11]=_*b+x*J+y*z+M*V,a[15]=_*S+x*k+y*Z+M*F,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],r=e[8],a=e[12],s=e[1],o=e[5],l=e[9],c=e[13],u=e[2],h=e[6],f=e[10],d=e[14],m=e[3],g=e[7],p=e[11],v=e[15];return m*(+a*l*h-r*c*h-a*o*f+i*c*f+r*o*d-i*l*d)+g*(+n*l*d-n*c*f+a*s*f-r*s*d+r*c*u-a*l*u)+p*(+n*c*h-n*o*d-a*s*h+i*s*d+a*o*u-i*c*u)+v*(-r*o*u-n*l*h+n*o*f+r*s*h-i*s*f+i*l*u)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=n,r[14]=i),this}invert(){const e=this.elements,n=e[0],i=e[1],r=e[2],a=e[3],s=e[4],o=e[5],l=e[6],c=e[7],u=e[8],h=e[9],f=e[10],d=e[11],m=e[12],g=e[13],p=e[14],v=e[15],_=h*p*c-g*f*c+g*l*d-o*p*d-h*l*v+o*f*v,x=m*f*c-u*p*c-m*l*d+s*p*d+u*l*v-s*f*v,y=u*g*c-m*h*c+m*o*d-s*g*d-u*o*v+s*h*v,M=m*h*l-u*g*l-m*o*f+s*g*f+u*o*p-s*h*p,T=n*_+i*x+r*y+a*M;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const L=1/T;return e[0]=_*L,e[1]=(g*f*a-h*p*a-g*r*d+i*p*d+h*r*v-i*f*v)*L,e[2]=(o*p*a-g*l*a+g*r*c-i*p*c-o*r*v+i*l*v)*L,e[3]=(h*l*a-o*f*a-h*r*c+i*f*c+o*r*d-i*l*d)*L,e[4]=x*L,e[5]=(u*p*a-m*f*a+m*r*d-n*p*d-u*r*v+n*f*v)*L,e[6]=(m*l*a-s*p*a-m*r*c+n*p*c+s*r*v-n*l*v)*L,e[7]=(s*f*a-u*l*a+u*r*c-n*f*c-s*r*d+n*l*d)*L,e[8]=y*L,e[9]=(m*h*a-u*g*a-m*i*d+n*g*d+u*i*v-n*h*v)*L,e[10]=(s*g*a-m*o*a+m*i*c-n*g*c-s*i*v+n*o*v)*L,e[11]=(u*o*a-s*h*a-u*i*c+n*h*c+s*i*d-n*o*d)*L,e[12]=M*L,e[13]=(u*g*r-m*h*r+m*i*f-n*g*f-u*i*p+n*h*p)*L,e[14]=(m*o*r-s*g*r-m*i*l+n*g*l+s*i*p-n*o*p)*L,e[15]=(s*h*r-u*o*r+u*i*l-n*h*l-s*i*f+n*o*f)*L,this}scale(e){const n=this.elements,i=e.x,r=e.y,a=e.z;return n[0]*=i,n[4]*=r,n[8]*=a,n[1]*=i,n[5]*=r,n[9]*=a,n[2]*=i,n[6]*=r,n[10]*=a,n[3]*=i,n[7]*=r,n[11]*=a,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,r))}makeTranslation(e,n,i){return this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),r=Math.sin(n),a=1-i,s=e.x,o=e.y,l=e.z,c=a*s,u=a*o;return this.set(c*s+i,c*o-r*l,c*l+r*o,0,c*o+r*l,u*o+i,u*l-r*s,0,c*l-r*o,u*l+r*s,a*l*l+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i,r,a,s){return this.set(1,i,a,0,e,1,s,0,n,r,1,0,0,0,0,1),this}compose(e,n,i){const r=this.elements,a=n._x,s=n._y,o=n._z,l=n._w,c=a+a,u=s+s,h=o+o,f=a*c,d=a*u,m=a*h,g=s*u,p=s*h,v=o*h,_=l*c,x=l*u,y=l*h,M=i.x,T=i.y,L=i.z;return r[0]=(1-(g+v))*M,r[1]=(d+y)*M,r[2]=(m-x)*M,r[3]=0,r[4]=(d-y)*T,r[5]=(1-(f+v))*T,r[6]=(p+_)*T,r[7]=0,r[8]=(m+x)*L,r[9]=(p-_)*L,r[10]=(1-(f+g))*L,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,n,i){const r=this.elements;let a=ar.set(r[0],r[1],r[2]).length();const s=ar.set(r[4],r[5],r[6]).length(),o=ar.set(r[8],r[9],r[10]).length();this.determinant()<0&&(a=-a),e.x=r[12],e.y=r[13],e.z=r[14],Cn.copy(this);const c=1/a,u=1/s,h=1/o;return Cn.elements[0]*=c,Cn.elements[1]*=c,Cn.elements[2]*=c,Cn.elements[4]*=u,Cn.elements[5]*=u,Cn.elements[6]*=u,Cn.elements[8]*=h,Cn.elements[9]*=h,Cn.elements[10]*=h,n.setFromRotationMatrix(Cn),i.x=a,i.y=s,i.z=o,this}makePerspective(e,n,i,r,a,s){const o=this.elements,l=2*a/(n-e),c=2*a/(i-r),u=(n+e)/(n-e),h=(i+r)/(i-r),f=-(s+a)/(s-a),d=-2*s*a/(s-a);return o[0]=l,o[4]=0,o[8]=u,o[12]=0,o[1]=0,o[5]=c,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=f,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,n,i,r,a,s){const o=this.elements,l=1/(n-e),c=1/(i-r),u=1/(s-a),h=(n+e)*l,f=(i+r)*c,d=(s+a)*u;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-f,o[2]=0,o[6]=0,o[10]=-2*u,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<16;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n=0){for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}}const ar=new ne,Cn=new wt,rm=new ne(0,0,0),am=new ne(1,1,1),vi=new ne,ws=new ne,sn=new ne,qu=new wt,Yu=new os;class us{constructor(e=0,n=0,i=0,r=us.DefaultOrder){this.isEuler=!0,this._x=e,this._y=n,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,r=this._order){return this._x=e,this._y=n,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n=this._order,i=!0){const r=e.elements,a=r[0],s=r[4],o=r[8],l=r[1],c=r[5],u=r[9],h=r[2],f=r[6],d=r[10];switch(n){case"XYZ":this._y=Math.asin(hn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-hn(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,a),this._z=0);break;case"ZXY":this._x=Math.asin(hn(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-s,c)):(this._y=0,this._z=Math.atan2(l,a));break;case"ZYX":this._y=Math.asin(-hn(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,a)):(this._x=0,this._z=Math.atan2(-s,c));break;case"YZX":this._z=Math.asin(hn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,a)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-hn(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return qu.makeRotationFromQuaternion(e),this.setFromRotationMatrix(qu,n,i)}setFromVector3(e,n=this._order){return this.set(e.x,e.y,e.z,n)}reorder(e){return Yu.setFromEuler(this),this.setFromQuaternion(Yu,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}us.DefaultOrder="XYZ";us.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Uf{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let sm=0;const $u=new ne,sr=new os,Kn=new wt,Ss=new ne,ia=new ne,om=new ne,lm=new os,Zu=new ne(1,0,0),Ju=new ne(0,1,0),Qu=new ne(0,0,1),cm={type:"added"},Ku={type:"removed"};class Nt extends $r{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:sm++}),this.uuid=ss(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Nt.DefaultUp.clone();const e=new ne,n=new us,i=new os,r=new ne(1,1,1);function a(){i.setFromEuler(n,!1)}function s(){n.setFromQuaternion(i,void 0,!1)}n._onChange(a),i._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new wt},normalMatrix:{value:new pn}}),this.matrix=new wt,this.matrixWorld=new wt,this.matrixAutoUpdate=Nt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Nt.DefaultMatrixWorldAutoUpdate,this.layers=new Uf,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,n){this.quaternion.setFromAxisAngle(e,n)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,n){return sr.setFromAxisAngle(e,n),this.quaternion.multiply(sr),this}rotateOnWorldAxis(e,n){return sr.setFromAxisAngle(e,n),this.quaternion.premultiply(sr),this}rotateX(e){return this.rotateOnAxis(Zu,e)}rotateY(e){return this.rotateOnAxis(Ju,e)}rotateZ(e){return this.rotateOnAxis(Qu,e)}translateOnAxis(e,n){return $u.copy(e).applyQuaternion(this.quaternion),this.position.add($u.multiplyScalar(n)),this}translateX(e){return this.translateOnAxis(Zu,e)}translateY(e){return this.translateOnAxis(Ju,e)}translateZ(e){return this.translateOnAxis(Qu,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Kn.copy(this.matrixWorld).invert())}lookAt(e,n,i){e.isVector3?Ss.copy(e):Ss.set(e,n,i);const r=this.parent;this.updateWorldMatrix(!0,!1),ia.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Kn.lookAt(ia,Ss,this.up):Kn.lookAt(Ss,ia,this.up),this.quaternion.setFromRotationMatrix(Kn),r&&(Kn.extractRotation(r.matrixWorld),sr.setFromRotationMatrix(Kn),this.quaternion.premultiply(sr.invert()))}add(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(cm)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const n=this.children.indexOf(e);return n!==-1&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(Ku)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const n=this.children[e];n.parent=null,n.dispatchEvent(Ku)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Kn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Kn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Kn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,n){if(this[e]===n)return this;for(let i=0,r=this.children.length;i<r;i++){const s=this.children[i].getObjectByProperty(e,n);if(s!==void 0)return s}}getObjectsByProperty(e,n){let i=[];this[e]===n&&i.push(this);for(let r=0,a=this.children.length;r<a;r++){const s=this.children[r].getObjectsByProperty(e,n);s.length>0&&(i=i.concat(s))}return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ia,e,om),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ia,lm,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(n[8],n[9],n[10]).normalize()}raycast(){}traverse(e){e(this);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].traverseVisible(e)}traverseAncestors(e){const n=this.parent;n!==null&&(e(n),n.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const n=this.children;for(let i=0,r=n.length;i<r;i++){const a=n[i];(a.matrixWorldAutoUpdate===!0||e===!0)&&a.updateMatrixWorld(e)}}updateWorldMatrix(e,n){const i=this.parent;if(e===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),n===!0){const r=this.children;for(let a=0,s=r.length;a<s;a++){const o=r[a];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const n=e===void 0||typeof e=="string",i={};n&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function a(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=a(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];a(e.shapes,h)}else a(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(a(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(a(e.materials,this.material[l]));r.material=o}else r.material=a(e.materials,this.material);if(this.children.length>0){r.children=[];for(let o=0;o<this.children.length;o++)r.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];r.animations.push(a(e.animations,l))}}if(n){const o=s(e.geometries),l=s(e.materials),c=s(e.textures),u=s(e.images),h=s(e.shapes),f=s(e.skeletons),d=s(e.animations),m=s(e.nodes);o.length>0&&(i.geometries=o),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),u.length>0&&(i.images=u),h.length>0&&(i.shapes=h),f.length>0&&(i.skeletons=f),d.length>0&&(i.animations=d),m.length>0&&(i.nodes=m)}return i.object=r,i;function s(o){const l=[];for(const c in o){const u=o[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,n=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),n===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}Nt.DefaultUp=new ne(0,1,0);Nt.DefaultMatrixAutoUpdate=!0;Nt.DefaultMatrixWorldAutoUpdate=!0;const Pn=new ne,ei=new ne,xl=new ne,ti=new ne,or=new ne,lr=new ne,eh=new ne,_l=new ne,bl=new ne,Ml=new ne;class ri{constructor(e=new ne,n=new ne,i=new ne){this.a=e,this.b=n,this.c=i}static getNormal(e,n,i,r){r.subVectors(i,n),Pn.subVectors(e,n),r.cross(Pn);const a=r.lengthSq();return a>0?r.multiplyScalar(1/Math.sqrt(a)):r.set(0,0,0)}static getBarycoord(e,n,i,r,a){Pn.subVectors(r,n),ei.subVectors(i,n),xl.subVectors(e,n);const s=Pn.dot(Pn),o=Pn.dot(ei),l=Pn.dot(xl),c=ei.dot(ei),u=ei.dot(xl),h=s*c-o*o;if(h===0)return a.set(-2,-1,-1);const f=1/h,d=(c*l-o*u)*f,m=(s*u-o*l)*f;return a.set(1-d-m,m,d)}static containsPoint(e,n,i,r){return this.getBarycoord(e,n,i,r,ti),ti.x>=0&&ti.y>=0&&ti.x+ti.y<=1}static getUV(e,n,i,r,a,s,o,l){return this.getBarycoord(e,n,i,r,ti),l.set(0,0),l.addScaledVector(a,ti.x),l.addScaledVector(s,ti.y),l.addScaledVector(o,ti.z),l}static isFrontFacing(e,n,i,r){return Pn.subVectors(i,n),ei.subVectors(e,n),Pn.cross(ei).dot(r)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,r){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,n,i,r){return this.a.fromBufferAttribute(e,n),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Pn.subVectors(this.c,this.b),ei.subVectors(this.a,this.b),Pn.cross(ei).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ri.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return ri.getBarycoord(e,this.a,this.b,this.c,n)}getUV(e,n,i,r,a){return ri.getUV(e,this.a,this.b,this.c,n,i,r,a)}containsPoint(e){return ri.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ri.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){const i=this.a,r=this.b,a=this.c;let s,o;or.subVectors(r,i),lr.subVectors(a,i),_l.subVectors(e,i);const l=or.dot(_l),c=lr.dot(_l);if(l<=0&&c<=0)return n.copy(i);bl.subVectors(e,r);const u=or.dot(bl),h=lr.dot(bl);if(u>=0&&h<=u)return n.copy(r);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return s=l/(l-u),n.copy(i).addScaledVector(or,s);Ml.subVectors(e,a);const d=or.dot(Ml),m=lr.dot(Ml);if(m>=0&&d<=m)return n.copy(a);const g=d*c-l*m;if(g<=0&&c>=0&&m<=0)return o=c/(c-m),n.copy(i).addScaledVector(lr,o);const p=u*m-d*h;if(p<=0&&h-u>=0&&d-m>=0)return eh.subVectors(a,r),o=(h-u)/(h-u+(d-m)),n.copy(r).addScaledVector(eh,o);const v=1/(p+g+f);return s=g*v,o=f*v,n.copy(i).addScaledVector(or,s).addScaledVector(lr,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let um=0;class oi extends $r{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:um++}),this.uuid=ss(),this.name="",this.type="Material",this.blending=br,this.side=wi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Lf,this.blendDst=Cf,this.blendEquation=vr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=ql,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Kp,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=al,this.stencilZFail=al,this.stencilZPass=al,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const n in e){const i=e[n];if(i===void 0){console.warn("THREE.Material: '"+n+"' parameter is undefined.");continue}const r=this[n];if(r===void 0){console.warn("THREE."+this.type+": '"+n+"' is not a property of this material.");continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[n]=i}}toJSON(e){const n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==br&&(i.blending=this.blending),this.side!==wi&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function r(a){const s=[];for(const o in a){const l=a[o];delete l.metadata,s.push(l)}return s}if(n){const a=r(e.textures),s=r(e.images);a.length>0&&(i.textures=a),s.length>0&&(i.images=s)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const n=e.clippingPlanes;let i=null;if(n!==null){const r=n.length;i=new Array(r);for(let a=0;a!==r;++a)i[a]=n[a].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Bf extends oi{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ut(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Yc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const At=new ne,Es=new dt;class Vn{constructor(e,n,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=n,this.count=e!==void 0?e.length/n:0,this.normalized=i,this.usage=Vu,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,n,i){e*=this.itemSize,i*=n.itemSize;for(let r=0,a=this.itemSize;r<a;r++)this.array[e+r]=n.array[i+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let n=0,i=this.count;n<i;n++)Es.fromBufferAttribute(this,n),Es.applyMatrix3(e),this.setXY(n,Es.x,Es.y);else if(this.itemSize===3)for(let n=0,i=this.count;n<i;n++)At.fromBufferAttribute(this,n),At.applyMatrix3(e),this.setXYZ(n,At.x,At.y,At.z);return this}applyMatrix4(e){for(let n=0,i=this.count;n<i;n++)At.fromBufferAttribute(this,n),At.applyMatrix4(e),this.setXYZ(n,At.x,At.y,At.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)At.fromBufferAttribute(this,n),At.applyNormalMatrix(e),this.setXYZ(n,At.x,At.y,At.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)At.fromBufferAttribute(this,n),At.transformDirection(e),this.setXYZ(n,At.x,At.y,At.z);return this}set(e,n=0){return this.array.set(e,n),this}getX(e){let n=this.array[e*this.itemSize];return this.normalized&&(n=gs(n,this.array)),n}setX(e,n){return this.normalized&&(n=an(n,this.array)),this.array[e*this.itemSize]=n,this}getY(e){let n=this.array[e*this.itemSize+1];return this.normalized&&(n=gs(n,this.array)),n}setY(e,n){return this.normalized&&(n=an(n,this.array)),this.array[e*this.itemSize+1]=n,this}getZ(e){let n=this.array[e*this.itemSize+2];return this.normalized&&(n=gs(n,this.array)),n}setZ(e,n){return this.normalized&&(n=an(n,this.array)),this.array[e*this.itemSize+2]=n,this}getW(e){let n=this.array[e*this.itemSize+3];return this.normalized&&(n=gs(n,this.array)),n}setW(e,n){return this.normalized&&(n=an(n,this.array)),this.array[e*this.itemSize+3]=n,this}setXY(e,n,i){return e*=this.itemSize,this.normalized&&(n=an(n,this.array),i=an(i,this.array)),this.array[e+0]=n,this.array[e+1]=i,this}setXYZ(e,n,i,r){return e*=this.itemSize,this.normalized&&(n=an(n,this.array),i=an(i,this.array),r=an(r,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,n,i,r,a){return e*=this.itemSize,this.normalized&&(n=an(n,this.array),i=an(i,this.array),r=an(r,this.array),a=an(a,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=a,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Vu&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Gf extends Vn{constructor(e,n,i){super(new Uint16Array(e),n,i)}}class kf extends Vn{constructor(e,n,i){super(new Uint32Array(e),n,i)}}class Wt extends Vn{constructor(e,n,i){super(new Float32Array(e),n,i)}}let hm=0;const xn=new wt,wl=new Nt,cr=new ne,on=new ls,ra=new ls,Dt=new ne;class On extends $r{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:hm++}),this.uuid=ss(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(If(e)?kf:Gf)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,n){return this.attributes[e]=n,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,n,i=0){this.groups.push({start:e,count:n,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,n){this.drawRange.start=e,this.drawRange.count=n}applyMatrix4(e){const n=this.attributes.position;n!==void 0&&(n.applyMatrix4(e),n.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const a=new pn().getNormalMatrix(e);i.applyNormalMatrix(a),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return xn.makeRotationFromQuaternion(e),this.applyMatrix4(xn),this}rotateX(e){return xn.makeRotationX(e),this.applyMatrix4(xn),this}rotateY(e){return xn.makeRotationY(e),this.applyMatrix4(xn),this}rotateZ(e){return xn.makeRotationZ(e),this.applyMatrix4(xn),this}translate(e,n,i){return xn.makeTranslation(e,n,i),this.applyMatrix4(xn),this}scale(e,n,i){return xn.makeScale(e,n,i),this.applyMatrix4(xn),this}lookAt(e){return wl.lookAt(e),wl.updateMatrix(),this.applyMatrix4(wl.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(cr).negate(),this.translate(cr.x,cr.y,cr.z),this}setFromPoints(e){const n=[];for(let i=0,r=e.length;i<r;i++){const a=e[i];n.push(a.x,a.y,a.z||0)}return this.setAttribute("position",new Wt(n,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ls);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new ne(-1/0,-1/0,-1/0),new ne(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),n)for(let i=0,r=n.length;i<r;i++){const a=n[i];on.setFromBufferAttribute(a),this.morphTargetsRelative?(Dt.addVectors(this.boundingBox.min,on.min),this.boundingBox.expandByPoint(Dt),Dt.addVectors(this.boundingBox.max,on.max),this.boundingBox.expandByPoint(Dt)):(this.boundingBox.expandByPoint(on.min),this.boundingBox.expandByPoint(on.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new cs);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new ne,1/0);return}if(e){const i=this.boundingSphere.center;if(on.setFromBufferAttribute(e),n)for(let a=0,s=n.length;a<s;a++){const o=n[a];ra.setFromBufferAttribute(o),this.morphTargetsRelative?(Dt.addVectors(on.min,ra.min),on.expandByPoint(Dt),Dt.addVectors(on.max,ra.max),on.expandByPoint(Dt)):(on.expandByPoint(ra.min),on.expandByPoint(ra.max))}on.getCenter(i);let r=0;for(let a=0,s=e.count;a<s;a++)Dt.fromBufferAttribute(e,a),r=Math.max(r,i.distanceToSquared(Dt));if(n)for(let a=0,s=n.length;a<s;a++){const o=n[a],l=this.morphTargetsRelative;for(let c=0,u=o.count;c<u;c++)Dt.fromBufferAttribute(o,c),l&&(cr.fromBufferAttribute(e,c),Dt.add(cr)),r=Math.max(r,i.distanceToSquared(Dt))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,n=this.attributes;if(e===null||n.position===void 0||n.normal===void 0||n.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,r=n.position.array,a=n.normal.array,s=n.uv.array,o=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Vn(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let D=0;D<o;D++)c[D]=new ne,u[D]=new ne;const h=new ne,f=new ne,d=new ne,m=new dt,g=new dt,p=new dt,v=new ne,_=new ne;function x(D,N,J){h.fromArray(r,D*3),f.fromArray(r,N*3),d.fromArray(r,J*3),m.fromArray(s,D*2),g.fromArray(s,N*2),p.fromArray(s,J*2),f.sub(h),d.sub(h),g.sub(m),p.sub(m);const k=1/(g.x*p.y-p.x*g.y);!isFinite(k)||(v.copy(f).multiplyScalar(p.y).addScaledVector(d,-g.y).multiplyScalar(k),_.copy(d).multiplyScalar(g.x).addScaledVector(f,-p.x).multiplyScalar(k),c[D].add(v),c[N].add(v),c[J].add(v),u[D].add(_),u[N].add(_),u[J].add(_))}let y=this.groups;y.length===0&&(y=[{start:0,count:i.length}]);for(let D=0,N=y.length;D<N;++D){const J=y[D],k=J.start,G=J.count;for(let H=k,z=k+G;H<z;H+=3)x(i[H+0],i[H+1],i[H+2])}const M=new ne,T=new ne,L=new ne,b=new ne;function S(D){L.fromArray(a,D*3),b.copy(L);const N=c[D];M.copy(N),M.sub(L.multiplyScalar(L.dot(N))).normalize(),T.crossVectors(b,N);const k=T.dot(u[D])<0?-1:1;l[D*4]=M.x,l[D*4+1]=M.y,l[D*4+2]=M.z,l[D*4+3]=k}for(let D=0,N=y.length;D<N;++D){const J=y[D],k=J.start,G=J.count;for(let H=k,z=k+G;H<z;H+=3)S(i[H+0]),S(i[H+1]),S(i[H+2])}}computeVertexNormals(){const e=this.index,n=this.getAttribute("position");if(n!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Vn(new Float32Array(n.count*3),3),this.setAttribute("normal",i);else for(let f=0,d=i.count;f<d;f++)i.setXYZ(f,0,0,0);const r=new ne,a=new ne,s=new ne,o=new ne,l=new ne,c=new ne,u=new ne,h=new ne;if(e)for(let f=0,d=e.count;f<d;f+=3){const m=e.getX(f+0),g=e.getX(f+1),p=e.getX(f+2);r.fromBufferAttribute(n,m),a.fromBufferAttribute(n,g),s.fromBufferAttribute(n,p),u.subVectors(s,a),h.subVectors(r,a),u.cross(h),o.fromBufferAttribute(i,m),l.fromBufferAttribute(i,g),c.fromBufferAttribute(i,p),o.add(u),l.add(u),c.add(u),i.setXYZ(m,o.x,o.y,o.z),i.setXYZ(g,l.x,l.y,l.z),i.setXYZ(p,c.x,c.y,c.z)}else for(let f=0,d=n.count;f<d;f+=3)r.fromBufferAttribute(n,f+0),a.fromBufferAttribute(n,f+1),s.fromBufferAttribute(n,f+2),u.subVectors(s,a),h.subVectors(r,a),u.cross(h),i.setXYZ(f+0,u.x,u.y,u.z),i.setXYZ(f+1,u.x,u.y,u.z),i.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let n=0,i=e.count;n<i;n++)Dt.fromBufferAttribute(e,n),Dt.normalize(),e.setXYZ(n,Dt.x,Dt.y,Dt.z)}toNonIndexed(){function e(o,l){const c=o.array,u=o.itemSize,h=o.normalized,f=new c.constructor(l.length*u);let d=0,m=0;for(let g=0,p=l.length;g<p;g++){o.isInterleavedBufferAttribute?d=l[g]*o.data.stride+o.offset:d=l[g]*u;for(let v=0;v<u;v++)f[m++]=c[d++]}return new Vn(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new On,i=this.index.array,r=this.attributes;for(const o in r){const l=r[o],c=e(l,i);n.setAttribute(o,c)}const a=this.morphAttributes;for(const o in a){const l=[],c=a[o];for(let u=0,h=c.length;u<h;u++){const f=c[u],d=e(f,i);l.push(d)}n.morphAttributes[o]=l}n.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,l=s.length;o<l;o++){const c=s[o];n.addGroup(c.start,c.count,c.materialIndex)}return n}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const n=this.index;n!==null&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let a=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h];u.push(d.toJSON(e.data))}u.length>0&&(r[l]=u,a=!0)}a&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(n));const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(n))}const a=e.morphAttributes;for(const c in a){const u=[],h=a[c];for(let f=0,d=h.length;f<d;f++)u.push(h[f].clone(n));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let c=0,u=s.length;c<u;c++){const h=s[c];this.addGroup(h.start,h.count,h.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const th=new wt,ur=new $c,Sl=new cs,aa=new ne,sa=new ne,oa=new ne,El=new ne,Ts=new ne,As=new dt,Ls=new dt,Cs=new dt,Tl=new ne,Ps=new ne;class kn extends Nt{constructor(e=new On,n=new Bf){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,s=r.length;a<s;a++){const o=r[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=a}}}}getVertexPosition(e,n){const i=this.geometry,r=i.attributes.position,a=i.morphAttributes.position,s=i.morphTargetsRelative;n.fromBufferAttribute(r,e);const o=this.morphTargetInfluences;if(a&&o){Ts.set(0,0,0);for(let l=0,c=a.length;l<c;l++){const u=o[l],h=a[l];u!==0&&(El.fromBufferAttribute(h,e),s?Ts.addScaledVector(El,u):Ts.addScaledVector(El.sub(n),u))}n.add(Ts)}return this.isSkinnedMesh&&this.boneTransform(e,n),n}raycast(e,n){const i=this.geometry,r=this.material,a=this.matrixWorld;if(r===void 0||(i.boundingSphere===null&&i.computeBoundingSphere(),Sl.copy(i.boundingSphere),Sl.applyMatrix4(a),e.ray.intersectsSphere(Sl)===!1)||(th.copy(a).invert(),ur.copy(e.ray).applyMatrix4(th),i.boundingBox!==null&&ur.intersectsBox(i.boundingBox)===!1))return;let s;const o=i.index,l=i.attributes.position,c=i.attributes.uv,u=i.attributes.uv2,h=i.groups,f=i.drawRange;if(o!==null)if(Array.isArray(r))for(let d=0,m=h.length;d<m;d++){const g=h[d],p=r[g.materialIndex],v=Math.max(g.start,f.start),_=Math.min(o.count,Math.min(g.start+g.count,f.start+f.count));for(let x=v,y=_;x<y;x+=3){const M=o.getX(x),T=o.getX(x+1),L=o.getX(x+2);s=Rs(this,p,e,ur,c,u,M,T,L),s&&(s.faceIndex=Math.floor(x/3),s.face.materialIndex=g.materialIndex,n.push(s))}}else{const d=Math.max(0,f.start),m=Math.min(o.count,f.start+f.count);for(let g=d,p=m;g<p;g+=3){const v=o.getX(g),_=o.getX(g+1),x=o.getX(g+2);s=Rs(this,r,e,ur,c,u,v,_,x),s&&(s.faceIndex=Math.floor(g/3),n.push(s))}}else if(l!==void 0)if(Array.isArray(r))for(let d=0,m=h.length;d<m;d++){const g=h[d],p=r[g.materialIndex],v=Math.max(g.start,f.start),_=Math.min(l.count,Math.min(g.start+g.count,f.start+f.count));for(let x=v,y=_;x<y;x+=3){const M=x,T=x+1,L=x+2;s=Rs(this,p,e,ur,c,u,M,T,L),s&&(s.faceIndex=Math.floor(x/3),s.face.materialIndex=g.materialIndex,n.push(s))}}else{const d=Math.max(0,f.start),m=Math.min(l.count,f.start+f.count);for(let g=d,p=m;g<p;g+=3){const v=g,_=g+1,x=g+2;s=Rs(this,r,e,ur,c,u,v,_,x),s&&(s.faceIndex=Math.floor(g/3),n.push(s))}}}}function fm(t,e,n,i,r,a,s,o){let l;if(e.side===wn?l=i.intersectTriangle(s,a,r,!0,o):l=i.intersectTriangle(r,a,s,e.side===wi,o),l===null)return null;Ps.copy(o),Ps.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(Ps);return c<n.near||c>n.far?null:{distance:c,point:Ps.clone(),object:t}}function Rs(t,e,n,i,r,a,s,o,l){t.getVertexPosition(s,aa),t.getVertexPosition(o,sa),t.getVertexPosition(l,oa);const c=fm(t,e,n,i,aa,sa,oa,Tl);if(c){r&&(As.fromBufferAttribute(r,s),Ls.fromBufferAttribute(r,o),Cs.fromBufferAttribute(r,l),c.uv=ri.getUV(Tl,aa,sa,oa,As,Ls,Cs,new dt)),a&&(As.fromBufferAttribute(a,s),Ls.fromBufferAttribute(a,o),Cs.fromBufferAttribute(a,l),c.uv2=ri.getUV(Tl,aa,sa,oa,As,Ls,Cs,new dt));const u={a:s,b:o,c:l,normal:new ne,materialIndex:0};ri.getNormal(aa,sa,oa,u.normal),c.face=u}return c}class hs extends On{constructor(e=1,n=1,i=1,r=1,a=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:r,heightSegments:a,depthSegments:s};const o=this;r=Math.floor(r),a=Math.floor(a),s=Math.floor(s);const l=[],c=[],u=[],h=[];let f=0,d=0;m("z","y","x",-1,-1,i,n,e,s,a,0),m("z","y","x",1,-1,i,n,-e,s,a,1),m("x","z","y",1,1,e,i,n,r,s,2),m("x","z","y",1,-1,e,i,-n,r,s,3),m("x","y","z",1,-1,e,n,i,r,a,4),m("x","y","z",-1,-1,e,n,-i,r,a,5),this.setIndex(l),this.setAttribute("position",new Wt(c,3)),this.setAttribute("normal",new Wt(u,3)),this.setAttribute("uv",new Wt(h,2));function m(g,p,v,_,x,y,M,T,L,b,S){const D=y/L,N=M/b,J=y/2,k=M/2,G=T/2,H=L+1,z=b+1;let Z=0,w=0;const R=new ne;for(let V=0;V<z;V++){const F=V*N-k;for(let O=0;O<H;O++){const ee=O*D-J;R[g]=ee*_,R[p]=F*x,R[v]=G,c.push(R.x,R.y,R.z),R[g]=0,R[p]=0,R[v]=T>0?1:-1,u.push(R.x,R.y,R.z),h.push(O/L),h.push(1-V/b),Z+=1}}for(let V=0;V<b;V++)for(let F=0;F<L;F++){const O=f+F+H*V,ee=f+F+H*(V+1),W=f+(F+1)+H*(V+1),se=f+(F+1)+H*V;l.push(O,ee,se),l.push(ee,W,se),w+=6}o.addGroup(d,w,S),d+=w,f+=Z}}static fromJSON(e){return new hs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Cr(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function kt(t){const e={};for(let n=0;n<t.length;n++){const i=Cr(t[n]);for(const r in i)e[r]=i[r]}return e}function dm(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n].clone());return e}function Vf(t){return t.getRenderTarget()===null&&t.outputEncoding===gt?Nn:_a}const pm={clone:Cr,merge:kt};var mm=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,gm=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Xi extends oi{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=mm,this.fragmentShader=gm,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Cr(e.uniforms),this.uniformsGroups=dm(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const n=super.toJSON(e);n.glslVersion=this.glslVersion,n.uniforms={};for(const r in this.uniforms){const s=this.uniforms[r].value;s&&s.isTexture?n.uniforms[r]={type:"t",value:s.toJSON(e).uuid}:s&&s.isColor?n.uniforms[r]={type:"c",value:s.getHex()}:s&&s.isVector2?n.uniforms[r]={type:"v2",value:s.toArray()}:s&&s.isVector3?n.uniforms[r]={type:"v3",value:s.toArray()}:s&&s.isVector4?n.uniforms[r]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?n.uniforms[r]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?n.uniforms[r]={type:"m4",value:s.toArray()}:n.uniforms[r]={value:s}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(n.extensions=i),n}}class Hf extends Nt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new wt,this.projectionMatrix=new wt,this.projectionMatrixInverse=new wt}copy(e,n){return super.copy(e,n),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(-n[8],-n[9],-n[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,n){super.updateWorldMatrix(e,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class fn extends Hf{constructor(e=50,n=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=n,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const n=.5*this.getFilmHeight()/e;this.fov=Wu*2*Math.atan(n),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(sl*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Wu*2*Math.atan(Math.tan(sl*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,n,i,r,a,s){this.aspect=e/n,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=r,this.view.width=a,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let n=e*Math.tan(sl*.5*this.fov)/this.zoom,i=2*n,r=this.aspect*i,a=-.5*r;const s=this.view;if(this.view!==null&&this.view.enabled){const l=s.fullWidth,c=s.fullHeight;a+=s.offsetX*r/l,n-=s.offsetY*i/c,r*=s.width/l,i*=s.height/c}const o=this.filmOffset;o!==0&&(a+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+r,n,n-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,this.view!==null&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}}const hr=-90,fr=1;class vm extends Nt{constructor(e,n,i){super(),this.type="CubeCamera",this.renderTarget=i;const r=new fn(hr,fr,e,n);r.layers=this.layers,r.up.set(0,1,0),r.lookAt(1,0,0),this.add(r);const a=new fn(hr,fr,e,n);a.layers=this.layers,a.up.set(0,1,0),a.lookAt(-1,0,0),this.add(a);const s=new fn(hr,fr,e,n);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(0,1,0),this.add(s);const o=new fn(hr,fr,e,n);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(0,-1,0),this.add(o);const l=new fn(hr,fr,e,n);l.layers=this.layers,l.up.set(0,1,0),l.lookAt(0,0,1),this.add(l);const c=new fn(hr,fr,e,n);c.layers=this.layers,c.up.set(0,1,0),c.lookAt(0,0,-1),this.add(c)}update(e,n){this.parent===null&&this.updateMatrixWorld();const i=this.renderTarget,[r,a,s,o,l,c]=this.children,u=e.getRenderTarget(),h=e.toneMapping,f=e.xr.enabled;e.toneMapping=si,e.xr.enabled=!1;const d=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(n,r),e.setRenderTarget(i,1),e.render(n,a),e.setRenderTarget(i,2),e.render(n,s),e.setRenderTarget(i,3),e.render(n,o),e.setRenderTarget(i,4),e.render(n,l),i.texture.generateMipmaps=d,e.setRenderTarget(i,5),e.render(n,c),e.setRenderTarget(u),e.toneMapping=h,e.xr.enabled=f,i.texture.needsPMREMUpdate=!0}}class Wf extends tn{constructor(e,n,i,r,a,s,o,l,c,u){e=e!==void 0?e:[],n=n!==void 0?n:Tr,super(e,n,i,r,a,s,o,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class ym extends ji{constructor(e=1,n={}){super(e,e,n),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];this.texture=new Wf(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:bn}fromEquirectangularTexture(e,n){this.texture.type=n.type,this.texture.encoding=n.encoding,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new hs(5,5,5),a=new Xi({name:"CubemapFromEquirect",uniforms:Cr(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:wn,blending:_i});a.uniforms.tEquirect.value=n;const s=new kn(r,a),o=n.minFilter;return n.minFilter===ya&&(n.minFilter=bn),new vm(1,10,this).update(e,s),n.minFilter=o,s.geometry.dispose(),s.material.dispose(),this}clear(e,n,i,r){const a=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(n,i,r);e.setRenderTarget(a)}}const Al=new ne,xm=new ne,_m=new pn;class Oi{constructor(e=new ne(1,0,0),n=0){this.isPlane=!0,this.normal=e,this.constant=n}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,r){return this.normal.set(e,n,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const r=Al.subVectors(i,n).cross(xm.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,n){const i=e.delta(Al),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):null;const a=-(e.start.dot(this.normal)+this.constant)/r;return a<0||a>1?null:n.copy(i).multiplyScalar(a).add(e.start)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||_m.getNormalMatrix(e),r=this.coplanarPoint(Al).applyMatrix4(e),a=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(a),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const dr=new cs,Ds=new ne;class Zc{constructor(e=new Oi,n=new Oi,i=new Oi,r=new Oi,a=new Oi,s=new Oi){this.planes=[e,n,i,r,a,s]}set(e,n,i,r,a,s){const o=this.planes;return o[0].copy(e),o[1].copy(n),o[2].copy(i),o[3].copy(r),o[4].copy(a),o[5].copy(s),this}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const n=this.planes,i=e.elements,r=i[0],a=i[1],s=i[2],o=i[3],l=i[4],c=i[5],u=i[6],h=i[7],f=i[8],d=i[9],m=i[10],g=i[11],p=i[12],v=i[13],_=i[14],x=i[15];return n[0].setComponents(o-r,h-l,g-f,x-p).normalize(),n[1].setComponents(o+r,h+l,g+f,x+p).normalize(),n[2].setComponents(o+a,h+c,g+d,x+v).normalize(),n[3].setComponents(o-a,h-c,g-d,x-v).normalize(),n[4].setComponents(o-s,h-u,g-m,x-_).normalize(),n[5].setComponents(o+s,h+u,g+m,x+_).normalize(),this}intersectsObject(e){const n=e.geometry;return n.boundingSphere===null&&n.computeBoundingSphere(),dr.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(dr)}intersectsSprite(e){return dr.center.set(0,0,0),dr.radius=.7071067811865476,dr.applyMatrix4(e.matrixWorld),this.intersectsSphere(dr)}intersectsSphere(e){const n=this.planes,i=e.center,r=-e.radius;for(let a=0;a<6;a++)if(n[a].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const r=n[i];if(Ds.x=r.normal.x>0?e.max.x:e.min.x,Ds.y=r.normal.y>0?e.max.y:e.min.y,Ds.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Ds)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function jf(){let t=null,e=!1,n=null,i=null;function r(a,s){n(a,s),i=t.requestAnimationFrame(r)}return{start:function(){e!==!0&&n!==null&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(a){n=a},setContext:function(a){t=a}}}function bm(t,e){const n=e.isWebGL2,i=new WeakMap;function r(c,u){const h=c.array,f=c.usage,d=t.createBuffer();t.bindBuffer(u,d),t.bufferData(u,h,f),c.onUploadCallback();let m;if(h instanceof Float32Array)m=5126;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(n)m=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else m=5123;else if(h instanceof Int16Array)m=5122;else if(h instanceof Uint32Array)m=5125;else if(h instanceof Int32Array)m=5124;else if(h instanceof Int8Array)m=5120;else if(h instanceof Uint8Array)m=5121;else if(h instanceof Uint8ClampedArray)m=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:d,type:m,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function a(c,u,h){const f=u.array,d=u.updateRange;t.bindBuffer(h,c),d.count===-1?t.bufferSubData(h,0,f):(n?t.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):t.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1),u.onUploadCallback()}function s(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u&&(t.deleteBuffer(u.buffer),i.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const f=i.get(c);(!f||f.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=i.get(c);h===void 0?i.set(c,r(c,u)):h.version<c.version&&(a(h.buffer,c,u),h.version=c.version)}return{get:s,remove:o,update:l}}class Jc extends On{constructor(e=1,n=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:r};const a=e/2,s=n/2,o=Math.floor(i),l=Math.floor(r),c=o+1,u=l+1,h=e/o,f=n/l,d=[],m=[],g=[],p=[];for(let v=0;v<u;v++){const _=v*f-s;for(let x=0;x<c;x++){const y=x*h-a;m.push(y,-_,0),g.push(0,0,1),p.push(x/o),p.push(1-v/l)}}for(let v=0;v<l;v++)for(let _=0;_<o;_++){const x=_+c*v,y=_+c*(v+1),M=_+1+c*(v+1),T=_+1+c*v;d.push(x,y,T),d.push(y,M,T)}this.setIndex(d),this.setAttribute("position",new Wt(m,3)),this.setAttribute("normal",new Wt(g,3)),this.setAttribute("uv",new Wt(p,2))}static fromJSON(e){return new Jc(e.width,e.height,e.widthSegments,e.heightSegments)}}var Mm=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,wm=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Sm=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Em=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Tm=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Am=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Lm="vec3 transformed = vec3( position );",Cm=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Pm=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Rm=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Dm=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Im=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Om=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Fm=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Nm=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,zm=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Um=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Bm=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Gm=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,km=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Vm=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Hm=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Wm=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,jm=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Xm=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,qm=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Ym="gl_FragColor = linearToOutputTexel( gl_FragColor );",$m=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Zm=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Jm=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Qm=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Km=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,eg=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,tg=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,ng=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,ig=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,rg=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,ag=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,sg=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,og=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,lg=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,cg=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,ug=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,hg=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,fg=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,dg=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,pg=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,mg=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,gg=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,vg=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,yg=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,xg=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,_g=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,bg=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Mg=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,wg=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Sg=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Eg=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Tg=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Ag=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Lg=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Cg=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Pg=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Rg=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Dg=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Ig=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Og=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Fg=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Ng=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,zg=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Ug=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Bg=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Gg=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,kg=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Vg=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Hg=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Wg=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,jg=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Xg=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,qg=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Yg=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,$g=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Zg=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Jg=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Qg=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Kg=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,ev=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,tv=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,nv=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,iv=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,rv=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,av=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,sv=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,ov=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,lv=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,cv=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,uv=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,hv=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,fv=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,dv=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,pv=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,mv=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,gv=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,vv=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,yv=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,xv=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const _v=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,bv=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Mv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,wv=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Sv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Ev=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Tv=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Av=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Lv=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Cv=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Pv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Rv=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Dv=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Iv=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Ov=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Fv=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Nv=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,zv=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Uv=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Bv=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Gv=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,kv=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Vv=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Hv=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Wv=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,jv=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Xv=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qv=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Yv=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,$v=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Zv=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Jv=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Qv=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Kv=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,at={alphamap_fragment:Mm,alphamap_pars_fragment:wm,alphatest_fragment:Sm,alphatest_pars_fragment:Em,aomap_fragment:Tm,aomap_pars_fragment:Am,begin_vertex:Lm,beginnormal_vertex:Cm,bsdfs:Pm,iridescence_fragment:Rm,bumpmap_pars_fragment:Dm,clipping_planes_fragment:Im,clipping_planes_pars_fragment:Om,clipping_planes_pars_vertex:Fm,clipping_planes_vertex:Nm,color_fragment:zm,color_pars_fragment:Um,color_pars_vertex:Bm,color_vertex:Gm,common:km,cube_uv_reflection_fragment:Vm,defaultnormal_vertex:Hm,displacementmap_pars_vertex:Wm,displacementmap_vertex:jm,emissivemap_fragment:Xm,emissivemap_pars_fragment:qm,encodings_fragment:Ym,encodings_pars_fragment:$m,envmap_fragment:Zm,envmap_common_pars_fragment:Jm,envmap_pars_fragment:Qm,envmap_pars_vertex:Km,envmap_physical_pars_fragment:hg,envmap_vertex:eg,fog_vertex:tg,fog_pars_vertex:ng,fog_fragment:ig,fog_pars_fragment:rg,gradientmap_pars_fragment:ag,lightmap_fragment:sg,lightmap_pars_fragment:og,lights_lambert_fragment:lg,lights_lambert_pars_fragment:cg,lights_pars_begin:ug,lights_toon_fragment:fg,lights_toon_pars_fragment:dg,lights_phong_fragment:pg,lights_phong_pars_fragment:mg,lights_physical_fragment:gg,lights_physical_pars_fragment:vg,lights_fragment_begin:yg,lights_fragment_maps:xg,lights_fragment_end:_g,logdepthbuf_fragment:bg,logdepthbuf_pars_fragment:Mg,logdepthbuf_pars_vertex:wg,logdepthbuf_vertex:Sg,map_fragment:Eg,map_pars_fragment:Tg,map_particle_fragment:Ag,map_particle_pars_fragment:Lg,metalnessmap_fragment:Cg,metalnessmap_pars_fragment:Pg,morphcolor_vertex:Rg,morphnormal_vertex:Dg,morphtarget_pars_vertex:Ig,morphtarget_vertex:Og,normal_fragment_begin:Fg,normal_fragment_maps:Ng,normal_pars_fragment:zg,normal_pars_vertex:Ug,normal_vertex:Bg,normalmap_pars_fragment:Gg,clearcoat_normal_fragment_begin:kg,clearcoat_normal_fragment_maps:Vg,clearcoat_pars_fragment:Hg,iridescence_pars_fragment:Wg,output_fragment:jg,packing:Xg,premultiplied_alpha_fragment:qg,project_vertex:Yg,dithering_fragment:$g,dithering_pars_fragment:Zg,roughnessmap_fragment:Jg,roughnessmap_pars_fragment:Qg,shadowmap_pars_fragment:Kg,shadowmap_pars_vertex:ev,shadowmap_vertex:tv,shadowmask_pars_fragment:nv,skinbase_vertex:iv,skinning_pars_vertex:rv,skinning_vertex:av,skinnormal_vertex:sv,specularmap_fragment:ov,specularmap_pars_fragment:lv,tonemapping_fragment:cv,tonemapping_pars_fragment:uv,transmission_fragment:hv,transmission_pars_fragment:fv,uv_pars_fragment:dv,uv_pars_vertex:pv,uv_vertex:mv,uv2_pars_fragment:gv,uv2_pars_vertex:vv,uv2_vertex:yv,worldpos_vertex:xv,background_vert:_v,background_frag:bv,backgroundCube_vert:Mv,backgroundCube_frag:wv,cube_vert:Sv,cube_frag:Ev,depth_vert:Tv,depth_frag:Av,distanceRGBA_vert:Lv,distanceRGBA_frag:Cv,equirect_vert:Pv,equirect_frag:Rv,linedashed_vert:Dv,linedashed_frag:Iv,meshbasic_vert:Ov,meshbasic_frag:Fv,meshlambert_vert:Nv,meshlambert_frag:zv,meshmatcap_vert:Uv,meshmatcap_frag:Bv,meshnormal_vert:Gv,meshnormal_frag:kv,meshphong_vert:Vv,meshphong_frag:Hv,meshphysical_vert:Wv,meshphysical_frag:jv,meshtoon_vert:Xv,meshtoon_frag:qv,points_vert:Yv,points_frag:$v,shadow_vert:Zv,shadow_frag:Jv,sprite_vert:Qv,sprite_frag:Kv},Ce={common:{diffuse:{value:new ut(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new pn},uv2Transform:{value:new pn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new dt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ut(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ut(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new pn}},sprite:{diffuse:{value:new ut(16777215)},opacity:{value:1},center:{value:new dt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new pn}}},zn={basic:{uniforms:kt([Ce.common,Ce.specularmap,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.fog]),vertexShader:at.meshbasic_vert,fragmentShader:at.meshbasic_frag},lambert:{uniforms:kt([Ce.common,Ce.specularmap,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.fog,Ce.lights,{emissive:{value:new ut(0)}}]),vertexShader:at.meshlambert_vert,fragmentShader:at.meshlambert_frag},phong:{uniforms:kt([Ce.common,Ce.specularmap,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.fog,Ce.lights,{emissive:{value:new ut(0)},specular:{value:new ut(1118481)},shininess:{value:30}}]),vertexShader:at.meshphong_vert,fragmentShader:at.meshphong_frag},standard:{uniforms:kt([Ce.common,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.roughnessmap,Ce.metalnessmap,Ce.fog,Ce.lights,{emissive:{value:new ut(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:at.meshphysical_vert,fragmentShader:at.meshphysical_frag},toon:{uniforms:kt([Ce.common,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.gradientmap,Ce.fog,Ce.lights,{emissive:{value:new ut(0)}}]),vertexShader:at.meshtoon_vert,fragmentShader:at.meshtoon_frag},matcap:{uniforms:kt([Ce.common,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.fog,{matcap:{value:null}}]),vertexShader:at.meshmatcap_vert,fragmentShader:at.meshmatcap_frag},points:{uniforms:kt([Ce.points,Ce.fog]),vertexShader:at.points_vert,fragmentShader:at.points_frag},dashed:{uniforms:kt([Ce.common,Ce.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:at.linedashed_vert,fragmentShader:at.linedashed_frag},depth:{uniforms:kt([Ce.common,Ce.displacementmap]),vertexShader:at.depth_vert,fragmentShader:at.depth_frag},normal:{uniforms:kt([Ce.common,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,{opacity:{value:1}}]),vertexShader:at.meshnormal_vert,fragmentShader:at.meshnormal_frag},sprite:{uniforms:kt([Ce.sprite,Ce.fog]),vertexShader:at.sprite_vert,fragmentShader:at.sprite_frag},background:{uniforms:{uvTransform:{value:new pn},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:at.background_vert,fragmentShader:at.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:at.backgroundCube_vert,fragmentShader:at.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:at.cube_vert,fragmentShader:at.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:at.equirect_vert,fragmentShader:at.equirect_frag},distanceRGBA:{uniforms:kt([Ce.common,Ce.displacementmap,{referencePosition:{value:new ne},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:at.distanceRGBA_vert,fragmentShader:at.distanceRGBA_frag},shadow:{uniforms:kt([Ce.lights,Ce.fog,{color:{value:new ut(0)},opacity:{value:1}}]),vertexShader:at.shadow_vert,fragmentShader:at.shadow_frag}};zn.physical={uniforms:kt([zn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new dt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new ut(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new dt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new ut(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new ut(1,1,1)},specularColorMap:{value:null}}]),vertexShader:at.meshphysical_vert,fragmentShader:at.meshphysical_frag};const Is={r:0,b:0,g:0};function e0(t,e,n,i,r,a,s){const o=new ut(0);let l=a===!0?0:1,c,u,h=null,f=0,d=null;function m(p,v){let _=!1,x=v.isScene===!0?v.background:null;x&&x.isTexture&&(x=(v.backgroundBlurriness>0?n:e).get(x));const y=t.xr,M=y.getSession&&y.getSession();M&&M.environmentBlendMode==="additive"&&(x=null),x===null?g(o,l):x&&x.isColor&&(g(x,1),_=!0),(t.autoClear||_)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),x&&(x.isCubeTexture||x.mapping===Ho)?(u===void 0&&(u=new kn(new hs(1,1,1),new Xi({name:"BackgroundCubeMaterial",uniforms:Cr(zn.backgroundCube.uniforms),vertexShader:zn.backgroundCube.vertexShader,fragmentShader:zn.backgroundCube.fragmentShader,side:wn,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(T,L,b){this.matrixWorld.copyPosition(b.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(u)),u.material.uniforms.envMap.value=x,u.material.uniforms.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,u.material.toneMapped=x.encoding!==gt,(h!==x||f!==x.version||d!==t.toneMapping)&&(u.material.needsUpdate=!0,h=x,f=x.version,d=t.toneMapping),u.layers.enableAll(),p.unshift(u,u.geometry,u.material,0,0,null)):x&&x.isTexture&&(c===void 0&&(c=new kn(new Jc(2,2),new Xi({name:"BackgroundMaterial",uniforms:Cr(zn.background.uniforms),vertexShader:zn.background.vertexShader,fragmentShader:zn.background.fragmentShader,side:wi,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=x,c.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,c.material.toneMapped=x.encoding!==gt,x.matrixAutoUpdate===!0&&x.updateMatrix(),c.material.uniforms.uvTransform.value.copy(x.matrix),(h!==x||f!==x.version||d!==t.toneMapping)&&(c.material.needsUpdate=!0,h=x,f=x.version,d=t.toneMapping),c.layers.enableAll(),p.unshift(c,c.geometry,c.material,0,0,null))}function g(p,v){p.getRGB(Is,Vf(t)),i.buffers.color.setClear(Is.r,Is.g,Is.b,v,s)}return{getClearColor:function(){return o},setClearColor:function(p,v=1){o.set(p),l=v,g(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(p){l=p,g(o,l)},render:m}}function t0(t,e,n,i){const r=t.getParameter(34921),a=i.isWebGL2?null:e.get("OES_vertex_array_object"),s=i.isWebGL2||a!==null,o={},l=p(null);let c=l,u=!1;function h(G,H,z,Z,w){let R=!1;if(s){const V=g(Z,z,H);c!==V&&(c=V,d(c.object)),R=v(G,Z,z,w),R&&_(G,Z,z,w)}else{const V=H.wireframe===!0;(c.geometry!==Z.id||c.program!==z.id||c.wireframe!==V)&&(c.geometry=Z.id,c.program=z.id,c.wireframe=V,R=!0)}w!==null&&n.update(w,34963),(R||u)&&(u=!1,b(G,H,z,Z),w!==null&&t.bindBuffer(34963,n.get(w).buffer))}function f(){return i.isWebGL2?t.createVertexArray():a.createVertexArrayOES()}function d(G){return i.isWebGL2?t.bindVertexArray(G):a.bindVertexArrayOES(G)}function m(G){return i.isWebGL2?t.deleteVertexArray(G):a.deleteVertexArrayOES(G)}function g(G,H,z){const Z=z.wireframe===!0;let w=o[G.id];w===void 0&&(w={},o[G.id]=w);let R=w[H.id];R===void 0&&(R={},w[H.id]=R);let V=R[Z];return V===void 0&&(V=p(f()),R[Z]=V),V}function p(G){const H=[],z=[],Z=[];for(let w=0;w<r;w++)H[w]=0,z[w]=0,Z[w]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:H,enabledAttributes:z,attributeDivisors:Z,object:G,attributes:{},index:null}}function v(G,H,z,Z){const w=c.attributes,R=H.attributes;let V=0;const F=z.getAttributes();for(const O in F)if(F[O].location>=0){const W=w[O];let se=R[O];if(se===void 0&&(O==="instanceMatrix"&&G.instanceMatrix&&(se=G.instanceMatrix),O==="instanceColor"&&G.instanceColor&&(se=G.instanceColor)),W===void 0||W.attribute!==se||se&&W.data!==se.data)return!0;V++}return c.attributesNum!==V||c.index!==Z}function _(G,H,z,Z){const w={},R=H.attributes;let V=0;const F=z.getAttributes();for(const O in F)if(F[O].location>=0){let W=R[O];W===void 0&&(O==="instanceMatrix"&&G.instanceMatrix&&(W=G.instanceMatrix),O==="instanceColor"&&G.instanceColor&&(W=G.instanceColor));const se={};se.attribute=W,W&&W.data&&(se.data=W.data),w[O]=se,V++}c.attributes=w,c.attributesNum=V,c.index=Z}function x(){const G=c.newAttributes;for(let H=0,z=G.length;H<z;H++)G[H]=0}function y(G){M(G,0)}function M(G,H){const z=c.newAttributes,Z=c.enabledAttributes,w=c.attributeDivisors;z[G]=1,Z[G]===0&&(t.enableVertexAttribArray(G),Z[G]=1),w[G]!==H&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](G,H),w[G]=H)}function T(){const G=c.newAttributes,H=c.enabledAttributes;for(let z=0,Z=H.length;z<Z;z++)H[z]!==G[z]&&(t.disableVertexAttribArray(z),H[z]=0)}function L(G,H,z,Z,w,R){i.isWebGL2===!0&&(z===5124||z===5125)?t.vertexAttribIPointer(G,H,z,w,R):t.vertexAttribPointer(G,H,z,Z,w,R)}function b(G,H,z,Z){if(i.isWebGL2===!1&&(G.isInstancedMesh||Z.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;x();const w=Z.attributes,R=z.getAttributes(),V=H.defaultAttributeValues;for(const F in R){const O=R[F];if(O.location>=0){let ee=w[F];if(ee===void 0&&(F==="instanceMatrix"&&G.instanceMatrix&&(ee=G.instanceMatrix),F==="instanceColor"&&G.instanceColor&&(ee=G.instanceColor)),ee!==void 0){const W=ee.normalized,se=ee.itemSize,Y=n.get(ee);if(Y===void 0)continue;const re=Y.buffer,ae=Y.type,ue=Y.bytesPerElement;if(ee.isInterleavedBufferAttribute){const X=ee.data,ve=X.stride,be=ee.offset;if(X.isInstancedInterleavedBuffer){for(let ye=0;ye<O.locationSize;ye++)M(O.location+ye,X.meshPerAttribute);G.isInstancedMesh!==!0&&Z._maxInstanceCount===void 0&&(Z._maxInstanceCount=X.meshPerAttribute*X.count)}else for(let ye=0;ye<O.locationSize;ye++)y(O.location+ye);t.bindBuffer(34962,re);for(let ye=0;ye<O.locationSize;ye++)L(O.location+ye,se/O.locationSize,ae,W,ve*ue,(be+se/O.locationSize*ye)*ue)}else{if(ee.isInstancedBufferAttribute){for(let X=0;X<O.locationSize;X++)M(O.location+X,ee.meshPerAttribute);G.isInstancedMesh!==!0&&Z._maxInstanceCount===void 0&&(Z._maxInstanceCount=ee.meshPerAttribute*ee.count)}else for(let X=0;X<O.locationSize;X++)y(O.location+X);t.bindBuffer(34962,re);for(let X=0;X<O.locationSize;X++)L(O.location+X,se/O.locationSize,ae,W,se*ue,se/O.locationSize*X*ue)}}else if(V!==void 0){const W=V[F];if(W!==void 0)switch(W.length){case 2:t.vertexAttrib2fv(O.location,W);break;case 3:t.vertexAttrib3fv(O.location,W);break;case 4:t.vertexAttrib4fv(O.location,W);break;default:t.vertexAttrib1fv(O.location,W)}}}}T()}function S(){J();for(const G in o){const H=o[G];for(const z in H){const Z=H[z];for(const w in Z)m(Z[w].object),delete Z[w];delete H[z]}delete o[G]}}function D(G){if(o[G.id]===void 0)return;const H=o[G.id];for(const z in H){const Z=H[z];for(const w in Z)m(Z[w].object),delete Z[w];delete H[z]}delete o[G.id]}function N(G){for(const H in o){const z=o[H];if(z[G.id]===void 0)continue;const Z=z[G.id];for(const w in Z)m(Z[w].object),delete Z[w];delete z[G.id]}}function J(){k(),u=!0,c!==l&&(c=l,d(c.object))}function k(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:J,resetDefaultState:k,dispose:S,releaseStatesOfGeometry:D,releaseStatesOfProgram:N,initAttributes:x,enableAttribute:y,disableUnusedAttributes:T}}function n0(t,e,n,i){const r=i.isWebGL2;let a;function s(c){a=c}function o(c,u){t.drawArrays(a,c,u),n.update(u,a,1)}function l(c,u,h){if(h===0)return;let f,d;if(r)f=t,d="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](a,c,u,h),n.update(u,a,h)}this.setMode=s,this.render=o,this.renderInstances=l}function i0(t,e,n){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const L=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function a(L){if(L==="highp"){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";L="mediump"}return L==="mediump"&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s=typeof WebGL2RenderingContext!="undefined"&&t instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&t instanceof WebGL2ComputeRenderingContext;let o=n.precision!==void 0?n.precision:"highp";const l=a(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=s||e.has("WEBGL_draw_buffers"),u=n.logarithmicDepthBuffer===!0,h=t.getParameter(34930),f=t.getParameter(35660),d=t.getParameter(3379),m=t.getParameter(34076),g=t.getParameter(34921),p=t.getParameter(36347),v=t.getParameter(36348),_=t.getParameter(36349),x=f>0,y=s||e.has("OES_texture_float"),M=x&&y,T=s?t.getParameter(36183):0;return{isWebGL2:s,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:a,precision:o,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:p,maxVaryings:v,maxFragmentUniforms:_,vertexTextures:x,floatFragmentTextures:y,floatVertexTextures:M,maxSamples:T}}function r0(t){const e=this;let n=null,i=0,r=!1,a=!1;const s=new Oi,o=new pn,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f,d){const m=h.length!==0||f||i!==0||r;return r=f,n=u(h,d,0),i=h.length,m},this.beginShadows=function(){a=!0,u(null)},this.endShadows=function(){a=!1,c()},this.setState=function(h,f,d){const m=h.clippingPlanes,g=h.clipIntersection,p=h.clipShadows,v=t.get(h);if(!r||m===null||m.length===0||a&&!p)a?u(null):c();else{const _=a?0:i,x=_*4;let y=v.clippingState||null;l.value=y,y=u(m,f,x,d);for(let M=0;M!==x;++M)y[M]=n[M];v.clippingState=y,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=_}};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(h,f,d,m){const g=h!==null?h.length:0;let p=null;if(g!==0){if(p=l.value,m!==!0||p===null){const v=d+g*4,_=f.matrixWorldInverse;o.getNormalMatrix(_),(p===null||p.length<v)&&(p=new Float32Array(v));for(let x=0,y=d;x!==g;++x,y+=4)s.copy(h[x]).applyMatrix4(_,o),s.normal.toArray(p,y),p[y+3]=s.constant}l.value=p,l.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,p}}function a0(t){let e=new WeakMap;function n(s,o){return o===Yl?s.mapping=Tr:o===$l&&(s.mapping=Ar),s}function i(s){if(s&&s.isTexture&&s.isRenderTargetTexture===!1){const o=s.mapping;if(o===Yl||o===$l)if(e.has(s)){const l=e.get(s).texture;return n(l,s.mapping)}else{const l=s.image;if(l&&l.height>0){const c=new ym(l.height/2);return c.fromEquirectangularTexture(t,s),e.set(s,c),s.addEventListener("dispose",r),n(c.texture,s.mapping)}else return null}}return s}function r(s){const o=s.target;o.removeEventListener("dispose",r);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function a(){e=new WeakMap}return{get:i,dispose:a}}class s0 extends Hf{constructor(e=-1,n=1,i=1,r=-1,a=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=n,this.top=i,this.bottom=r,this.near=a,this.far=s,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,n,i,r,a,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=r,this.view.width=a,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let a=i-e,s=i+e,o=r+n,l=r-n;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=c*this.view.offsetX,s=a+c*this.view.width,o-=u*this.view.offsetY,l=o-u*this.view.height}this.projectionMatrix.makeOrthographic(a,s,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,this.view!==null&&(n.object.view=Object.assign({},this.view)),n}}const yr=4,nh=[.125,.215,.35,.446,.526,.582],Ni=20,Ll=new s0,ih=new ut;let Cl=null;const Fi=(1+Math.sqrt(5))/2,pr=1/Fi,rh=[new ne(1,1,1),new ne(-1,1,1),new ne(1,1,-1),new ne(-1,1,-1),new ne(0,Fi,pr),new ne(0,Fi,-pr),new ne(pr,0,Fi),new ne(-pr,0,Fi),new ne(Fi,pr,0),new ne(-Fi,pr,0)];class ah{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,n=0,i=.1,r=100){Cl=this._renderer.getRenderTarget(),this._setSize(256);const a=this._allocateTargets();return a.depthBuffer=!0,this._sceneToCubeUV(e,i,r,a),n>0&&this._blur(a,0,0,n),this._applyPMREM(a),this._cleanup(a),a}fromEquirectangular(e,n=null){return this._fromTexture(e,n)}fromCubemap(e,n=null){return this._fromTexture(e,n)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=lh(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=oh(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Cl),e.scissorTest=!1,Os(e,0,0,e.width,e.height)}_fromTexture(e,n){e.mapping===Tr||e.mapping===Ar?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Cl=this._renderer.getRenderTarget();const i=n||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),n=4*this._cubeSize,i={magFilter:bn,minFilter:bn,generateMipmaps:!1,type:xa,format:In,encoding:Wi,depthBuffer:!1},r=sh(e,n,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=sh(e,n,i);const{_lodMax:a}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=o0(a)),this._blurMaterial=l0(a,e,n)}return r}_compileMaterial(e){const n=new kn(this._lodPlanes[0],e);this._renderer.compile(n,Ll)}_sceneToCubeUV(e,n,i,r){const o=new fn(90,1,n,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,f=u.toneMapping;u.getClearColor(ih),u.toneMapping=si,u.autoClear=!1;const d=new Bf({name:"PMREM.Background",side:wn,depthWrite:!1,depthTest:!1}),m=new kn(new hs,d);let g=!1;const p=e.background;p?p.isColor&&(d.color.copy(p),e.background=null,g=!0):(d.color.copy(ih),g=!0);for(let v=0;v<6;v++){const _=v%3;_===0?(o.up.set(0,l[v],0),o.lookAt(c[v],0,0)):_===1?(o.up.set(0,0,l[v]),o.lookAt(0,c[v],0)):(o.up.set(0,l[v],0),o.lookAt(0,0,c[v]));const x=this._cubeSize;Os(r,_*x,v>2?x:0,x,x),u.setRenderTarget(r),g&&u.render(m,o),u.render(e,o)}m.geometry.dispose(),m.material.dispose(),u.toneMapping=f,u.autoClear=h,e.background=p}_textureToCubeUV(e,n){const i=this._renderer,r=e.mapping===Tr||e.mapping===Ar;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=lh()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=oh());const a=r?this._cubemapMaterial:this._equirectMaterial,s=new kn(this._lodPlanes[0],a),o=a.uniforms;o.envMap.value=e;const l=this._cubeSize;Os(n,0,0,3*l,2*l),i.setRenderTarget(n),i.render(s,Ll)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const a=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),s=rh[(r-1)%rh.length];this._blur(e,r-1,r,a,s)}n.autoClear=i}_blur(e,n,i,r,a){const s=this._pingPongRenderTarget;this._halfBlur(e,s,n,i,r,"latitudinal",a),this._halfBlur(s,e,i,i,r,"longitudinal",a)}_halfBlur(e,n,i,r,a,s,o){const l=this._renderer,c=this._blurMaterial;s!=="latitudinal"&&s!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new kn(this._lodPlanes[r],c),f=c.uniforms,d=this._sizeLods[i]-1,m=isFinite(a)?Math.PI/(2*d):2*Math.PI/(2*Ni-1),g=a/m,p=isFinite(a)?1+Math.floor(u*g):Ni;p>Ni&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${Ni}`);const v=[];let _=0;for(let L=0;L<Ni;++L){const b=L/g,S=Math.exp(-b*b/2);v.push(S),L===0?_+=S:L<p&&(_+=2*S)}for(let L=0;L<v.length;L++)v[L]=v[L]/_;f.envMap.value=e.texture,f.samples.value=p,f.weights.value=v,f.latitudinal.value=s==="latitudinal",o&&(f.poleAxis.value=o);const{_lodMax:x}=this;f.dTheta.value=m,f.mipInt.value=x-i;const y=this._sizeLods[r],M=3*y*(r>x-yr?r-x+yr:0),T=4*(this._cubeSize-y);Os(n,M,T,3*y,2*y),l.setRenderTarget(n),l.render(h,Ll)}}function o0(t){const e=[],n=[],i=[];let r=t;const a=t-yr+1+nh.length;for(let s=0;s<a;s++){const o=Math.pow(2,r);n.push(o);let l=1/o;s>t-yr?l=nh[s-t+yr-1]:s===0&&(l=0),i.push(l);const c=1/(o-2),u=-c,h=1+c,f=[u,u,h,u,h,h,u,u,h,h,u,h],d=6,m=6,g=3,p=2,v=1,_=new Float32Array(g*m*d),x=new Float32Array(p*m*d),y=new Float32Array(v*m*d);for(let T=0;T<d;T++){const L=T%3*2/3-1,b=T>2?0:-1,S=[L,b,0,L+2/3,b,0,L+2/3,b+1,0,L,b,0,L+2/3,b+1,0,L,b+1,0];_.set(S,g*m*T),x.set(f,p*m*T);const D=[T,T,T,T,T,T];y.set(D,v*m*T)}const M=new On;M.setAttribute("position",new Vn(_,g)),M.setAttribute("uv",new Vn(x,p)),M.setAttribute("faceIndex",new Vn(y,v)),e.push(M),r>yr&&r--}return{lodPlanes:e,sizeLods:n,sigmas:i}}function sh(t,e,n){const i=new ji(t,e,n);return i.texture.mapping=Ho,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Os(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function l0(t,e,n){const i=new Float32Array(Ni),r=new ne(0,1,0);return new Xi({name:"SphericalGaussianBlur",defines:{n:Ni,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Qc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:_i,depthTest:!1,depthWrite:!1})}function oh(){return new Xi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Qc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:_i,depthTest:!1,depthWrite:!1})}function lh(){return new Xi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Qc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:_i,depthTest:!1,depthWrite:!1})}function Qc(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function c0(t){let e=new WeakMap,n=null;function i(o){if(o&&o.isTexture){const l=o.mapping,c=l===Yl||l===$l,u=l===Tr||l===Ar;if(c||u)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let h=e.get(o);return n===null&&(n=new ah(t)),h=c?n.fromEquirectangular(o,h):n.fromCubemap(o,h),e.set(o,h),h.texture}else{if(e.has(o))return e.get(o).texture;{const h=o.image;if(c&&h&&h.height>0||u&&h&&r(h)){n===null&&(n=new ah(t));const f=c?n.fromEquirectangular(o):n.fromCubemap(o);return e.set(o,f),o.addEventListener("dispose",a),f.texture}else return null}}}return o}function r(o){let l=0;const c=6;for(let u=0;u<c;u++)o[u]!==void 0&&l++;return l===c}function a(o){const l=o.target;l.removeEventListener("dispose",a);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function s(){e=new WeakMap,n!==null&&(n.dispose(),n=null)}return{get:i,dispose:s}}function u0(t){const e={};function n(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(i)}return e[i]=r,r}return{has:function(i){return n(i)!==null},init:function(i){i.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(i){const r=n(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function h0(t,e,n,i){const r={},a=new WeakMap;function s(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const m in f.attributes)e.remove(f.attributes[m]);f.removeEventListener("dispose",s),delete r[f.id];const d=a.get(f);d&&(e.remove(d),a.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,n.memory.geometries--}function o(h,f){return r[f.id]===!0||(f.addEventListener("dispose",s),r[f.id]=!0,n.memory.geometries++),f}function l(h){const f=h.attributes;for(const m in f)e.update(f[m],34962);const d=h.morphAttributes;for(const m in d){const g=d[m];for(let p=0,v=g.length;p<v;p++)e.update(g[p],34962)}}function c(h){const f=[],d=h.index,m=h.attributes.position;let g=0;if(d!==null){const _=d.array;g=d.version;for(let x=0,y=_.length;x<y;x+=3){const M=_[x+0],T=_[x+1],L=_[x+2];f.push(M,T,T,L,L,M)}}else{const _=m.array;g=m.version;for(let x=0,y=_.length/3-1;x<y;x+=3){const M=x+0,T=x+1,L=x+2;f.push(M,T,T,L,L,M)}}const p=new(If(f)?kf:Gf)(f,1);p.version=g;const v=a.get(h);v&&e.remove(v),a.set(h,p)}function u(h){const f=a.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&c(h)}else c(h);return a.get(h)}return{get:o,update:l,getWireframeAttribute:u}}function f0(t,e,n,i){const r=i.isWebGL2;let a;function s(f){a=f}let o,l;function c(f){o=f.type,l=f.bytesPerElement}function u(f,d){t.drawElements(a,d,o,f*l),n.update(d,a,1)}function h(f,d,m){if(m===0)return;let g,p;if(r)g=t,p="drawElementsInstanced";else if(g=e.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[p](a,d,o,f*l,m),n.update(d,a,m)}this.setMode=s,this.setIndex=c,this.render=u,this.renderInstances=h}function d0(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(a,s,o){switch(n.calls++,s){case 4:n.triangles+=o*(a/3);break;case 1:n.lines+=o*(a/2);break;case 3:n.lines+=o*(a-1);break;case 2:n.lines+=o*a;break;case 0:n.points+=o*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",s);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:r,update:i}}function p0(t,e){return t[0]-e[0]}function m0(t,e){return Math.abs(e[1])-Math.abs(t[1])}function g0(t,e,n){const i={},r=new Float32Array(8),a=new WeakMap,s=new _t,o=[];for(let c=0;c<8;c++)o[c]=[c,0];function l(c,u,h,f){const d=c.morphTargetInfluences;if(e.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,p=g!==void 0?g.length:0;let v=a.get(u);if(v===void 0||v.count!==p){let z=function(){G.dispose(),a.delete(u),u.removeEventListener("dispose",z)};var m=z;v!==void 0&&v.texture.dispose();const y=u.morphAttributes.position!==void 0,M=u.morphAttributes.normal!==void 0,T=u.morphAttributes.color!==void 0,L=u.morphAttributes.position||[],b=u.morphAttributes.normal||[],S=u.morphAttributes.color||[];let D=0;y===!0&&(D=1),M===!0&&(D=2),T===!0&&(D=3);let N=u.attributes.position.count*D,J=1;N>e.maxTextureSize&&(J=Math.ceil(N/e.maxTextureSize),N=e.maxTextureSize);const k=new Float32Array(N*J*4*p),G=new zf(k,N,J,p);G.type=Ui,G.needsUpdate=!0;const H=D*4;for(let Z=0;Z<p;Z++){const w=L[Z],R=b[Z],V=S[Z],F=N*J*4*Z;for(let O=0;O<w.count;O++){const ee=O*H;y===!0&&(s.fromBufferAttribute(w,O),k[F+ee+0]=s.x,k[F+ee+1]=s.y,k[F+ee+2]=s.z,k[F+ee+3]=0),M===!0&&(s.fromBufferAttribute(R,O),k[F+ee+4]=s.x,k[F+ee+5]=s.y,k[F+ee+6]=s.z,k[F+ee+7]=0),T===!0&&(s.fromBufferAttribute(V,O),k[F+ee+8]=s.x,k[F+ee+9]=s.y,k[F+ee+10]=s.z,k[F+ee+11]=V.itemSize===4?s.w:1)}}v={count:p,texture:G,size:new dt(N,J)},a.set(u,v),u.addEventListener("dispose",z)}let _=0;for(let y=0;y<d.length;y++)_+=d[y];const x=u.morphTargetsRelative?1:1-_;f.getUniforms().setValue(t,"morphTargetBaseInfluence",x),f.getUniforms().setValue(t,"morphTargetInfluences",d),f.getUniforms().setValue(t,"morphTargetsTexture",v.texture,n),f.getUniforms().setValue(t,"morphTargetsTextureSize",v.size)}else{const g=d===void 0?0:d.length;let p=i[u.id];if(p===void 0||p.length!==g){p=[];for(let M=0;M<g;M++)p[M]=[M,0];i[u.id]=p}for(let M=0;M<g;M++){const T=p[M];T[0]=M,T[1]=d[M]}p.sort(m0);for(let M=0;M<8;M++)M<g&&p[M][1]?(o[M][0]=p[M][0],o[M][1]=p[M][1]):(o[M][0]=Number.MAX_SAFE_INTEGER,o[M][1]=0);o.sort(p0);const v=u.morphAttributes.position,_=u.morphAttributes.normal;let x=0;for(let M=0;M<8;M++){const T=o[M],L=T[0],b=T[1];L!==Number.MAX_SAFE_INTEGER&&b?(v&&u.getAttribute("morphTarget"+M)!==v[L]&&u.setAttribute("morphTarget"+M,v[L]),_&&u.getAttribute("morphNormal"+M)!==_[L]&&u.setAttribute("morphNormal"+M,_[L]),r[M]=b,x+=b):(v&&u.hasAttribute("morphTarget"+M)===!0&&u.deleteAttribute("morphTarget"+M),_&&u.hasAttribute("morphNormal"+M)===!0&&u.deleteAttribute("morphNormal"+M),r[M]=0)}const y=u.morphTargetsRelative?1:1-x;f.getUniforms().setValue(t,"morphTargetBaseInfluence",y),f.getUniforms().setValue(t,"morphTargetInfluences",r)}}return{update:l}}function v0(t,e,n,i){let r=new WeakMap;function a(l){const c=i.render.frame,u=l.geometry,h=e.get(l,u);return r.get(h)!==c&&(e.update(h),r.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),n.update(l.instanceMatrix,34962),l.instanceColor!==null&&n.update(l.instanceColor,34962)),h}function s(){r=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),n.remove(c.instanceMatrix),c.instanceColor!==null&&n.remove(c.instanceColor)}return{update:a,dispose:s}}const Xf=new tn,qf=new zf,Yf=new nm,$f=new Wf,ch=[],uh=[],hh=new Float32Array(16),fh=new Float32Array(9),dh=new Float32Array(4);function Zr(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let a=ch[r];if(a===void 0&&(a=new Float32Array(r),ch[r]=a),e!==0){i.toArray(a,0);for(let s=1,o=0;s!==e;++s)o+=n,t[s].toArray(a,o)}return a}function Pt(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Rt(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function Wo(t,e){let n=uh[e];n===void 0&&(n=new Int32Array(e),uh[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function y0(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function x0(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Pt(n,e))return;t.uniform2fv(this.addr,e),Rt(n,e)}}function _0(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Pt(n,e))return;t.uniform3fv(this.addr,e),Rt(n,e)}}function b0(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Pt(n,e))return;t.uniform4fv(this.addr,e),Rt(n,e)}}function M0(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Pt(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Rt(n,e)}else{if(Pt(n,i))return;dh.set(i),t.uniformMatrix2fv(this.addr,!1,dh),Rt(n,i)}}function w0(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Pt(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Rt(n,e)}else{if(Pt(n,i))return;fh.set(i),t.uniformMatrix3fv(this.addr,!1,fh),Rt(n,i)}}function S0(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Pt(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Rt(n,e)}else{if(Pt(n,i))return;hh.set(i),t.uniformMatrix4fv(this.addr,!1,hh),Rt(n,i)}}function E0(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function T0(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Pt(n,e))return;t.uniform2iv(this.addr,e),Rt(n,e)}}function A0(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(Pt(n,e))return;t.uniform3iv(this.addr,e),Rt(n,e)}}function L0(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Pt(n,e))return;t.uniform4iv(this.addr,e),Rt(n,e)}}function C0(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function P0(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Pt(n,e))return;t.uniform2uiv(this.addr,e),Rt(n,e)}}function R0(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(Pt(n,e))return;t.uniform3uiv(this.addr,e),Rt(n,e)}}function D0(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Pt(n,e))return;t.uniform4uiv(this.addr,e),Rt(n,e)}}function I0(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2D(e||Xf,r)}function O0(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||Yf,r)}function F0(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(e||$f,r)}function N0(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||qf,r)}function z0(t){switch(t){case 5126:return y0;case 35664:return x0;case 35665:return _0;case 35666:return b0;case 35674:return M0;case 35675:return w0;case 35676:return S0;case 5124:case 35670:return E0;case 35667:case 35671:return T0;case 35668:case 35672:return A0;case 35669:case 35673:return L0;case 5125:return C0;case 36294:return P0;case 36295:return R0;case 36296:return D0;case 35678:case 36198:case 36298:case 36306:case 35682:return I0;case 35679:case 36299:case 36307:return O0;case 35680:case 36300:case 36308:case 36293:return F0;case 36289:case 36303:case 36311:case 36292:return N0}}function U0(t,e){t.uniform1fv(this.addr,e)}function B0(t,e){const n=Zr(e,this.size,2);t.uniform2fv(this.addr,n)}function G0(t,e){const n=Zr(e,this.size,3);t.uniform3fv(this.addr,n)}function k0(t,e){const n=Zr(e,this.size,4);t.uniform4fv(this.addr,n)}function V0(t,e){const n=Zr(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function H0(t,e){const n=Zr(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function W0(t,e){const n=Zr(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function j0(t,e){t.uniform1iv(this.addr,e)}function X0(t,e){t.uniform2iv(this.addr,e)}function q0(t,e){t.uniform3iv(this.addr,e)}function Y0(t,e){t.uniform4iv(this.addr,e)}function $0(t,e){t.uniform1uiv(this.addr,e)}function Z0(t,e){t.uniform2uiv(this.addr,e)}function J0(t,e){t.uniform3uiv(this.addr,e)}function Q0(t,e){t.uniform4uiv(this.addr,e)}function K0(t,e,n){const i=this.cache,r=e.length,a=Wo(n,r);Pt(i,a)||(t.uniform1iv(this.addr,a),Rt(i,a));for(let s=0;s!==r;++s)n.setTexture2D(e[s]||Xf,a[s])}function ey(t,e,n){const i=this.cache,r=e.length,a=Wo(n,r);Pt(i,a)||(t.uniform1iv(this.addr,a),Rt(i,a));for(let s=0;s!==r;++s)n.setTexture3D(e[s]||Yf,a[s])}function ty(t,e,n){const i=this.cache,r=e.length,a=Wo(n,r);Pt(i,a)||(t.uniform1iv(this.addr,a),Rt(i,a));for(let s=0;s!==r;++s)n.setTextureCube(e[s]||$f,a[s])}function ny(t,e,n){const i=this.cache,r=e.length,a=Wo(n,r);Pt(i,a)||(t.uniform1iv(this.addr,a),Rt(i,a));for(let s=0;s!==r;++s)n.setTexture2DArray(e[s]||qf,a[s])}function iy(t){switch(t){case 5126:return U0;case 35664:return B0;case 35665:return G0;case 35666:return k0;case 35674:return V0;case 35675:return H0;case 35676:return W0;case 5124:case 35670:return j0;case 35667:case 35671:return X0;case 35668:case 35672:return q0;case 35669:case 35673:return Y0;case 5125:return $0;case 36294:return Z0;case 36295:return J0;case 36296:return Q0;case 35678:case 36198:case 36298:case 36306:case 35682:return K0;case 35679:case 36299:case 36307:return ey;case 35680:case 36300:case 36308:case 36293:return ty;case 36289:case 36303:case 36311:case 36292:return ny}}class ry{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.setValue=z0(n.type)}}class ay{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.size=n.size,this.setValue=iy(n.type)}}class sy{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,n,i){const r=this.seq;for(let a=0,s=r.length;a!==s;++a){const o=r[a];o.setValue(e,n[o.id],i)}}}const Pl=/(\w+)(\])?(\[|\.)?/g;function ph(t,e){t.seq.push(e),t.map[e.id]=e}function oy(t,e,n){const i=t.name,r=i.length;for(Pl.lastIndex=0;;){const a=Pl.exec(i),s=Pl.lastIndex;let o=a[1];const l=a[2]==="]",c=a[3];if(l&&(o=o|0),c===void 0||c==="["&&s+2===r){ph(n,c===void 0?new ry(o,t,e):new ay(o,t,e));break}else{let h=n.map[o];h===void 0&&(h=new sy(o),ph(n,h)),n=h}}}class Ws{constructor(e,n){this.seq=[],this.map={};const i=e.getProgramParameter(n,35718);for(let r=0;r<i;++r){const a=e.getActiveUniform(n,r),s=e.getUniformLocation(n,a.name);oy(a,s,this)}}setValue(e,n,i,r){const a=this.map[n];a!==void 0&&a.setValue(e,i,r)}setOptional(e,n,i){const r=n[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,n,i,r){for(let a=0,s=n.length;a!==s;++a){const o=n[a],l=i[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,r)}}static seqWithValue(e,n){const i=[];for(let r=0,a=e.length;r!==a;++r){const s=e[r];s.id in n&&i.push(s)}return i}}function mh(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}let ly=0;function cy(t,e){const n=t.split(`
`),i=[],r=Math.max(e-6,0),a=Math.min(e+6,n.length);for(let s=r;s<a;s++){const o=s+1;i.push(`${o===e?">":" "} ${o}: ${n[s]}`)}return i.join(`
`)}function uy(t){switch(t){case Wi:return["Linear","( value )"];case gt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function gh(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();if(i&&r==="")return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const s=parseInt(a[1]);return n.toUpperCase()+`

`+r+`

`+cy(t.getShaderSource(e),s)}else return r}function hy(t,e){const n=uy(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function fy(t,e){let n;switch(e){case Cp:n="Linear";break;case Pp:n="Reinhard";break;case Rp:n="OptimizedCineon";break;case Dp:n="ACESFilmic";break;case Ip:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function dy(t){return[t.extensionDerivatives||!!t.envMapCubeUVHeight||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||t.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ua).join(`
`)}function py(t){const e=[];for(const n in t){const i=t[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function my(t,e){const n={},i=t.getProgramParameter(e,35721);for(let r=0;r<i;r++){const a=t.getActiveAttrib(e,r),s=a.name;let o=1;a.type===35674&&(o=2),a.type===35675&&(o=3),a.type===35676&&(o=4),n[s]={type:a.type,location:t.getAttribLocation(e,s),locationSize:o}}return n}function ua(t){return t!==""}function vh(t,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function yh(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const gy=/^[ \t]*#include +<([\w\d./]+)>/gm;function Kl(t){return t.replace(gy,vy)}function vy(t,e){const n=at[e];if(n===void 0)throw new Error("Can not resolve #include <"+e+">");return Kl(n)}const yy=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function xh(t){return t.replace(yy,xy)}function xy(t,e,n,i){let r="";for(let a=parseInt(e);a<parseInt(n);a++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function _h(t){let e="precision "+t.precision+` float;
precision `+t.precision+" int;";return t.precision==="highp"?e+=`
#define HIGH_PRECISION`:t.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:t.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function _y(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===Af?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===op?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===ca&&(e="SHADOWMAP_TYPE_VSM"),e}function by(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case Tr:case Ar:e="ENVMAP_TYPE_CUBE";break;case Ho:e="ENVMAP_TYPE_CUBE_UV";break}return e}function My(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case Ar:e="ENVMAP_MODE_REFRACTION";break}return e}function wy(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case Yc:e="ENVMAP_BLENDING_MULTIPLY";break;case Ap:e="ENVMAP_BLENDING_MIX";break;case Lp:e="ENVMAP_BLENDING_ADD";break}return e}function Sy(t){const e=t.envMapCubeUVHeight;if(e===null)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),7*16)),texelHeight:i,maxMip:n}}function Ey(t,e,n,i){const r=t.getContext(),a=n.defines;let s=n.vertexShader,o=n.fragmentShader;const l=_y(n),c=by(n),u=My(n),h=wy(n),f=Sy(n),d=n.isWebGL2?"":dy(n),m=py(a),g=r.createProgram();let p,v,_=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(p=[m].filter(ua).join(`
`),p.length>0&&(p+=`
`),v=[d,m].filter(ua).join(`
`),v.length>0&&(v+=`
`)):(p=[_h(n),"#define SHADER_NAME "+n.shaderName,m,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ua).join(`
`),v=[d,_h(n),"#define SHADER_NAME "+n.shaderName,m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+u:"",n.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==si?"#define TONE_MAPPING":"",n.toneMapping!==si?at.tonemapping_pars_fragment:"",n.toneMapping!==si?fy("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",at.encodings_pars_fragment,hy("linearToOutputTexel",n.outputEncoding),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(ua).join(`
`)),s=Kl(s),s=vh(s,n),s=yh(s,n),o=Kl(o),o=vh(o,n),o=yh(o,n),s=xh(s),o=xh(o),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(_=`#version 300 es
`,p=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,v=["#define varying in",n.glslVersion===Hu?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===Hu?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const x=_+p+s,y=_+v+o,M=mh(r,35633,x),T=mh(r,35632,y);if(r.attachShader(g,M),r.attachShader(g,T),n.index0AttributeName!==void 0?r.bindAttribLocation(g,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(g,0,"position"),r.linkProgram(g),t.debug.checkShaderErrors){const S=r.getProgramInfoLog(g).trim(),D=r.getShaderInfoLog(M).trim(),N=r.getShaderInfoLog(T).trim();let J=!0,k=!0;if(r.getProgramParameter(g,35714)===!1){J=!1;const G=gh(r,M,"vertex"),H=gh(r,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(g,35715)+`

Program Info Log: `+S+`
`+G+`
`+H)}else S!==""?console.warn("THREE.WebGLProgram: Program Info Log:",S):(D===""||N==="")&&(k=!1);k&&(this.diagnostics={runnable:J,programLog:S,vertexShader:{log:D,prefix:p},fragmentShader:{log:N,prefix:v}})}r.deleteShader(M),r.deleteShader(T);let L;this.getUniforms=function(){return L===void 0&&(L=new Ws(r,g)),L};let b;return this.getAttributes=function(){return b===void 0&&(b=my(r,g)),b},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(g),this.program=void 0},this.name=n.shaderName,this.id=ly++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=M,this.fragmentShader=T,this}let Ty=0;class Ay{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(n),a=this._getShaderStage(i),s=this._getShaderCacheForMaterial(e);return s.has(r)===!1&&(s.add(r),r.usedTimes++),s.has(a)===!1&&(s.add(a),a.usedTimes++),this}remove(e){const n=this.materialCache.get(e);for(const i of n)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const n=this.materialCache;let i=n.get(e);return i===void 0&&(i=new Set,n.set(e,i)),i}_getShaderStage(e){const n=this.shaderCache;let i=n.get(e);return i===void 0&&(i=new Ly(e),n.set(e,i)),i}}class Ly{constructor(e){this.id=Ty++,this.code=e,this.usedTimes=0}}function Cy(t,e,n,i,r,a,s){const o=new Uf,l=new Ay,c=[],u=r.isWebGL2,h=r.logarithmicDepthBuffer,f=r.vertexTextures;let d=r.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(b,S,D,N,J){const k=N.fog,G=J.geometry,H=b.isMeshStandardMaterial?N.environment:null,z=(b.isMeshStandardMaterial?n:e).get(b.envMap||H),Z=!!z&&z.mapping===Ho?z.image.height:null,w=m[b.type];b.precision!==null&&(d=r.getMaxPrecision(b.precision),d!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",d,"instead."));const R=G.morphAttributes.position||G.morphAttributes.normal||G.morphAttributes.color,V=R!==void 0?R.length:0;let F=0;G.morphAttributes.position!==void 0&&(F=1),G.morphAttributes.normal!==void 0&&(F=2),G.morphAttributes.color!==void 0&&(F=3);let O,ee,W,se;if(w){const ve=zn[w];O=ve.vertexShader,ee=ve.fragmentShader}else O=b.vertexShader,ee=b.fragmentShader,l.update(b),W=l.getVertexShaderID(b),se=l.getFragmentShaderID(b);const Y=t.getRenderTarget(),re=b.alphaTest>0,ae=b.clearcoat>0,ue=b.iridescence>0;return{isWebGL2:u,shaderID:w,shaderName:b.type,vertexShader:O,fragmentShader:ee,defines:b.defines,customVertexShaderID:W,customFragmentShaderID:se,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:d,instancing:J.isInstancedMesh===!0,instancingColor:J.isInstancedMesh===!0&&J.instanceColor!==null,supportsVertexTextures:f,outputEncoding:Y===null?t.outputEncoding:Y.isXRRenderTarget===!0?Y.texture.encoding:Wi,map:!!b.map,matcap:!!b.matcap,envMap:!!z,envMapMode:z&&z.mapping,envMapCubeUVHeight:Z,lightMap:!!b.lightMap,aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,objectSpaceNormalMap:b.normalMapType===Qp,tangentSpaceNormalMap:b.normalMapType===Df,decodeVideoTexture:!!b.map&&b.map.isVideoTexture===!0&&b.map.encoding===gt,clearcoat:ae,clearcoatMap:ae&&!!b.clearcoatMap,clearcoatRoughnessMap:ae&&!!b.clearcoatRoughnessMap,clearcoatNormalMap:ae&&!!b.clearcoatNormalMap,iridescence:ue,iridescenceMap:ue&&!!b.iridescenceMap,iridescenceThicknessMap:ue&&!!b.iridescenceThicknessMap,displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,specularIntensityMap:!!b.specularIntensityMap,specularColorMap:!!b.specularColorMap,opaque:b.transparent===!1&&b.blending===br,alphaMap:!!b.alphaMap,alphaTest:re,gradientMap:!!b.gradientMap,sheen:b.sheen>0,sheenColorMap:!!b.sheenColorMap,sheenRoughnessMap:!!b.sheenRoughnessMap,transmission:b.transmission>0,transmissionMap:!!b.transmissionMap,thicknessMap:!!b.thicknessMap,combine:b.combine,vertexTangents:!!b.normalMap&&!!G.attributes.tangent,vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!G.attributes.color&&G.attributes.color.itemSize===4,vertexUvs:!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatMap||!!b.clearcoatRoughnessMap||!!b.clearcoatNormalMap||!!b.iridescenceMap||!!b.iridescenceThicknessMap||!!b.displacementMap||!!b.transmissionMap||!!b.thicknessMap||!!b.specularIntensityMap||!!b.specularColorMap||!!b.sheenColorMap||!!b.sheenRoughnessMap,uvsVertexOnly:!(!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatNormalMap||!!b.iridescenceMap||!!b.iridescenceThicknessMap||b.transmission>0||!!b.transmissionMap||!!b.thicknessMap||!!b.specularIntensityMap||!!b.specularColorMap||b.sheen>0||!!b.sheenColorMap||!!b.sheenRoughnessMap)&&!!b.displacementMap,fog:!!k,useFog:b.fog===!0,fogExp2:k&&k.isFogExp2,flatShading:!!b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:h,skinning:J.isSkinnedMesh===!0,morphTargets:G.morphAttributes.position!==void 0,morphNormals:G.morphAttributes.normal!==void 0,morphColors:G.morphAttributes.color!==void 0,morphTargetsCount:V,morphTextureStride:F,numDirLights:S.directional.length,numPointLights:S.point.length,numSpotLights:S.spot.length,numSpotLightMaps:S.spotLightMap.length,numRectAreaLights:S.rectArea.length,numHemiLights:S.hemi.length,numDirLightShadows:S.directionalShadowMap.length,numPointLightShadows:S.pointShadowMap.length,numSpotLightShadows:S.spotShadowMap.length,numSpotLightShadowsWithMaps:S.numSpotLightShadowsWithMaps,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:b.dithering,shadowMapEnabled:t.shadowMap.enabled&&D.length>0,shadowMapType:t.shadowMap.type,toneMapping:b.toneMapped?t.toneMapping:si,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===qc,flipSided:b.side===wn,useDepthPacking:!!b.depthPacking,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:b.extensions&&b.extensions.derivatives,extensionFragDepth:b.extensions&&b.extensions.fragDepth,extensionDrawBuffers:b.extensions&&b.extensions.drawBuffers,extensionShaderTextureLOD:b.extensions&&b.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||i.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function p(b){const S=[];if(b.shaderID?S.push(b.shaderID):(S.push(b.customVertexShaderID),S.push(b.customFragmentShaderID)),b.defines!==void 0)for(const D in b.defines)S.push(D),S.push(b.defines[D]);return b.isRawShaderMaterial===!1&&(v(S,b),_(S,b),S.push(t.outputEncoding)),S.push(b.customProgramCacheKey),S.join()}function v(b,S){b.push(S.precision),b.push(S.outputEncoding),b.push(S.envMapMode),b.push(S.envMapCubeUVHeight),b.push(S.combine),b.push(S.vertexUvs),b.push(S.fogExp2),b.push(S.sizeAttenuation),b.push(S.morphTargetsCount),b.push(S.morphAttributeCount),b.push(S.numDirLights),b.push(S.numPointLights),b.push(S.numSpotLights),b.push(S.numSpotLightMaps),b.push(S.numHemiLights),b.push(S.numRectAreaLights),b.push(S.numDirLightShadows),b.push(S.numPointLightShadows),b.push(S.numSpotLightShadows),b.push(S.numSpotLightShadowsWithMaps),b.push(S.shadowMapType),b.push(S.toneMapping),b.push(S.numClippingPlanes),b.push(S.numClipIntersection),b.push(S.depthPacking)}function _(b,S){o.disableAll(),S.isWebGL2&&o.enable(0),S.supportsVertexTextures&&o.enable(1),S.instancing&&o.enable(2),S.instancingColor&&o.enable(3),S.map&&o.enable(4),S.matcap&&o.enable(5),S.envMap&&o.enable(6),S.lightMap&&o.enable(7),S.aoMap&&o.enable(8),S.emissiveMap&&o.enable(9),S.bumpMap&&o.enable(10),S.normalMap&&o.enable(11),S.objectSpaceNormalMap&&o.enable(12),S.tangentSpaceNormalMap&&o.enable(13),S.clearcoat&&o.enable(14),S.clearcoatMap&&o.enable(15),S.clearcoatRoughnessMap&&o.enable(16),S.clearcoatNormalMap&&o.enable(17),S.iridescence&&o.enable(18),S.iridescenceMap&&o.enable(19),S.iridescenceThicknessMap&&o.enable(20),S.displacementMap&&o.enable(21),S.specularMap&&o.enable(22),S.roughnessMap&&o.enable(23),S.metalnessMap&&o.enable(24),S.gradientMap&&o.enable(25),S.alphaMap&&o.enable(26),S.alphaTest&&o.enable(27),S.vertexColors&&o.enable(28),S.vertexAlphas&&o.enable(29),S.vertexUvs&&o.enable(30),S.vertexTangents&&o.enable(31),S.uvsVertexOnly&&o.enable(32),b.push(o.mask),o.disableAll(),S.fog&&o.enable(0),S.useFog&&o.enable(1),S.flatShading&&o.enable(2),S.logarithmicDepthBuffer&&o.enable(3),S.skinning&&o.enable(4),S.morphTargets&&o.enable(5),S.morphNormals&&o.enable(6),S.morphColors&&o.enable(7),S.premultipliedAlpha&&o.enable(8),S.shadowMapEnabled&&o.enable(9),S.physicallyCorrectLights&&o.enable(10),S.doubleSided&&o.enable(11),S.flipSided&&o.enable(12),S.useDepthPacking&&o.enable(13),S.dithering&&o.enable(14),S.specularIntensityMap&&o.enable(15),S.specularColorMap&&o.enable(16),S.transmission&&o.enable(17),S.transmissionMap&&o.enable(18),S.thicknessMap&&o.enable(19),S.sheen&&o.enable(20),S.sheenColorMap&&o.enable(21),S.sheenRoughnessMap&&o.enable(22),S.decodeVideoTexture&&o.enable(23),S.opaque&&o.enable(24),b.push(o.mask)}function x(b){const S=m[b.type];let D;if(S){const N=zn[S];D=pm.clone(N.uniforms)}else D=b.uniforms;return D}function y(b,S){let D;for(let N=0,J=c.length;N<J;N++){const k=c[N];if(k.cacheKey===S){D=k,++D.usedTimes;break}}return D===void 0&&(D=new Ey(t,S,b,a),c.push(D)),D}function M(b){if(--b.usedTimes===0){const S=c.indexOf(b);c[S]=c[c.length-1],c.pop(),b.destroy()}}function T(b){l.remove(b)}function L(){l.dispose()}return{getParameters:g,getProgramCacheKey:p,getUniforms:x,acquireProgram:y,releaseProgram:M,releaseShaderCache:T,programs:c,dispose:L}}function Py(){let t=new WeakMap;function e(a){let s=t.get(a);return s===void 0&&(s={},t.set(a,s)),s}function n(a){t.delete(a)}function i(a,s,o){t.get(a)[s]=o}function r(){t=new WeakMap}return{get:e,remove:n,update:i,dispose:r}}function Ry(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function bh(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Mh(){const t=[];let e=0;const n=[],i=[],r=[];function a(){e=0,n.length=0,i.length=0,r.length=0}function s(h,f,d,m,g,p){let v=t[e];return v===void 0?(v={id:h.id,object:h,geometry:f,material:d,groupOrder:m,renderOrder:h.renderOrder,z:g,group:p},t[e]=v):(v.id=h.id,v.object=h,v.geometry=f,v.material=d,v.groupOrder=m,v.renderOrder=h.renderOrder,v.z=g,v.group=p),e++,v}function o(h,f,d,m,g,p){const v=s(h,f,d,m,g,p);d.transmission>0?i.push(v):d.transparent===!0?r.push(v):n.push(v)}function l(h,f,d,m,g,p){const v=s(h,f,d,m,g,p);d.transmission>0?i.unshift(v):d.transparent===!0?r.unshift(v):n.unshift(v)}function c(h,f){n.length>1&&n.sort(h||Ry),i.length>1&&i.sort(f||bh),r.length>1&&r.sort(f||bh)}function u(){for(let h=e,f=t.length;h<f;h++){const d=t[h];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:n,transmissive:i,transparent:r,init:a,push:o,unshift:l,finish:u,sort:c}}function Dy(){let t=new WeakMap;function e(i,r){const a=t.get(i);let s;return a===void 0?(s=new Mh,t.set(i,[s])):r>=a.length?(s=new Mh,a.push(s)):s=a[r],s}function n(){t=new WeakMap}return{get:e,dispose:n}}function Iy(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new ne,color:new ut};break;case"SpotLight":n={position:new ne,direction:new ne,color:new ut,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new ne,color:new ut,distance:0,decay:0};break;case"HemisphereLight":n={direction:new ne,skyColor:new ut,groundColor:new ut};break;case"RectAreaLight":n={color:new ut,position:new ne,halfWidth:new ne,halfHeight:new ne};break}return t[e.id]=n,n}}}function Oy(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new dt};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new dt};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new dt,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let Fy=0;function Ny(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function zy(t,e){const n=new Iy,i=Oy(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)r.probe.push(new ne);const a=new ne,s=new wt,o=new wt;function l(u,h){let f=0,d=0,m=0;for(let N=0;N<9;N++)r.probe[N].set(0,0,0);let g=0,p=0,v=0,_=0,x=0,y=0,M=0,T=0,L=0,b=0;u.sort(Ny);const S=h!==!0?Math.PI:1;for(let N=0,J=u.length;N<J;N++){const k=u[N],G=k.color,H=k.intensity,z=k.distance,Z=k.shadow&&k.shadow.map?k.shadow.map.texture:null;if(k.isAmbientLight)f+=G.r*H*S,d+=G.g*H*S,m+=G.b*H*S;else if(k.isLightProbe)for(let w=0;w<9;w++)r.probe[w].addScaledVector(k.sh.coefficients[w],H);else if(k.isDirectionalLight){const w=n.get(k);if(w.color.copy(k.color).multiplyScalar(k.intensity*S),k.castShadow){const R=k.shadow,V=i.get(k);V.shadowBias=R.bias,V.shadowNormalBias=R.normalBias,V.shadowRadius=R.radius,V.shadowMapSize=R.mapSize,r.directionalShadow[g]=V,r.directionalShadowMap[g]=Z,r.directionalShadowMatrix[g]=k.shadow.matrix,y++}r.directional[g]=w,g++}else if(k.isSpotLight){const w=n.get(k);w.position.setFromMatrixPosition(k.matrixWorld),w.color.copy(G).multiplyScalar(H*S),w.distance=z,w.coneCos=Math.cos(k.angle),w.penumbraCos=Math.cos(k.angle*(1-k.penumbra)),w.decay=k.decay,r.spot[v]=w;const R=k.shadow;if(k.map&&(r.spotLightMap[L]=k.map,L++,R.updateMatrices(k),k.castShadow&&b++),r.spotLightMatrix[v]=R.matrix,k.castShadow){const V=i.get(k);V.shadowBias=R.bias,V.shadowNormalBias=R.normalBias,V.shadowRadius=R.radius,V.shadowMapSize=R.mapSize,r.spotShadow[v]=V,r.spotShadowMap[v]=Z,T++}v++}else if(k.isRectAreaLight){const w=n.get(k);w.color.copy(G).multiplyScalar(H),w.halfWidth.set(k.width*.5,0,0),w.halfHeight.set(0,k.height*.5,0),r.rectArea[_]=w,_++}else if(k.isPointLight){const w=n.get(k);if(w.color.copy(k.color).multiplyScalar(k.intensity*S),w.distance=k.distance,w.decay=k.decay,k.castShadow){const R=k.shadow,V=i.get(k);V.shadowBias=R.bias,V.shadowNormalBias=R.normalBias,V.shadowRadius=R.radius,V.shadowMapSize=R.mapSize,V.shadowCameraNear=R.camera.near,V.shadowCameraFar=R.camera.far,r.pointShadow[p]=V,r.pointShadowMap[p]=Z,r.pointShadowMatrix[p]=k.shadow.matrix,M++}r.point[p]=w,p++}else if(k.isHemisphereLight){const w=n.get(k);w.skyColor.copy(k.color).multiplyScalar(H*S),w.groundColor.copy(k.groundColor).multiplyScalar(H*S),r.hemi[x]=w,x++}}_>0&&(e.isWebGL2||t.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=Ce.LTC_FLOAT_1,r.rectAreaLTC2=Ce.LTC_FLOAT_2):t.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=Ce.LTC_HALF_1,r.rectAreaLTC2=Ce.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=f,r.ambient[1]=d,r.ambient[2]=m;const D=r.hash;(D.directionalLength!==g||D.pointLength!==p||D.spotLength!==v||D.rectAreaLength!==_||D.hemiLength!==x||D.numDirectionalShadows!==y||D.numPointShadows!==M||D.numSpotShadows!==T||D.numSpotMaps!==L)&&(r.directional.length=g,r.spot.length=v,r.rectArea.length=_,r.point.length=p,r.hemi.length=x,r.directionalShadow.length=y,r.directionalShadowMap.length=y,r.pointShadow.length=M,r.pointShadowMap.length=M,r.spotShadow.length=T,r.spotShadowMap.length=T,r.directionalShadowMatrix.length=y,r.pointShadowMatrix.length=M,r.spotLightMatrix.length=T+L-b,r.spotLightMap.length=L,r.numSpotLightShadowsWithMaps=b,D.directionalLength=g,D.pointLength=p,D.spotLength=v,D.rectAreaLength=_,D.hemiLength=x,D.numDirectionalShadows=y,D.numPointShadows=M,D.numSpotShadows=T,D.numSpotMaps=L,r.version=Fy++)}function c(u,h){let f=0,d=0,m=0,g=0,p=0;const v=h.matrixWorldInverse;for(let _=0,x=u.length;_<x;_++){const y=u[_];if(y.isDirectionalLight){const M=r.directional[f];M.direction.setFromMatrixPosition(y.matrixWorld),a.setFromMatrixPosition(y.target.matrixWorld),M.direction.sub(a),M.direction.transformDirection(v),f++}else if(y.isSpotLight){const M=r.spot[m];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),M.direction.setFromMatrixPosition(y.matrixWorld),a.setFromMatrixPosition(y.target.matrixWorld),M.direction.sub(a),M.direction.transformDirection(v),m++}else if(y.isRectAreaLight){const M=r.rectArea[g];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),o.identity(),s.copy(y.matrixWorld),s.premultiply(v),o.extractRotation(s),M.halfWidth.set(y.width*.5,0,0),M.halfHeight.set(0,y.height*.5,0),M.halfWidth.applyMatrix4(o),M.halfHeight.applyMatrix4(o),g++}else if(y.isPointLight){const M=r.point[d];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),d++}else if(y.isHemisphereLight){const M=r.hemi[p];M.direction.setFromMatrixPosition(y.matrixWorld),M.direction.transformDirection(v),p++}}}return{setup:l,setupView:c,state:r}}function wh(t,e){const n=new zy(t,e),i=[],r=[];function a(){i.length=0,r.length=0}function s(h){i.push(h)}function o(h){r.push(h)}function l(h){n.setup(i,h)}function c(h){n.setupView(i,h)}return{init:a,state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:l,setupLightsView:c,pushLight:s,pushShadow:o}}function Uy(t,e){let n=new WeakMap;function i(a,s=0){const o=n.get(a);let l;return o===void 0?(l=new wh(t,e),n.set(a,[l])):s>=o.length?(l=new wh(t,e),o.push(l)):l=o[s],l}function r(){n=new WeakMap}return{get:i,dispose:r}}class By extends oi{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Zp,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Gy extends oi{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new ne,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const ky=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Vy=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Hy(t,e,n){let i=new Zc;const r=new dt,a=new dt,s=new _t,o=new By({depthPacking:Jp}),l=new Gy,c={},u=n.maxTextureSize,h={0:wn,1:wi,2:qc},f=new Xi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new dt},radius:{value:4}},vertexShader:ky,fragmentShader:Vy}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const m=new On;m.setAttribute("position",new Vn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new kn(m,f),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Af,this.render=function(y,M,T){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||y.length===0)return;const L=t.getRenderTarget(),b=t.getActiveCubeFace(),S=t.getActiveMipmapLevel(),D=t.state;D.setBlending(_i),D.buffers.color.setClear(1,1,1,1),D.buffers.depth.setTest(!0),D.setScissorTest(!1);for(let N=0,J=y.length;N<J;N++){const k=y[N],G=k.shadow;if(G===void 0){console.warn("THREE.WebGLShadowMap:",k,"has no shadow.");continue}if(G.autoUpdate===!1&&G.needsUpdate===!1)continue;r.copy(G.mapSize);const H=G.getFrameExtents();if(r.multiply(H),a.copy(G.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(a.x=Math.floor(u/H.x),r.x=a.x*H.x,G.mapSize.x=a.x),r.y>u&&(a.y=Math.floor(u/H.y),r.y=a.y*H.y,G.mapSize.y=a.y)),G.map===null){const Z=this.type!==ca?{minFilter:Ht,magFilter:Ht}:{};G.map=new ji(r.x,r.y,Z),G.map.texture.name=k.name+".shadowMap",G.camera.updateProjectionMatrix()}t.setRenderTarget(G.map),t.clear();const z=G.getViewportCount();for(let Z=0;Z<z;Z++){const w=G.getViewport(Z);s.set(a.x*w.x,a.y*w.y,a.x*w.z,a.y*w.w),D.viewport(s),G.updateMatrices(k,Z),i=G.getFrustum(),x(M,T,G.camera,k,this.type)}G.isPointLightShadow!==!0&&this.type===ca&&v(G,T),G.needsUpdate=!1}p.needsUpdate=!1,t.setRenderTarget(L,b,S)};function v(y,M){const T=e.update(g);f.defines.VSM_SAMPLES!==y.blurSamples&&(f.defines.VSM_SAMPLES=y.blurSamples,d.defines.VSM_SAMPLES=y.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),y.mapPass===null&&(y.mapPass=new ji(r.x,r.y)),f.uniforms.shadow_pass.value=y.map.texture,f.uniforms.resolution.value=y.mapSize,f.uniforms.radius.value=y.radius,t.setRenderTarget(y.mapPass),t.clear(),t.renderBufferDirect(M,null,T,f,g,null),d.uniforms.shadow_pass.value=y.mapPass.texture,d.uniforms.resolution.value=y.mapSize,d.uniforms.radius.value=y.radius,t.setRenderTarget(y.map),t.clear(),t.renderBufferDirect(M,null,T,d,g,null)}function _(y,M,T,L,b,S){let D=null;const N=T.isPointLight===!0?y.customDistanceMaterial:y.customDepthMaterial;if(N!==void 0)D=N;else if(D=T.isPointLight===!0?l:o,t.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0){const J=D.uuid,k=M.uuid;let G=c[J];G===void 0&&(G={},c[J]=G);let H=G[k];H===void 0&&(H=D.clone(),G[k]=H),D=H}return D.visible=M.visible,D.wireframe=M.wireframe,S===ca?D.side=M.shadowSide!==null?M.shadowSide:M.side:D.side=M.shadowSide!==null?M.shadowSide:h[M.side],D.alphaMap=M.alphaMap,D.alphaTest=M.alphaTest,D.map=M.map,D.clipShadows=M.clipShadows,D.clippingPlanes=M.clippingPlanes,D.clipIntersection=M.clipIntersection,D.displacementMap=M.displacementMap,D.displacementScale=M.displacementScale,D.displacementBias=M.displacementBias,D.wireframeLinewidth=M.wireframeLinewidth,D.linewidth=M.linewidth,T.isPointLight===!0&&D.isMeshDistanceMaterial===!0&&(D.referencePosition.setFromMatrixPosition(T.matrixWorld),D.nearDistance=L,D.farDistance=b),D}function x(y,M,T,L,b){if(y.visible===!1)return;if(y.layers.test(M.layers)&&(y.isMesh||y.isLine||y.isPoints)&&(y.castShadow||y.receiveShadow&&b===ca)&&(!y.frustumCulled||i.intersectsObject(y))){y.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,y.matrixWorld);const N=e.update(y),J=y.material;if(Array.isArray(J)){const k=N.groups;for(let G=0,H=k.length;G<H;G++){const z=k[G],Z=J[z.materialIndex];if(Z&&Z.visible){const w=_(y,Z,L,T.near,T.far,b);t.renderBufferDirect(T,null,N,w,y,z)}}}else if(J.visible){const k=_(y,J,L,T.near,T.far,b);t.renderBufferDirect(T,null,N,k,y,null)}}const D=y.children;for(let N=0,J=D.length;N<J;N++)x(D[N],M,T,L,b)}}function Wy(t,e,n){const i=n.isWebGL2;function r(){let Q=!1;const he=new _t;let we=null;const Pe=new _t(0,0,0,0);return{setMask:function(Be){we!==Be&&!Q&&(t.colorMask(Be,Be,Be,Be),we=Be)},setLocked:function(Be){Q=Be},setClear:function(Be,ot,bt,xt,$n){$n===!0&&(Be*=xt,ot*=xt,bt*=xt),he.set(Be,ot,bt,xt),Pe.equals(he)===!1&&(t.clearColor(Be,ot,bt,xt),Pe.copy(he))},reset:function(){Q=!1,we=null,Pe.set(-1,0,0,0)}}}function a(){let Q=!1,he=null,we=null,Pe=null;return{setTest:function(Be){Be?re(2929):ae(2929)},setMask:function(Be){he!==Be&&!Q&&(t.depthMask(Be),he=Be)},setFunc:function(Be){if(we!==Be){switch(Be){case _p:t.depthFunc(512);break;case bp:t.depthFunc(519);break;case Mp:t.depthFunc(513);break;case ql:t.depthFunc(515);break;case wp:t.depthFunc(514);break;case Sp:t.depthFunc(518);break;case Ep:t.depthFunc(516);break;case Tp:t.depthFunc(517);break;default:t.depthFunc(515)}we=Be}},setLocked:function(Be){Q=Be},setClear:function(Be){Pe!==Be&&(t.clearDepth(Be),Pe=Be)},reset:function(){Q=!1,he=null,we=null,Pe=null}}}function s(){let Q=!1,he=null,we=null,Pe=null,Be=null,ot=null,bt=null,xt=null,$n=null;return{setTest:function(pt){Q||(pt?re(2960):ae(2960))},setMask:function(pt){he!==pt&&!Q&&(t.stencilMask(pt),he=pt)},setFunc:function(pt,An,Jt){(we!==pt||Pe!==An||Be!==Jt)&&(t.stencilFunc(pt,An,Jt),we=pt,Pe=An,Be=Jt)},setOp:function(pt,An,Jt){(ot!==pt||bt!==An||xt!==Jt)&&(t.stencilOp(pt,An,Jt),ot=pt,bt=An,xt=Jt)},setLocked:function(pt){Q=pt},setClear:function(pt){$n!==pt&&(t.clearStencil(pt),$n=pt)},reset:function(){Q=!1,he=null,we=null,Pe=null,Be=null,ot=null,bt=null,xt=null,$n=null}}}const o=new r,l=new a,c=new s,u=new WeakMap,h=new WeakMap;let f={},d={},m=new WeakMap,g=[],p=null,v=!1,_=null,x=null,y=null,M=null,T=null,L=null,b=null,S=!1,D=null,N=null,J=null,k=null,G=null;const H=t.getParameter(35661);let z=!1,Z=0;const w=t.getParameter(7938);w.indexOf("WebGL")!==-1?(Z=parseFloat(/^WebGL (\d)/.exec(w)[1]),z=Z>=1):w.indexOf("OpenGL ES")!==-1&&(Z=parseFloat(/^OpenGL ES (\d)/.exec(w)[1]),z=Z>=2);let R=null,V={};const F=t.getParameter(3088),O=t.getParameter(2978),ee=new _t().fromArray(F),W=new _t().fromArray(O);function se(Q,he,we){const Pe=new Uint8Array(4),Be=t.createTexture();t.bindTexture(Q,Be),t.texParameteri(Q,10241,9728),t.texParameteri(Q,10240,9728);for(let ot=0;ot<we;ot++)t.texImage2D(he+ot,0,6408,1,1,0,6408,5121,Pe);return Be}const Y={};Y[3553]=se(3553,3553,1),Y[34067]=se(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),re(2929),l.setFunc(ql),Xe(!1),ie(pu),re(2884),te(_i);function re(Q){f[Q]!==!0&&(t.enable(Q),f[Q]=!0)}function ae(Q){f[Q]!==!1&&(t.disable(Q),f[Q]=!1)}function ue(Q,he){return d[Q]!==he?(t.bindFramebuffer(Q,he),d[Q]=he,i&&(Q===36009&&(d[36160]=he),Q===36160&&(d[36009]=he)),!0):!1}function X(Q,he){let we=g,Pe=!1;if(Q)if(we=m.get(he),we===void 0&&(we=[],m.set(he,we)),Q.isWebGLMultipleRenderTargets){const Be=Q.texture;if(we.length!==Be.length||we[0]!==36064){for(let ot=0,bt=Be.length;ot<bt;ot++)we[ot]=36064+ot;we.length=Be.length,Pe=!0}}else we[0]!==36064&&(we[0]=36064,Pe=!0);else we[0]!==1029&&(we[0]=1029,Pe=!0);Pe&&(n.isWebGL2?t.drawBuffers(we):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(we))}function ve(Q){return p!==Q?(t.useProgram(Q),p=Q,!0):!1}const be={[vr]:32774,[cp]:32778,[up]:32779};if(i)be[yu]=32775,be[xu]=32776;else{const Q=e.get("EXT_blend_minmax");Q!==null&&(be[yu]=Q.MIN_EXT,be[xu]=Q.MAX_EXT)}const ye={[hp]:0,[fp]:1,[dp]:768,[Lf]:770,[xp]:776,[vp]:774,[mp]:772,[pp]:769,[Cf]:771,[yp]:775,[gp]:773};function te(Q,he,we,Pe,Be,ot,bt,xt){if(Q===_i){v===!0&&(ae(3042),v=!1);return}if(v===!1&&(re(3042),v=!0),Q!==lp){if(Q!==_||xt!==S){if((x!==vr||T!==vr)&&(t.blendEquation(32774),x=vr,T=vr),xt)switch(Q){case br:t.blendFuncSeparate(1,771,1,771);break;case mu:t.blendFunc(1,1);break;case gu:t.blendFuncSeparate(0,769,0,1);break;case vu:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",Q);break}else switch(Q){case br:t.blendFuncSeparate(770,771,1,771);break;case mu:t.blendFunc(770,1);break;case gu:t.blendFuncSeparate(0,769,0,1);break;case vu:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",Q);break}y=null,M=null,L=null,b=null,_=Q,S=xt}return}Be=Be||he,ot=ot||we,bt=bt||Pe,(he!==x||Be!==T)&&(t.blendEquationSeparate(be[he],be[Be]),x=he,T=Be),(we!==y||Pe!==M||ot!==L||bt!==b)&&(t.blendFuncSeparate(ye[we],ye[Pe],ye[ot],ye[bt]),y=we,M=Pe,L=ot,b=bt),_=Q,S=!1}function Ve(Q,he){Q.side===qc?ae(2884):re(2884);let we=Q.side===wn;he&&(we=!we),Xe(we),Q.blending===br&&Q.transparent===!1?te(_i):te(Q.blending,Q.blendEquation,Q.blendSrc,Q.blendDst,Q.blendEquationAlpha,Q.blendSrcAlpha,Q.blendDstAlpha,Q.premultipliedAlpha),l.setFunc(Q.depthFunc),l.setTest(Q.depthTest),l.setMask(Q.depthWrite),o.setMask(Q.colorWrite);const Pe=Q.stencilWrite;c.setTest(Pe),Pe&&(c.setMask(Q.stencilWriteMask),c.setFunc(Q.stencilFunc,Q.stencilRef,Q.stencilFuncMask),c.setOp(Q.stencilFail,Q.stencilZFail,Q.stencilZPass)),Fe(Q.polygonOffset,Q.polygonOffsetFactor,Q.polygonOffsetUnits),Q.alphaToCoverage===!0?re(32926):ae(32926)}function Xe(Q){D!==Q&&(Q?t.frontFace(2304):t.frontFace(2305),D=Q)}function ie(Q){Q!==ap?(re(2884),Q!==N&&(Q===pu?t.cullFace(1029):Q===sp?t.cullFace(1028):t.cullFace(1032))):ae(2884),N=Q}function ke(Q){Q!==J&&(z&&t.lineWidth(Q),J=Q)}function Fe(Q,he,we){Q?(re(32823),(k!==he||G!==we)&&(t.polygonOffset(he,we),k=he,G=we)):ae(32823)}function $e(Q){Q?re(3089):ae(3089)}function Ke(Q){Q===void 0&&(Q=33984+H-1),R!==Q&&(t.activeTexture(Q),R=Q)}function B(Q,he,we){we===void 0&&(R===null?we=33984+H-1:we=R);let Pe=V[we];Pe===void 0&&(Pe={type:void 0,texture:void 0},V[we]=Pe),(Pe.type!==Q||Pe.texture!==he)&&(R!==we&&(t.activeTexture(we),R=we),t.bindTexture(Q,he||Y[Q]),Pe.type=Q,Pe.texture=he)}function I(){const Q=V[R];Q!==void 0&&Q.type!==void 0&&(t.bindTexture(Q.type,null),Q.type=void 0,Q.texture=void 0)}function ce(){try{t.compressedTexImage2D.apply(t,arguments)}catch(Q){console.error("THREE.WebGLState:",Q)}}function ge(){try{t.compressedTexImage3D.apply(t,arguments)}catch(Q){console.error("THREE.WebGLState:",Q)}}function de(){try{t.texSubImage2D.apply(t,arguments)}catch(Q){console.error("THREE.WebGLState:",Q)}}function q(){try{t.texSubImage3D.apply(t,arguments)}catch(Q){console.error("THREE.WebGLState:",Q)}}function j(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(Q){console.error("THREE.WebGLState:",Q)}}function oe(){try{t.compressedTexSubImage3D.apply(t,arguments)}catch(Q){console.error("THREE.WebGLState:",Q)}}function K(){try{t.texStorage2D.apply(t,arguments)}catch(Q){console.error("THREE.WebGLState:",Q)}}function Me(){try{t.texStorage3D.apply(t,arguments)}catch(Q){console.error("THREE.WebGLState:",Q)}}function pe(){try{t.texImage2D.apply(t,arguments)}catch(Q){console.error("THREE.WebGLState:",Q)}}function xe(){try{t.texImage3D.apply(t,arguments)}catch(Q){console.error("THREE.WebGLState:",Q)}}function Le(Q){ee.equals(Q)===!1&&(t.scissor(Q.x,Q.y,Q.z,Q.w),ee.copy(Q))}function Se(Q){W.equals(Q)===!1&&(t.viewport(Q.x,Q.y,Q.z,Q.w),W.copy(Q))}function Je(Q,he){let we=h.get(he);we===void 0&&(we=new WeakMap,h.set(he,we));let Pe=we.get(Q);Pe===void 0&&(Pe=t.getUniformBlockIndex(he,Q.name),we.set(Q,Pe))}function qe(Q,he){const Pe=h.get(he).get(Q);u.get(he)!==Pe&&(t.uniformBlockBinding(he,Pe,Q.__bindingPointIndex),u.set(he,Pe))}function ht(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),i===!0&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),f={},R=null,V={},d={},m=new WeakMap,g=[],p=null,v=!1,_=null,x=null,y=null,M=null,T=null,L=null,b=null,S=!1,D=null,N=null,J=null,k=null,G=null,ee.set(0,0,t.canvas.width,t.canvas.height),W.set(0,0,t.canvas.width,t.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:re,disable:ae,bindFramebuffer:ue,drawBuffers:X,useProgram:ve,setBlending:te,setMaterial:Ve,setFlipSided:Xe,setCullFace:ie,setLineWidth:ke,setPolygonOffset:Fe,setScissorTest:$e,activeTexture:Ke,bindTexture:B,unbindTexture:I,compressedTexImage2D:ce,compressedTexImage3D:ge,texImage2D:pe,texImage3D:xe,updateUBOMapping:Je,uniformBlockBinding:qe,texStorage2D:K,texStorage3D:Me,texSubImage2D:de,texSubImage3D:q,compressedTexSubImage2D:j,compressedTexSubImage3D:oe,scissor:Le,viewport:Se,reset:ht}}function jy(t,e,n,i,r,a,s){const o=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,h=r.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d=typeof navigator=="undefined"?!1:/OculusBrowser/g.test(navigator.userAgent),m=new WeakMap;let g;const p=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function _(B,I){return v?new OffscreenCanvas(B,I):ba("canvas")}function x(B,I,ce,ge){let de=1;if((B.width>ge||B.height>ge)&&(de=ge/Math.max(B.width,B.height)),de<1||I===!0)if(typeof HTMLImageElement!="undefined"&&B instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&B instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&B instanceof ImageBitmap){const q=I?Ql:Math.floor,j=q(de*B.width),oe=q(de*B.height);g===void 0&&(g=_(j,oe));const K=ce?_(j,oe):g;return K.width=j,K.height=oe,K.getContext("2d").drawImage(B,0,0,j,oe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+B.width+"x"+B.height+") to ("+j+"x"+oe+")."),K}else return"data"in B&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+B.width+"x"+B.height+")."),B;return B}function y(B){return ju(B.width)&&ju(B.height)}function M(B){return o?!1:B.wrapS!==Dn||B.wrapT!==Dn||B.minFilter!==Ht&&B.minFilter!==bn}function T(B,I){return B.generateMipmaps&&I&&B.minFilter!==Ht&&B.minFilter!==bn}function L(B){t.generateMipmap(B)}function b(B,I,ce,ge,de=!1){if(o===!1)return I;if(B!==null){if(t[B]!==void 0)return t[B];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+B+"'")}let q=I;return I===6403&&(ce===5126&&(q=33326),ce===5131&&(q=33325),ce===5121&&(q=33321)),I===33319&&(ce===5126&&(q=33328),ce===5131&&(q=33327),ce===5121&&(q=33323)),I===6408&&(ce===5126&&(q=34836),ce===5131&&(q=34842),ce===5121&&(q=ge===gt&&de===!1?35907:32856),ce===32819&&(q=32854),ce===32820&&(q=32855)),(q===33325||q===33326||q===33327||q===33328||q===34842||q===34836)&&e.get("EXT_color_buffer_float"),q}function S(B,I,ce){return T(B,ce)===!0||B.isFramebufferTexture&&B.minFilter!==Ht&&B.minFilter!==bn?Math.log2(Math.max(I.width,I.height))+1:B.mipmaps!==void 0&&B.mipmaps.length>0?B.mipmaps.length:B.isCompressedTexture&&Array.isArray(B.image)?I.mipmaps.length:1}function D(B){return B===Ht||B===_u||B===el?9728:9729}function N(B){const I=B.target;I.removeEventListener("dispose",N),k(I),I.isVideoTexture&&m.delete(I)}function J(B){const I=B.target;I.removeEventListener("dispose",J),H(I)}function k(B){const I=i.get(B);if(I.__webglInit===void 0)return;const ce=B.source,ge=p.get(ce);if(ge){const de=ge[I.__cacheKey];de.usedTimes--,de.usedTimes===0&&G(B),Object.keys(ge).length===0&&p.delete(ce)}i.remove(B)}function G(B){const I=i.get(B);t.deleteTexture(I.__webglTexture);const ce=B.source,ge=p.get(ce);delete ge[I.__cacheKey],s.memory.textures--}function H(B){const I=B.texture,ce=i.get(B),ge=i.get(I);if(ge.__webglTexture!==void 0&&(t.deleteTexture(ge.__webglTexture),s.memory.textures--),B.depthTexture&&B.depthTexture.dispose(),B.isWebGLCubeRenderTarget)for(let de=0;de<6;de++)t.deleteFramebuffer(ce.__webglFramebuffer[de]),ce.__webglDepthbuffer&&t.deleteRenderbuffer(ce.__webglDepthbuffer[de]);else{if(t.deleteFramebuffer(ce.__webglFramebuffer),ce.__webglDepthbuffer&&t.deleteRenderbuffer(ce.__webglDepthbuffer),ce.__webglMultisampledFramebuffer&&t.deleteFramebuffer(ce.__webglMultisampledFramebuffer),ce.__webglColorRenderbuffer)for(let de=0;de<ce.__webglColorRenderbuffer.length;de++)ce.__webglColorRenderbuffer[de]&&t.deleteRenderbuffer(ce.__webglColorRenderbuffer[de]);ce.__webglDepthRenderbuffer&&t.deleteRenderbuffer(ce.__webglDepthRenderbuffer)}if(B.isWebGLMultipleRenderTargets)for(let de=0,q=I.length;de<q;de++){const j=i.get(I[de]);j.__webglTexture&&(t.deleteTexture(j.__webglTexture),s.memory.textures--),i.remove(I[de])}i.remove(I),i.remove(B)}let z=0;function Z(){z=0}function w(){const B=z;return B>=l&&console.warn("THREE.WebGLTextures: Trying to use "+B+" texture units while this GPU supports only "+l),z+=1,B}function R(B){const I=[];return I.push(B.wrapS),I.push(B.wrapT),I.push(B.wrapR||0),I.push(B.magFilter),I.push(B.minFilter),I.push(B.anisotropy),I.push(B.internalFormat),I.push(B.format),I.push(B.type),I.push(B.generateMipmaps),I.push(B.premultiplyAlpha),I.push(B.flipY),I.push(B.unpackAlignment),I.push(B.encoding),I.join()}function V(B,I){const ce=i.get(B);if(B.isVideoTexture&&$e(B),B.isRenderTargetTexture===!1&&B.version>0&&ce.__version!==B.version){const ge=B.image;if(ge===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ge.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ae(ce,B,I);return}}n.bindTexture(3553,ce.__webglTexture,33984+I)}function F(B,I){const ce=i.get(B);if(B.version>0&&ce.__version!==B.version){ae(ce,B,I);return}n.bindTexture(35866,ce.__webglTexture,33984+I)}function O(B,I){const ce=i.get(B);if(B.version>0&&ce.__version!==B.version){ae(ce,B,I);return}n.bindTexture(32879,ce.__webglTexture,33984+I)}function ee(B,I){const ce=i.get(B);if(B.version>0&&ce.__version!==B.version){ue(ce,B,I);return}n.bindTexture(34067,ce.__webglTexture,33984+I)}const W={[$s]:10497,[Dn]:33071,[Zl]:33648},se={[Ht]:9728,[_u]:9984,[el]:9986,[bn]:9729,[Op]:9985,[ya]:9987};function Y(B,I,ce){if(ce?(t.texParameteri(B,10242,W[I.wrapS]),t.texParameteri(B,10243,W[I.wrapT]),(B===32879||B===35866)&&t.texParameteri(B,32882,W[I.wrapR]),t.texParameteri(B,10240,se[I.magFilter]),t.texParameteri(B,10241,se[I.minFilter])):(t.texParameteri(B,10242,33071),t.texParameteri(B,10243,33071),(B===32879||B===35866)&&t.texParameteri(B,32882,33071),(I.wrapS!==Dn||I.wrapT!==Dn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(B,10240,D(I.magFilter)),t.texParameteri(B,10241,D(I.minFilter)),I.minFilter!==Ht&&I.minFilter!==bn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const ge=e.get("EXT_texture_filter_anisotropic");if(I.magFilter===Ht||I.minFilter!==el&&I.minFilter!==ya||I.type===Ui&&e.has("OES_texture_float_linear")===!1||o===!1&&I.type===xa&&e.has("OES_texture_half_float_linear")===!1)return;(I.anisotropy>1||i.get(I).__currentAnisotropy)&&(t.texParameterf(B,ge.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(I.anisotropy,r.getMaxAnisotropy())),i.get(I).__currentAnisotropy=I.anisotropy)}}function re(B,I){let ce=!1;B.__webglInit===void 0&&(B.__webglInit=!0,I.addEventListener("dispose",N));const ge=I.source;let de=p.get(ge);de===void 0&&(de={},p.set(ge,de));const q=R(I);if(q!==B.__cacheKey){de[q]===void 0&&(de[q]={texture:t.createTexture(),usedTimes:0},s.memory.textures++,ce=!0),de[q].usedTimes++;const j=de[B.__cacheKey];j!==void 0&&(de[B.__cacheKey].usedTimes--,j.usedTimes===0&&G(I)),B.__cacheKey=q,B.__webglTexture=de[q].texture}return ce}function ae(B,I,ce){let ge=3553;(I.isDataArrayTexture||I.isCompressedArrayTexture)&&(ge=35866),I.isData3DTexture&&(ge=32879);const de=re(B,I),q=I.source;n.bindTexture(ge,B.__webglTexture,33984+ce);const j=i.get(q);if(q.version!==j.__version||de===!0){n.activeTexture(33984+ce),t.pixelStorei(37440,I.flipY),t.pixelStorei(37441,I.premultiplyAlpha),t.pixelStorei(3317,I.unpackAlignment),t.pixelStorei(37443,0);const oe=M(I)&&y(I.image)===!1;let K=x(I.image,oe,!1,u);K=Ke(I,K);const Me=y(K)||o,pe=a.convert(I.format,I.encoding);let xe=a.convert(I.type),Le=b(I.internalFormat,pe,xe,I.encoding,I.isVideoTexture);Y(ge,I,Me);let Se;const Je=I.mipmaps,qe=o&&I.isVideoTexture!==!0,ht=j.__version===void 0||de===!0,Q=S(I,K,Me);if(I.isDepthTexture)Le=6402,o?I.type===Ui?Le=36012:I.type===zi?Le=33190:I.type===Mr?Le=35056:Le=33189:I.type===Ui&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),I.format===Gi&&Le===6402&&I.type!==Rf&&I.type!==zi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),I.type=zi,xe=a.convert(I.type)),I.format===Lr&&Le===6402&&(Le=34041,I.type!==Mr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),I.type=Mr,xe=a.convert(I.type))),ht&&(qe?n.texStorage2D(3553,1,Le,K.width,K.height):n.texImage2D(3553,0,Le,K.width,K.height,0,pe,xe,null));else if(I.isDataTexture)if(Je.length>0&&Me){qe&&ht&&n.texStorage2D(3553,Q,Le,Je[0].width,Je[0].height);for(let he=0,we=Je.length;he<we;he++)Se=Je[he],qe?n.texSubImage2D(3553,he,0,0,Se.width,Se.height,pe,xe,Se.data):n.texImage2D(3553,he,Le,Se.width,Se.height,0,pe,xe,Se.data);I.generateMipmaps=!1}else qe?(ht&&n.texStorage2D(3553,Q,Le,K.width,K.height),n.texSubImage2D(3553,0,0,0,K.width,K.height,pe,xe,K.data)):n.texImage2D(3553,0,Le,K.width,K.height,0,pe,xe,K.data);else if(I.isCompressedTexture)if(I.isCompressedArrayTexture){qe&&ht&&n.texStorage3D(35866,Q,Le,Je[0].width,Je[0].height,K.depth);for(let he=0,we=Je.length;he<we;he++)Se=Je[he],I.format!==In?pe!==null?qe?n.compressedTexSubImage3D(35866,he,0,0,0,Se.width,Se.height,K.depth,pe,Se.data,0,0):n.compressedTexImage3D(35866,he,Le,Se.width,Se.height,K.depth,0,Se.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):qe?n.texSubImage3D(35866,he,0,0,0,Se.width,Se.height,K.depth,pe,xe,Se.data):n.texImage3D(35866,he,Le,Se.width,Se.height,K.depth,0,pe,xe,Se.data)}else{qe&&ht&&n.texStorage2D(3553,Q,Le,Je[0].width,Je[0].height);for(let he=0,we=Je.length;he<we;he++)Se=Je[he],I.format!==In?pe!==null?qe?n.compressedTexSubImage2D(3553,he,0,0,Se.width,Se.height,pe,Se.data):n.compressedTexImage2D(3553,he,Le,Se.width,Se.height,0,Se.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):qe?n.texSubImage2D(3553,he,0,0,Se.width,Se.height,pe,xe,Se.data):n.texImage2D(3553,he,Le,Se.width,Se.height,0,pe,xe,Se.data)}else if(I.isDataArrayTexture)qe?(ht&&n.texStorage3D(35866,Q,Le,K.width,K.height,K.depth),n.texSubImage3D(35866,0,0,0,0,K.width,K.height,K.depth,pe,xe,K.data)):n.texImage3D(35866,0,Le,K.width,K.height,K.depth,0,pe,xe,K.data);else if(I.isData3DTexture)qe?(ht&&n.texStorage3D(32879,Q,Le,K.width,K.height,K.depth),n.texSubImage3D(32879,0,0,0,0,K.width,K.height,K.depth,pe,xe,K.data)):n.texImage3D(32879,0,Le,K.width,K.height,K.depth,0,pe,xe,K.data);else if(I.isFramebufferTexture){if(ht)if(qe)n.texStorage2D(3553,Q,Le,K.width,K.height);else{let he=K.width,we=K.height;for(let Pe=0;Pe<Q;Pe++)n.texImage2D(3553,Pe,Le,he,we,0,pe,xe,null),he>>=1,we>>=1}}else if(Je.length>0&&Me){qe&&ht&&n.texStorage2D(3553,Q,Le,Je[0].width,Je[0].height);for(let he=0,we=Je.length;he<we;he++)Se=Je[he],qe?n.texSubImage2D(3553,he,0,0,pe,xe,Se):n.texImage2D(3553,he,Le,pe,xe,Se);I.generateMipmaps=!1}else qe?(ht&&n.texStorage2D(3553,Q,Le,K.width,K.height),n.texSubImage2D(3553,0,0,0,pe,xe,K)):n.texImage2D(3553,0,Le,pe,xe,K);T(I,Me)&&L(ge),j.__version=q.version,I.onUpdate&&I.onUpdate(I)}B.__version=I.version}function ue(B,I,ce){if(I.image.length!==6)return;const ge=re(B,I),de=I.source;n.bindTexture(34067,B.__webglTexture,33984+ce);const q=i.get(de);if(de.version!==q.__version||ge===!0){n.activeTexture(33984+ce),t.pixelStorei(37440,I.flipY),t.pixelStorei(37441,I.premultiplyAlpha),t.pixelStorei(3317,I.unpackAlignment),t.pixelStorei(37443,0);const j=I.isCompressedTexture||I.image[0].isCompressedTexture,oe=I.image[0]&&I.image[0].isDataTexture,K=[];for(let he=0;he<6;he++)!j&&!oe?K[he]=x(I.image[he],!1,!0,c):K[he]=oe?I.image[he].image:I.image[he],K[he]=Ke(I,K[he]);const Me=K[0],pe=y(Me)||o,xe=a.convert(I.format,I.encoding),Le=a.convert(I.type),Se=b(I.internalFormat,xe,Le,I.encoding),Je=o&&I.isVideoTexture!==!0,qe=q.__version===void 0||ge===!0;let ht=S(I,Me,pe);Y(34067,I,pe);let Q;if(j){Je&&qe&&n.texStorage2D(34067,ht,Se,Me.width,Me.height);for(let he=0;he<6;he++){Q=K[he].mipmaps;for(let we=0;we<Q.length;we++){const Pe=Q[we];I.format!==In?xe!==null?Je?n.compressedTexSubImage2D(34069+he,we,0,0,Pe.width,Pe.height,xe,Pe.data):n.compressedTexImage2D(34069+he,we,Se,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Je?n.texSubImage2D(34069+he,we,0,0,Pe.width,Pe.height,xe,Le,Pe.data):n.texImage2D(34069+he,we,Se,Pe.width,Pe.height,0,xe,Le,Pe.data)}}}else{Q=I.mipmaps,Je&&qe&&(Q.length>0&&ht++,n.texStorage2D(34067,ht,Se,K[0].width,K[0].height));for(let he=0;he<6;he++)if(oe){Je?n.texSubImage2D(34069+he,0,0,0,K[he].width,K[he].height,xe,Le,K[he].data):n.texImage2D(34069+he,0,Se,K[he].width,K[he].height,0,xe,Le,K[he].data);for(let we=0;we<Q.length;we++){const Be=Q[we].image[he].image;Je?n.texSubImage2D(34069+he,we+1,0,0,Be.width,Be.height,xe,Le,Be.data):n.texImage2D(34069+he,we+1,Se,Be.width,Be.height,0,xe,Le,Be.data)}}else{Je?n.texSubImage2D(34069+he,0,0,0,xe,Le,K[he]):n.texImage2D(34069+he,0,Se,xe,Le,K[he]);for(let we=0;we<Q.length;we++){const Pe=Q[we];Je?n.texSubImage2D(34069+he,we+1,0,0,xe,Le,Pe.image[he]):n.texImage2D(34069+he,we+1,Se,xe,Le,Pe.image[he])}}}T(I,pe)&&L(34067),q.__version=de.version,I.onUpdate&&I.onUpdate(I)}B.__version=I.version}function X(B,I,ce,ge,de){const q=a.convert(ce.format,ce.encoding),j=a.convert(ce.type),oe=b(ce.internalFormat,q,j,ce.encoding);i.get(I).__hasExternalTextures||(de===32879||de===35866?n.texImage3D(de,0,oe,I.width,I.height,I.depth,0,q,j,null):n.texImage2D(de,0,oe,I.width,I.height,0,q,j,null)),n.bindFramebuffer(36160,B),Fe(I)?f.framebufferTexture2DMultisampleEXT(36160,ge,de,i.get(ce).__webglTexture,0,ke(I)):(de===3553||de>=34069&&de<=34074)&&t.framebufferTexture2D(36160,ge,de,i.get(ce).__webglTexture,0),n.bindFramebuffer(36160,null)}function ve(B,I,ce){if(t.bindRenderbuffer(36161,B),I.depthBuffer&&!I.stencilBuffer){let ge=33189;if(ce||Fe(I)){const de=I.depthTexture;de&&de.isDepthTexture&&(de.type===Ui?ge=36012:de.type===zi&&(ge=33190));const q=ke(I);Fe(I)?f.renderbufferStorageMultisampleEXT(36161,q,ge,I.width,I.height):t.renderbufferStorageMultisample(36161,q,ge,I.width,I.height)}else t.renderbufferStorage(36161,ge,I.width,I.height);t.framebufferRenderbuffer(36160,36096,36161,B)}else if(I.depthBuffer&&I.stencilBuffer){const ge=ke(I);ce&&Fe(I)===!1?t.renderbufferStorageMultisample(36161,ge,35056,I.width,I.height):Fe(I)?f.renderbufferStorageMultisampleEXT(36161,ge,35056,I.width,I.height):t.renderbufferStorage(36161,34041,I.width,I.height),t.framebufferRenderbuffer(36160,33306,36161,B)}else{const ge=I.isWebGLMultipleRenderTargets===!0?I.texture:[I.texture];for(let de=0;de<ge.length;de++){const q=ge[de],j=a.convert(q.format,q.encoding),oe=a.convert(q.type),K=b(q.internalFormat,j,oe,q.encoding),Me=ke(I);ce&&Fe(I)===!1?t.renderbufferStorageMultisample(36161,Me,K,I.width,I.height):Fe(I)?f.renderbufferStorageMultisampleEXT(36161,Me,K,I.width,I.height):t.renderbufferStorage(36161,K,I.width,I.height)}}t.bindRenderbuffer(36161,null)}function be(B,I){if(I&&I.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,B),!(I.depthTexture&&I.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(I.depthTexture).__webglTexture||I.depthTexture.image.width!==I.width||I.depthTexture.image.height!==I.height)&&(I.depthTexture.image.width=I.width,I.depthTexture.image.height=I.height,I.depthTexture.needsUpdate=!0),V(I.depthTexture,0);const ge=i.get(I.depthTexture).__webglTexture,de=ke(I);if(I.depthTexture.format===Gi)Fe(I)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,ge,0,de):t.framebufferTexture2D(36160,36096,3553,ge,0);else if(I.depthTexture.format===Lr)Fe(I)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,ge,0,de):t.framebufferTexture2D(36160,33306,3553,ge,0);else throw new Error("Unknown depthTexture format")}function ye(B){const I=i.get(B),ce=B.isWebGLCubeRenderTarget===!0;if(B.depthTexture&&!I.__autoAllocateDepthBuffer){if(ce)throw new Error("target.depthTexture not supported in Cube render targets");be(I.__webglFramebuffer,B)}else if(ce){I.__webglDepthbuffer=[];for(let ge=0;ge<6;ge++)n.bindFramebuffer(36160,I.__webglFramebuffer[ge]),I.__webglDepthbuffer[ge]=t.createRenderbuffer(),ve(I.__webglDepthbuffer[ge],B,!1)}else n.bindFramebuffer(36160,I.__webglFramebuffer),I.__webglDepthbuffer=t.createRenderbuffer(),ve(I.__webglDepthbuffer,B,!1);n.bindFramebuffer(36160,null)}function te(B,I,ce){const ge=i.get(B);I!==void 0&&X(ge.__webglFramebuffer,B,B.texture,36064,3553),ce!==void 0&&ye(B)}function Ve(B){const I=B.texture,ce=i.get(B),ge=i.get(I);B.addEventListener("dispose",J),B.isWebGLMultipleRenderTargets!==!0&&(ge.__webglTexture===void 0&&(ge.__webglTexture=t.createTexture()),ge.__version=I.version,s.memory.textures++);const de=B.isWebGLCubeRenderTarget===!0,q=B.isWebGLMultipleRenderTargets===!0,j=y(B)||o;if(de){ce.__webglFramebuffer=[];for(let oe=0;oe<6;oe++)ce.__webglFramebuffer[oe]=t.createFramebuffer()}else{if(ce.__webglFramebuffer=t.createFramebuffer(),q)if(r.drawBuffers){const oe=B.texture;for(let K=0,Me=oe.length;K<Me;K++){const pe=i.get(oe[K]);pe.__webglTexture===void 0&&(pe.__webglTexture=t.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&B.samples>0&&Fe(B)===!1){const oe=q?I:[I];ce.__webglMultisampledFramebuffer=t.createFramebuffer(),ce.__webglColorRenderbuffer=[],n.bindFramebuffer(36160,ce.__webglMultisampledFramebuffer);for(let K=0;K<oe.length;K++){const Me=oe[K];ce.__webglColorRenderbuffer[K]=t.createRenderbuffer(),t.bindRenderbuffer(36161,ce.__webglColorRenderbuffer[K]);const pe=a.convert(Me.format,Me.encoding),xe=a.convert(Me.type),Le=b(Me.internalFormat,pe,xe,Me.encoding,B.isXRRenderTarget===!0),Se=ke(B);t.renderbufferStorageMultisample(36161,Se,Le,B.width,B.height),t.framebufferRenderbuffer(36160,36064+K,36161,ce.__webglColorRenderbuffer[K])}t.bindRenderbuffer(36161,null),B.depthBuffer&&(ce.__webglDepthRenderbuffer=t.createRenderbuffer(),ve(ce.__webglDepthRenderbuffer,B,!0)),n.bindFramebuffer(36160,null)}}if(de){n.bindTexture(34067,ge.__webglTexture),Y(34067,I,j);for(let oe=0;oe<6;oe++)X(ce.__webglFramebuffer[oe],B,I,36064,34069+oe);T(I,j)&&L(34067),n.unbindTexture()}else if(q){const oe=B.texture;for(let K=0,Me=oe.length;K<Me;K++){const pe=oe[K],xe=i.get(pe);n.bindTexture(3553,xe.__webglTexture),Y(3553,pe,j),X(ce.__webglFramebuffer,B,pe,36064+K,3553),T(pe,j)&&L(3553)}n.unbindTexture()}else{let oe=3553;(B.isWebGL3DRenderTarget||B.isWebGLArrayRenderTarget)&&(o?oe=B.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(oe,ge.__webglTexture),Y(oe,I,j),X(ce.__webglFramebuffer,B,I,36064,oe),T(I,j)&&L(oe),n.unbindTexture()}B.depthBuffer&&ye(B)}function Xe(B){const I=y(B)||o,ce=B.isWebGLMultipleRenderTargets===!0?B.texture:[B.texture];for(let ge=0,de=ce.length;ge<de;ge++){const q=ce[ge];if(T(q,I)){const j=B.isWebGLCubeRenderTarget?34067:3553,oe=i.get(q).__webglTexture;n.bindTexture(j,oe),L(j),n.unbindTexture()}}}function ie(B){if(o&&B.samples>0&&Fe(B)===!1){const I=B.isWebGLMultipleRenderTargets?B.texture:[B.texture],ce=B.width,ge=B.height;let de=16384;const q=[],j=B.stencilBuffer?33306:36096,oe=i.get(B),K=B.isWebGLMultipleRenderTargets===!0;if(K)for(let Me=0;Me<I.length;Me++)n.bindFramebuffer(36160,oe.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064+Me,36161,null),n.bindFramebuffer(36160,oe.__webglFramebuffer),t.framebufferTexture2D(36009,36064+Me,3553,null,0);n.bindFramebuffer(36008,oe.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,oe.__webglFramebuffer);for(let Me=0;Me<I.length;Me++){q.push(36064+Me),B.depthBuffer&&q.push(j);const pe=oe.__ignoreDepthValues!==void 0?oe.__ignoreDepthValues:!1;if(pe===!1&&(B.depthBuffer&&(de|=256),B.stencilBuffer&&(de|=1024)),K&&t.framebufferRenderbuffer(36008,36064,36161,oe.__webglColorRenderbuffer[Me]),pe===!0&&(t.invalidateFramebuffer(36008,[j]),t.invalidateFramebuffer(36009,[j])),K){const xe=i.get(I[Me]).__webglTexture;t.framebufferTexture2D(36009,36064,3553,xe,0)}t.blitFramebuffer(0,0,ce,ge,0,0,ce,ge,de,9728),d&&t.invalidateFramebuffer(36008,q)}if(n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,null),K)for(let Me=0;Me<I.length;Me++){n.bindFramebuffer(36160,oe.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064+Me,36161,oe.__webglColorRenderbuffer[Me]);const pe=i.get(I[Me]).__webglTexture;n.bindFramebuffer(36160,oe.__webglFramebuffer),t.framebufferTexture2D(36009,36064+Me,3553,pe,0)}n.bindFramebuffer(36009,oe.__webglMultisampledFramebuffer)}}function ke(B){return Math.min(h,B.samples)}function Fe(B){const I=i.get(B);return o&&B.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&I.__useRenderToTexture!==!1}function $e(B){const I=s.render.frame;m.get(B)!==I&&(m.set(B,I),B.update())}function Ke(B,I){const ce=B.encoding,ge=B.format,de=B.type;return B.isCompressedTexture===!0||B.isVideoTexture===!0||B.format===Jl||ce!==Wi&&(ce===gt?o===!1?e.has("EXT_sRGB")===!0&&ge===In?(B.format=Jl,B.minFilter=bn,B.generateMipmaps=!1):I=Ff.sRGBToLinear(I):(ge!==In||de!==Hi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ce)),I}this.allocateTextureUnit=w,this.resetTextureUnits=Z,this.setTexture2D=V,this.setTexture2DArray=F,this.setTexture3D=O,this.setTextureCube=ee,this.rebindTextures=te,this.setupRenderTarget=Ve,this.updateRenderTargetMipmap=Xe,this.updateMultisampleRenderTarget=ie,this.setupDepthRenderbuffer=ye,this.setupFrameBufferTexture=X,this.useMultisampledRTT=Fe}function Xy(t,e,n){const i=n.isWebGL2;function r(a,s=null){let o;if(a===Hi)return 5121;if(a===Up)return 32819;if(a===Bp)return 32820;if(a===Fp)return 5120;if(a===Np)return 5122;if(a===Rf)return 5123;if(a===zp)return 5124;if(a===zi)return 5125;if(a===Ui)return 5126;if(a===xa)return i?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(a===Gp)return 6406;if(a===In)return 6408;if(a===Vp)return 6409;if(a===Hp)return 6410;if(a===Gi)return 6402;if(a===Lr)return 34041;if(a===kp)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(a===Jl)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(a===Wp)return 6403;if(a===jp)return 36244;if(a===Xp)return 33319;if(a===qp)return 33320;if(a===Yp)return 36249;if(a===tl||a===nl||a===il||a===rl)if(s===gt)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(a===tl)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(a===nl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(a===il)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(a===rl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(a===tl)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===nl)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===il)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===rl)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(a===bu||a===Mu||a===wu||a===Su)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(a===bu)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===Mu)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===wu)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===Su)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(a===$p)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(a===Eu||a===Tu)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(a===Eu)return s===gt?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(a===Tu)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(a===Au||a===Lu||a===Cu||a===Pu||a===Ru||a===Du||a===Iu||a===Ou||a===Fu||a===Nu||a===zu||a===Uu||a===Bu||a===Gu)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(a===Au)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(a===Lu)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(a===Cu)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(a===Pu)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(a===Ru)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(a===Du)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(a===Iu)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(a===Ou)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(a===Fu)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(a===Nu)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(a===zu)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(a===Uu)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(a===Bu)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(a===Gu)return s===gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(a===ku)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(a===ku)return s===gt?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return a===Mr?i?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):t[a]!==void 0?t[a]:null}return{convert:r}}class qy extends fn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ha extends Nt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Yy={type:"move"};class Rl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ha,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ha,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new ne,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new ne),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ha,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new ne,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new ne),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const n=this._hand;if(n)for(const i of e.hand.values())this._getHandJoint(n,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,n,i){let r=null,a=null,s=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&n.session.visibilityState!=="visible-blurred"){if(c&&e.hand){s=!0;for(const g of e.hand.values()){const p=n.getJointPose(g,i),v=this._getHandJoint(c,g);p!==null&&(v.matrix.fromArray(p.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=p.radius),v.visible=p!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),d=.02,m=.005;c.inputState.pinching&&f>d+m?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=d-m&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(a=n.getPose(e.gripSpace,i),a!==null&&(l.matrix.fromArray(a.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),a.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(a.linearVelocity)):l.hasLinearVelocity=!1,a.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(a.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(r=n.getPose(e.targetRaySpace,i),r===null&&a!==null&&(r=a),r!==null&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Yy)))}return o!==null&&(o.visible=r!==null),l!==null&&(l.visible=a!==null),c!==null&&(c.visible=s!==null),this}_getHandJoint(e,n){if(e.joints[n.jointName]===void 0){const i=new ha;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[n.jointName]=i,e.add(i)}return e.joints[n.jointName]}}class $y extends tn{constructor(e,n,i,r,a,s,o,l,c,u){if(u=u!==void 0?u:Gi,u!==Gi&&u!==Lr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&u===Gi&&(i=zi),i===void 0&&u===Lr&&(i=Mr),super(null,r,a,s,o,l,u,i,c),this.isDepthTexture=!0,this.image={width:e,height:n},this.magFilter=o!==void 0?o:Ht,this.minFilter=l!==void 0?l:Ht,this.flipY=!1,this.generateMipmaps=!1}}class Zy extends $r{constructor(e,n){super();const i=this;let r=null,a=1,s=null,o="local-floor",l=null,c=null,u=null,h=null,f=null,d=null;const m=n.getContextAttributes();let g=null,p=null;const v=[],_=[],x=new Set,y=new Map,M=new fn;M.layers.enable(1),M.viewport=new _t;const T=new fn;T.layers.enable(2),T.viewport=new _t;const L=[M,T],b=new qy;b.layers.enable(1),b.layers.enable(2);let S=null,D=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(F){let O=v[F];return O===void 0&&(O=new Rl,v[F]=O),O.getTargetRaySpace()},this.getControllerGrip=function(F){let O=v[F];return O===void 0&&(O=new Rl,v[F]=O),O.getGripSpace()},this.getHand=function(F){let O=v[F];return O===void 0&&(O=new Rl,v[F]=O),O.getHandSpace()};function N(F){const O=_.indexOf(F.inputSource);if(O===-1)return;const ee=v[O];ee!==void 0&&ee.dispatchEvent({type:F.type,data:F.inputSource})}function J(){r.removeEventListener("select",N),r.removeEventListener("selectstart",N),r.removeEventListener("selectend",N),r.removeEventListener("squeeze",N),r.removeEventListener("squeezestart",N),r.removeEventListener("squeezeend",N),r.removeEventListener("end",J),r.removeEventListener("inputsourceschange",k);for(let F=0;F<v.length;F++){const O=_[F];O!==null&&(_[F]=null,v[F].disconnect(O))}S=null,D=null,e.setRenderTarget(g),f=null,h=null,u=null,r=null,p=null,V.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(F){a=F,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(F){o=F,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||s},this.setReferenceSpace=function(F){l=F},this.getBaseLayer=function(){return h!==null?h:f},this.getBinding=function(){return u},this.getFrame=function(){return d},this.getSession=function(){return r},this.setSession=async function(F){if(r=F,r!==null){if(g=e.getRenderTarget(),r.addEventListener("select",N),r.addEventListener("selectstart",N),r.addEventListener("selectend",N),r.addEventListener("squeeze",N),r.addEventListener("squeezestart",N),r.addEventListener("squeezeend",N),r.addEventListener("end",J),r.addEventListener("inputsourceschange",k),m.xrCompatible!==!0&&await n.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const O={antialias:r.renderState.layers===void 0?m.antialias:!0,alpha:m.alpha,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:a};f=new XRWebGLLayer(r,n,O),r.updateRenderState({baseLayer:f}),p=new ji(f.framebufferWidth,f.framebufferHeight,{format:In,type:Hi,encoding:e.outputEncoding,stencilBuffer:m.stencil})}else{let O=null,ee=null,W=null;m.depth&&(W=m.stencil?35056:33190,O=m.stencil?Lr:Gi,ee=m.stencil?Mr:zi);const se={colorFormat:32856,depthFormat:W,scaleFactor:a};u=new XRWebGLBinding(r,n),h=u.createProjectionLayer(se),r.updateRenderState({layers:[h]}),p=new ji(h.textureWidth,h.textureHeight,{format:In,type:Hi,depthTexture:new $y(h.textureWidth,h.textureHeight,ee,void 0,void 0,void 0,void 0,void 0,void 0,O),stencilBuffer:m.stencil,encoding:e.outputEncoding,samples:m.antialias?4:0});const Y=e.properties.get(p);Y.__ignoreDepthValues=h.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(1),l=null,s=await r.requestReferenceSpace(o),V.setContext(r),V.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};function k(F){for(let O=0;O<F.removed.length;O++){const ee=F.removed[O],W=_.indexOf(ee);W>=0&&(_[W]=null,v[W].disconnect(ee))}for(let O=0;O<F.added.length;O++){const ee=F.added[O];let W=_.indexOf(ee);if(W===-1){for(let Y=0;Y<v.length;Y++)if(Y>=_.length){_.push(ee),W=Y;break}else if(_[Y]===null){_[Y]=ee,W=Y;break}if(W===-1)break}const se=v[W];se&&se.connect(ee)}}const G=new ne,H=new ne;function z(F,O,ee){G.setFromMatrixPosition(O.matrixWorld),H.setFromMatrixPosition(ee.matrixWorld);const W=G.distanceTo(H),se=O.projectionMatrix.elements,Y=ee.projectionMatrix.elements,re=se[14]/(se[10]-1),ae=se[14]/(se[10]+1),ue=(se[9]+1)/se[5],X=(se[9]-1)/se[5],ve=(se[8]-1)/se[0],be=(Y[8]+1)/Y[0],ye=re*ve,te=re*be,Ve=W/(-ve+be),Xe=Ve*-ve;O.matrixWorld.decompose(F.position,F.quaternion,F.scale),F.translateX(Xe),F.translateZ(Ve),F.matrixWorld.compose(F.position,F.quaternion,F.scale),F.matrixWorldInverse.copy(F.matrixWorld).invert();const ie=re+Ve,ke=ae+Ve,Fe=ye-Xe,$e=te+(W-Xe),Ke=ue*ae/ke*ie,B=X*ae/ke*ie;F.projectionMatrix.makePerspective(Fe,$e,Ke,B,ie,ke)}function Z(F,O){O===null?F.matrixWorld.copy(F.matrix):F.matrixWorld.multiplyMatrices(O.matrixWorld,F.matrix),F.matrixWorldInverse.copy(F.matrixWorld).invert()}this.updateCamera=function(F){if(r===null)return;b.near=T.near=M.near=F.near,b.far=T.far=M.far=F.far,(S!==b.near||D!==b.far)&&(r.updateRenderState({depthNear:b.near,depthFar:b.far}),S=b.near,D=b.far);const O=F.parent,ee=b.cameras;Z(b,O);for(let se=0;se<ee.length;se++)Z(ee[se],O);b.matrixWorld.decompose(b.position,b.quaternion,b.scale),F.matrix.copy(b.matrix),F.matrix.decompose(F.position,F.quaternion,F.scale);const W=F.children;for(let se=0,Y=W.length;se<Y;se++)W[se].updateMatrixWorld(!0);ee.length===2?z(b,M,T):b.projectionMatrix.copy(M.projectionMatrix)},this.getCamera=function(){return b},this.getFoveation=function(){if(h!==null)return h.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function(F){h!==null&&(h.fixedFoveation=F),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=F)},this.getPlanes=function(){return x};let w=null;function R(F,O){if(c=O.getViewerPose(l||s),d=O,c!==null){const ee=c.views;f!==null&&(e.setRenderTargetFramebuffer(p,f.framebuffer),e.setRenderTarget(p));let W=!1;ee.length!==b.cameras.length&&(b.cameras.length=0,W=!0);for(let se=0;se<ee.length;se++){const Y=ee[se];let re=null;if(f!==null)re=f.getViewport(Y);else{const ue=u.getViewSubImage(h,Y);re=ue.viewport,se===0&&(e.setRenderTargetTextures(p,ue.colorTexture,h.ignoreDepthValues?void 0:ue.depthStencilTexture),e.setRenderTarget(p))}let ae=L[se];ae===void 0&&(ae=new fn,ae.layers.enable(se),ae.viewport=new _t,L[se]=ae),ae.matrix.fromArray(Y.transform.matrix),ae.projectionMatrix.fromArray(Y.projectionMatrix),ae.viewport.set(re.x,re.y,re.width,re.height),se===0&&b.matrix.copy(ae.matrix),W===!0&&b.cameras.push(ae)}}for(let ee=0;ee<v.length;ee++){const W=_[ee],se=v[ee];W!==null&&se!==void 0&&se.update(W,O,l||s)}if(w&&w(F,O),O.detectedPlanes){i.dispatchEvent({type:"planesdetected",data:O.detectedPlanes});let ee=null;for(const W of x)O.detectedPlanes.has(W)||(ee===null&&(ee=[]),ee.push(W));if(ee!==null)for(const W of ee)x.delete(W),y.delete(W),i.dispatchEvent({type:"planeremoved",data:W});for(const W of O.detectedPlanes)if(!x.has(W))x.add(W),y.set(W,O.lastChangedTime),i.dispatchEvent({type:"planeadded",data:W});else{const se=y.get(W);W.lastChangedTime>se&&(y.set(W,W.lastChangedTime),i.dispatchEvent({type:"planechanged",data:W}))}}d=null}const V=new jf;V.setAnimationLoop(R),this.setAnimationLoop=function(F){w=F},this.dispose=function(){}}}function Jy(t,e){function n(g,p){p.color.getRGB(g.fogColor.value,Vf(t)),p.isFog?(g.fogNear.value=p.near,g.fogFar.value=p.far):p.isFogExp2&&(g.fogDensity.value=p.density)}function i(g,p,v,_,x){p.isMeshBasicMaterial||p.isMeshLambertMaterial?r(g,p):p.isMeshToonMaterial?(r(g,p),u(g,p)):p.isMeshPhongMaterial?(r(g,p),c(g,p)):p.isMeshStandardMaterial?(r(g,p),h(g,p),p.isMeshPhysicalMaterial&&f(g,p,x)):p.isMeshMatcapMaterial?(r(g,p),d(g,p)):p.isMeshDepthMaterial?r(g,p):p.isMeshDistanceMaterial?(r(g,p),m(g,p)):p.isMeshNormalMaterial?r(g,p):p.isLineBasicMaterial?(a(g,p),p.isLineDashedMaterial&&s(g,p)):p.isPointsMaterial?o(g,p,v,_):p.isSpriteMaterial?l(g,p):p.isShadowMaterial?(g.color.value.copy(p.color),g.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function r(g,p){g.opacity.value=p.opacity,p.color&&g.diffuse.value.copy(p.color),p.emissive&&g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(g.map.value=p.map),p.alphaMap&&(g.alphaMap.value=p.alphaMap),p.bumpMap&&(g.bumpMap.value=p.bumpMap,g.bumpScale.value=p.bumpScale,p.side===wn&&(g.bumpScale.value*=-1)),p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap),p.normalMap&&(g.normalMap.value=p.normalMap,g.normalScale.value.copy(p.normalScale),p.side===wn&&g.normalScale.value.negate()),p.specularMap&&(g.specularMap.value=p.specularMap),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest);const v=e.get(p).envMap;if(v&&(g.envMap.value=v,g.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=p.reflectivity,g.ior.value=p.ior,g.refractionRatio.value=p.refractionRatio),p.lightMap){g.lightMap.value=p.lightMap;const y=t.physicallyCorrectLights!==!0?Math.PI:1;g.lightMapIntensity.value=p.lightMapIntensity*y}p.aoMap&&(g.aoMap.value=p.aoMap,g.aoMapIntensity.value=p.aoMapIntensity);let _;p.map?_=p.map:p.specularMap?_=p.specularMap:p.displacementMap?_=p.displacementMap:p.normalMap?_=p.normalMap:p.bumpMap?_=p.bumpMap:p.roughnessMap?_=p.roughnessMap:p.metalnessMap?_=p.metalnessMap:p.alphaMap?_=p.alphaMap:p.emissiveMap?_=p.emissiveMap:p.clearcoatMap?_=p.clearcoatMap:p.clearcoatNormalMap?_=p.clearcoatNormalMap:p.clearcoatRoughnessMap?_=p.clearcoatRoughnessMap:p.iridescenceMap?_=p.iridescenceMap:p.iridescenceThicknessMap?_=p.iridescenceThicknessMap:p.specularIntensityMap?_=p.specularIntensityMap:p.specularColorMap?_=p.specularColorMap:p.transmissionMap?_=p.transmissionMap:p.thicknessMap?_=p.thicknessMap:p.sheenColorMap?_=p.sheenColorMap:p.sheenRoughnessMap&&(_=p.sheenRoughnessMap),_!==void 0&&(_.isWebGLRenderTarget&&(_=_.texture),_.matrixAutoUpdate===!0&&_.updateMatrix(),g.uvTransform.value.copy(_.matrix));let x;p.aoMap?x=p.aoMap:p.lightMap&&(x=p.lightMap),x!==void 0&&(x.isWebGLRenderTarget&&(x=x.texture),x.matrixAutoUpdate===!0&&x.updateMatrix(),g.uv2Transform.value.copy(x.matrix))}function a(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity}function s(g,p){g.dashSize.value=p.dashSize,g.totalSize.value=p.dashSize+p.gapSize,g.scale.value=p.scale}function o(g,p,v,_){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.size.value=p.size*v,g.scale.value=_*.5,p.map&&(g.map.value=p.map),p.alphaMap&&(g.alphaMap.value=p.alphaMap),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest);let x;p.map?x=p.map:p.alphaMap&&(x=p.alphaMap),x!==void 0&&(x.matrixAutoUpdate===!0&&x.updateMatrix(),g.uvTransform.value.copy(x.matrix))}function l(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.rotation.value=p.rotation,p.map&&(g.map.value=p.map),p.alphaMap&&(g.alphaMap.value=p.alphaMap),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest);let v;p.map?v=p.map:p.alphaMap&&(v=p.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),g.uvTransform.value.copy(v.matrix))}function c(g,p){g.specular.value.copy(p.specular),g.shininess.value=Math.max(p.shininess,1e-4)}function u(g,p){p.gradientMap&&(g.gradientMap.value=p.gradientMap)}function h(g,p){g.roughness.value=p.roughness,g.metalness.value=p.metalness,p.roughnessMap&&(g.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(g.metalnessMap.value=p.metalnessMap),e.get(p).envMap&&(g.envMapIntensity.value=p.envMapIntensity)}function f(g,p,v){g.ior.value=p.ior,p.sheen>0&&(g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),g.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(g.sheenColorMap.value=p.sheenColorMap),p.sheenRoughnessMap&&(g.sheenRoughnessMap.value=p.sheenRoughnessMap)),p.clearcoat>0&&(g.clearcoat.value=p.clearcoat,g.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(g.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),g.clearcoatNormalMap.value=p.clearcoatNormalMap,p.side===wn&&g.clearcoatNormalScale.value.negate())),p.iridescence>0&&(g.iridescence.value=p.iridescence,g.iridescenceIOR.value=p.iridescenceIOR,g.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(g.iridescenceMap.value=p.iridescenceMap),p.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=p.iridescenceThicknessMap)),p.transmission>0&&(g.transmission.value=p.transmission,g.transmissionSamplerMap.value=v.texture,g.transmissionSamplerSize.value.set(v.width,v.height),p.transmissionMap&&(g.transmissionMap.value=p.transmissionMap),g.thickness.value=p.thickness,p.thicknessMap&&(g.thicknessMap.value=p.thicknessMap),g.attenuationDistance.value=p.attenuationDistance,g.attenuationColor.value.copy(p.attenuationColor)),g.specularIntensity.value=p.specularIntensity,g.specularColor.value.copy(p.specularColor),p.specularIntensityMap&&(g.specularIntensityMap.value=p.specularIntensityMap),p.specularColorMap&&(g.specularColorMap.value=p.specularColorMap)}function d(g,p){p.matcap&&(g.matcap.value=p.matcap)}function m(g,p){g.referencePosition.value.copy(p.referencePosition),g.nearDistance.value=p.nearDistance,g.farDistance.value=p.farDistance}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function Qy(t,e,n,i){let r={},a={},s=[];const o=n.isWebGL2?t.getParameter(35375):0;function l(_,x){const y=x.program;i.uniformBlockBinding(_,y)}function c(_,x){let y=r[_.id];y===void 0&&(m(_),y=u(_),r[_.id]=y,_.addEventListener("dispose",p));const M=x.program;i.updateUBOMapping(_,M);const T=e.render.frame;a[_.id]!==T&&(f(_),a[_.id]=T)}function u(_){const x=h();_.__bindingPointIndex=x;const y=t.createBuffer(),M=_.__size,T=_.usage;return t.bindBuffer(35345,y),t.bufferData(35345,M,T),t.bindBuffer(35345,null),t.bindBufferBase(35345,x,y),y}function h(){for(let _=0;_<o;_++)if(s.indexOf(_)===-1)return s.push(_),_;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(_){const x=r[_.id],y=_.uniforms,M=_.__cache;t.bindBuffer(35345,x);for(let T=0,L=y.length;T<L;T++){const b=y[T];if(d(b,T,M)===!0){const S=b.__offset,D=Array.isArray(b.value)?b.value:[b.value];let N=0;for(let J=0;J<D.length;J++){const k=D[J],G=g(k);typeof k=="number"?(b.__data[0]=k,t.bufferSubData(35345,S+N,b.__data)):k.isMatrix3?(b.__data[0]=k.elements[0],b.__data[1]=k.elements[1],b.__data[2]=k.elements[2],b.__data[3]=k.elements[0],b.__data[4]=k.elements[3],b.__data[5]=k.elements[4],b.__data[6]=k.elements[5],b.__data[7]=k.elements[0],b.__data[8]=k.elements[6],b.__data[9]=k.elements[7],b.__data[10]=k.elements[8],b.__data[11]=k.elements[0]):(k.toArray(b.__data,N),N+=G.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(35345,S,b.__data)}}t.bindBuffer(35345,null)}function d(_,x,y){const M=_.value;if(y[x]===void 0){if(typeof M=="number")y[x]=M;else{const T=Array.isArray(M)?M:[M],L=[];for(let b=0;b<T.length;b++)L.push(T[b].clone());y[x]=L}return!0}else if(typeof M=="number"){if(y[x]!==M)return y[x]=M,!0}else{const T=Array.isArray(y[x])?y[x]:[y[x]],L=Array.isArray(M)?M:[M];for(let b=0;b<T.length;b++){const S=T[b];if(S.equals(L[b])===!1)return S.copy(L[b]),!0}}return!1}function m(_){const x=_.uniforms;let y=0;const M=16;let T=0;for(let L=0,b=x.length;L<b;L++){const S=x[L],D={boundary:0,storage:0},N=Array.isArray(S.value)?S.value:[S.value];for(let J=0,k=N.length;J<k;J++){const G=N[J],H=g(G);D.boundary+=H.boundary,D.storage+=H.storage}if(S.__data=new Float32Array(D.storage/Float32Array.BYTES_PER_ELEMENT),S.__offset=y,L>0){T=y%M;const J=M-T;T!==0&&J-D.boundary<0&&(y+=M-T,S.__offset=y)}y+=D.storage}return T=y%M,T>0&&(y+=M-T),_.__size=y,_.__cache={},this}function g(_){const x={boundary:0,storage:0};return typeof _=="number"?(x.boundary=4,x.storage=4):_.isVector2?(x.boundary=8,x.storage=8):_.isVector3||_.isColor?(x.boundary=16,x.storage=12):_.isVector4?(x.boundary=16,x.storage=16):_.isMatrix3?(x.boundary=48,x.storage=48):_.isMatrix4?(x.boundary=64,x.storage=64):_.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",_),x}function p(_){const x=_.target;x.removeEventListener("dispose",p);const y=s.indexOf(x.__bindingPointIndex);s.splice(y,1),t.deleteBuffer(r[x.id]),delete r[x.id],delete a[x.id]}function v(){for(const _ in r)t.deleteBuffer(r[_]);s=[],r={},a={}}return{bind:l,update:c,dispose:v}}function Ky(){const t=ba("canvas");return t.style.display="block",t}function Zf(t={}){this.isWebGLRenderer=!0;const e=t.canvas!==void 0?t.canvas:Ky(),n=t.context!==void 0?t.context:null,i=t.depth!==void 0?t.depth:!0,r=t.stencil!==void 0?t.stencil:!0,a=t.antialias!==void 0?t.antialias:!1,s=t.premultipliedAlpha!==void 0?t.premultipliedAlpha:!0,o=t.preserveDrawingBuffer!==void 0?t.preserveDrawingBuffer:!1,l=t.powerPreference!==void 0?t.powerPreference:"default",c=t.failIfMajorPerformanceCaveat!==void 0?t.failIfMajorPerformanceCaveat:!1;let u;n!==null?u=n.getContextAttributes().alpha:u=t.alpha!==void 0?t.alpha:!1;let h=null,f=null;const d=[],m=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Wi,this.physicallyCorrectLights=!1,this.toneMapping=si,this.toneMappingExposure=1;const g=this;let p=!1,v=0,_=0,x=null,y=-1,M=null;const T=new _t,L=new _t;let b=null,S=e.width,D=e.height,N=1,J=null,k=null;const G=new _t(0,0,S,D),H=new _t(0,0,S,D);let z=!1;const Z=new Zc;let w=!1,R=!1,V=null;const F=new wt,O=new dt,ee=new ne,W={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function se(){return x===null?N:1}let Y=n;function re(U,E){for(let A=0;A<U.length;A++){const P=U[A],$=e.getContext(P,E);if($!==null)return $}return null}try{const U={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:s,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Xc}`),e.addEventListener("webglcontextlost",Le,!1),e.addEventListener("webglcontextrestored",Se,!1),e.addEventListener("webglcontextcreationerror",Je,!1),Y===null){const E=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&E.shift(),Y=re(E,U),Y===null)throw re(E)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}Y.getShaderPrecisionFormat===void 0&&(Y.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(U){throw console.error("THREE.WebGLRenderer: "+U.message),U}let ae,ue,X,ve,be,ye,te,Ve,Xe,ie,ke,Fe,$e,Ke,B,I,ce,ge,de,q,j,oe,K,Me;function pe(){ae=new u0(Y),ue=new i0(Y,ae,t),ae.init(ue),oe=new Xy(Y,ae,ue),X=new Wy(Y,ae,ue),ve=new d0,be=new Py,ye=new jy(Y,ae,X,be,ue,oe,ve),te=new a0(g),Ve=new c0(g),Xe=new bm(Y,ue),K=new t0(Y,ae,Xe,ue),ie=new h0(Y,Xe,ve,K),ke=new v0(Y,ie,Xe,ve),de=new g0(Y,ue,ye),I=new r0(be),Fe=new Cy(g,te,Ve,ae,ue,K,I),$e=new Jy(g,be),Ke=new Dy,B=new Uy(ae,ue),ge=new e0(g,te,Ve,X,ke,u,s),ce=new Hy(g,ke,ue),Me=new Qy(Y,ve,ue,X),q=new n0(Y,ae,ve,ue),j=new f0(Y,ae,ve,ue),ve.programs=Fe.programs,g.capabilities=ue,g.extensions=ae,g.properties=be,g.renderLists=Ke,g.shadowMap=ce,g.state=X,g.info=ve}pe();const xe=new Zy(g,Y);this.xr=xe,this.getContext=function(){return Y},this.getContextAttributes=function(){return Y.getContextAttributes()},this.forceContextLoss=function(){const U=ae.get("WEBGL_lose_context");U&&U.loseContext()},this.forceContextRestore=function(){const U=ae.get("WEBGL_lose_context");U&&U.restoreContext()},this.getPixelRatio=function(){return N},this.setPixelRatio=function(U){U!==void 0&&(N=U,this.setSize(S,D,!1))},this.getSize=function(U){return U.set(S,D)},this.setSize=function(U,E,A){if(xe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}S=U,D=E,e.width=Math.floor(U*N),e.height=Math.floor(E*N),A!==!1&&(e.style.width=U+"px",e.style.height=E+"px"),this.setViewport(0,0,U,E)},this.getDrawingBufferSize=function(U){return U.set(S*N,D*N).floor()},this.setDrawingBufferSize=function(U,E,A){S=U,D=E,N=A,e.width=Math.floor(U*A),e.height=Math.floor(E*A),this.setViewport(0,0,U,E)},this.getCurrentViewport=function(U){return U.copy(T)},this.getViewport=function(U){return U.copy(G)},this.setViewport=function(U,E,A,P){U.isVector4?G.set(U.x,U.y,U.z,U.w):G.set(U,E,A,P),X.viewport(T.copy(G).multiplyScalar(N).floor())},this.getScissor=function(U){return U.copy(H)},this.setScissor=function(U,E,A,P){U.isVector4?H.set(U.x,U.y,U.z,U.w):H.set(U,E,A,P),X.scissor(L.copy(H).multiplyScalar(N).floor())},this.getScissorTest=function(){return z},this.setScissorTest=function(U){X.setScissorTest(z=U)},this.setOpaqueSort=function(U){J=U},this.setTransparentSort=function(U){k=U},this.getClearColor=function(U){return U.copy(ge.getClearColor())},this.setClearColor=function(){ge.setClearColor.apply(ge,arguments)},this.getClearAlpha=function(){return ge.getClearAlpha()},this.setClearAlpha=function(){ge.setClearAlpha.apply(ge,arguments)},this.clear=function(U=!0,E=!0,A=!0){let P=0;U&&(P|=16384),E&&(P|=256),A&&(P|=1024),Y.clear(P)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Le,!1),e.removeEventListener("webglcontextrestored",Se,!1),e.removeEventListener("webglcontextcreationerror",Je,!1),Ke.dispose(),B.dispose(),be.dispose(),te.dispose(),Ve.dispose(),ke.dispose(),K.dispose(),Me.dispose(),Fe.dispose(),xe.dispose(),xe.removeEventListener("sessionstart",Pe),xe.removeEventListener("sessionend",Be),V&&(V.dispose(),V=null),ot.stop()};function Le(U){U.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function Se(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1;const U=ve.autoReset,E=ce.enabled,A=ce.autoUpdate,P=ce.needsUpdate,$=ce.type;pe(),ve.autoReset=U,ce.enabled=E,ce.autoUpdate=A,ce.needsUpdate=P,ce.type=$}function Je(U){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",U.statusMessage)}function qe(U){const E=U.target;E.removeEventListener("dispose",qe),ht(E)}function ht(U){Q(U),be.remove(U)}function Q(U){const E=be.get(U).programs;E!==void 0&&(E.forEach(function(A){Fe.releaseProgram(A)}),U.isShaderMaterial&&Fe.releaseShaderCache(U))}this.renderBufferDirect=function(U,E,A,P,$,fe){E===null&&(E=W);const Te=$.isMesh&&$.matrixWorld.determinant()<0,_e=$o(U,E,A,P,$);X.setMaterial(P,Te);let me=A.index,De=1;P.wireframe===!0&&(me=ie.getWireframeAttribute(A),De=2);const Ne=A.drawRange,Ie=A.attributes.position;let et=Ne.start*De,ft=(Ne.start+Ne.count)*De;fe!==null&&(et=Math.max(et,fe.start*De),ft=Math.min(ft,(fe.start+fe.count)*De)),me!==null?(et=Math.max(et,0),ft=Math.min(ft,me.count)):Ie!=null&&(et=Math.max(et,0),ft=Math.min(ft,Ie.count));const Qe=ft-et;if(Qe<0||Qe===1/0)return;K.setup($,P,_e,A,me);let ze,We=q;if(me!==null&&(ze=Xe.get(me),We=j,We.setIndex(ze)),$.isMesh)P.wireframe===!0?(X.setLineWidth(P.wireframeLinewidth*se()),We.setMode(1)):We.setMode(4);else if($.isLine){let je=P.linewidth;je===void 0&&(je=1),X.setLineWidth(je*se()),$.isLineSegments?We.setMode(1):$.isLineLoop?We.setMode(2):We.setMode(3)}else $.isPoints?We.setMode(0):$.isSprite&&We.setMode(4);if($.isInstancedMesh)We.renderInstances(et,Qe,$.count);else if(A.isInstancedBufferGeometry){const je=A._maxInstanceCount!==void 0?A._maxInstanceCount:1/0,Qt=Math.min(A.instanceCount,je);We.renderInstances(et,Qe,Qt)}else We.render(et,Qe)},this.compile=function(U,E){function A(P,$,fe){P.transparent===!0&&P.side===ms?(P.side=wn,P.needsUpdate=!0,Jt(P,$,fe),P.side=wi,P.needsUpdate=!0,Jt(P,$,fe),P.side=ms):Jt(P,$,fe)}f=B.get(U),f.init(),m.push(f),U.traverseVisible(function(P){P.isLight&&P.layers.test(E.layers)&&(f.pushLight(P),P.castShadow&&f.pushShadow(P))}),f.setupLights(g.physicallyCorrectLights),U.traverse(function(P){const $=P.material;if($)if(Array.isArray($))for(let fe=0;fe<$.length;fe++){const Te=$[fe];A(Te,U,P)}else A($,U,P)}),m.pop(),f=null};let he=null;function we(U){he&&he(U)}function Pe(){ot.stop()}function Be(){ot.start()}const ot=new jf;ot.setAnimationLoop(we),typeof self!="undefined"&&ot.setContext(self),this.setAnimationLoop=function(U){he=U,xe.setAnimationLoop(U),U===null?ot.stop():ot.start()},xe.addEventListener("sessionstart",Pe),xe.addEventListener("sessionend",Be),this.render=function(U,E){if(E!==void 0&&E.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(p===!0)return;U.matrixWorldAutoUpdate===!0&&U.updateMatrixWorld(),E.parent===null&&E.matrixWorldAutoUpdate===!0&&E.updateMatrixWorld(),xe.enabled===!0&&xe.isPresenting===!0&&(xe.cameraAutoUpdate===!0&&xe.updateCamera(E),E=xe.getCamera()),U.isScene===!0&&U.onBeforeRender(g,U,E,x),f=B.get(U,m.length),f.init(),m.push(f),F.multiplyMatrices(E.projectionMatrix,E.matrixWorldInverse),Z.setFromProjectionMatrix(F),R=this.localClippingEnabled,w=I.init(this.clippingPlanes,R,E),h=Ke.get(U,d.length),h.init(),d.push(h),bt(U,E,0,g.sortObjects),h.finish(),g.sortObjects===!0&&h.sort(J,k),w===!0&&I.beginShadows();const A=f.state.shadowsArray;if(ce.render(A,U,E),w===!0&&I.endShadows(),this.info.autoReset===!0&&this.info.reset(),ge.render(h,U),f.setupLights(g.physicallyCorrectLights),E.isArrayCamera){const P=E.cameras;for(let $=0,fe=P.length;$<fe;$++){const Te=P[$];xt(h,U,Te,Te.viewport)}}else xt(h,U,E);x!==null&&(ye.updateMultisampleRenderTarget(x),ye.updateRenderTargetMipmap(x)),U.isScene===!0&&U.onAfterRender(g,U,E),K.resetDefaultState(),y=-1,M=null,m.pop(),m.length>0?f=m[m.length-1]:f=null,d.pop(),d.length>0?h=d[d.length-1]:h=null};function bt(U,E,A,P){if(U.visible===!1)return;if(U.layers.test(E.layers)){if(U.isGroup)A=U.renderOrder;else if(U.isLOD)U.autoUpdate===!0&&U.update(E);else if(U.isLight)f.pushLight(U),U.castShadow&&f.pushShadow(U);else if(U.isSprite){if(!U.frustumCulled||Z.intersectsSprite(U)){P&&ee.setFromMatrixPosition(U.matrixWorld).applyMatrix4(F);const Te=ke.update(U),_e=U.material;_e.visible&&h.push(U,Te,_e,A,ee.z,null)}}else if((U.isMesh||U.isLine||U.isPoints)&&(U.isSkinnedMesh&&U.skeleton.frame!==ve.render.frame&&(U.skeleton.update(),U.skeleton.frame=ve.render.frame),!U.frustumCulled||Z.intersectsObject(U))){P&&ee.setFromMatrixPosition(U.matrixWorld).applyMatrix4(F);const Te=ke.update(U),_e=U.material;if(Array.isArray(_e)){const me=Te.groups;for(let De=0,Ne=me.length;De<Ne;De++){const Ie=me[De],et=_e[Ie.materialIndex];et&&et.visible&&h.push(U,Te,et,A,ee.z,Ie)}}else _e.visible&&h.push(U,Te,_e,A,ee.z,null)}}const fe=U.children;for(let Te=0,_e=fe.length;Te<_e;Te++)bt(fe[Te],E,A,P)}function xt(U,E,A,P){const $=U.opaque,fe=U.transmissive,Te=U.transparent;f.setupLightsView(A),fe.length>0&&$n($,E,A),P&&X.viewport(T.copy(P)),$.length>0&&pt($,E,A),fe.length>0&&pt(fe,E,A),Te.length>0&&pt(Te,E,A),X.buffers.depth.setTest(!0),X.buffers.depth.setMask(!0),X.buffers.color.setMask(!0),X.setPolygonOffset(!1)}function $n(U,E,A){const P=ue.isWebGL2;V===null&&(V=new ji(1,1,{generateMipmaps:!0,type:ae.has("EXT_color_buffer_half_float")?xa:Hi,minFilter:ya,samples:P&&a===!0?4:0})),g.getDrawingBufferSize(O),P?V.setSize(O.x,O.y):V.setSize(Ql(O.x),Ql(O.y));const $=g.getRenderTarget();g.setRenderTarget(V),g.clear();const fe=g.toneMapping;g.toneMapping=si,pt(U,E,A),g.toneMapping=fe,ye.updateMultisampleRenderTarget(V),ye.updateRenderTargetMipmap(V),g.setRenderTarget($)}function pt(U,E,A){const P=E.isScene===!0?E.overrideMaterial:null;for(let $=0,fe=U.length;$<fe;$++){const Te=U[$],_e=Te.object,me=Te.geometry,De=P===null?Te.material:P,Ne=Te.group;_e.layers.test(A.layers)&&An(_e,E,A,me,De,Ne)}}function An(U,E,A,P,$,fe){U.onBeforeRender(g,E,A,P,$,fe),U.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,U.matrixWorld),U.normalMatrix.getNormalMatrix(U.modelViewMatrix),$.onBeforeRender(g,E,A,P,U,fe),$.transparent===!0&&$.side===ms?($.side=wn,$.needsUpdate=!0,g.renderBufferDirect(A,E,P,$,U,fe),$.side=wi,$.needsUpdate=!0,g.renderBufferDirect(A,E,P,$,U,fe),$.side=ms):g.renderBufferDirect(A,E,P,$,U,fe),U.onAfterRender(g,E,A,P,$,fe)}function Jt(U,E,A){E.isScene!==!0&&(E=W);const P=be.get(U),$=f.state.lights,fe=f.state.shadowsArray,Te=$.state.version,_e=Fe.getParameters(U,$.state,fe,E,A),me=Fe.getProgramCacheKey(_e);let De=P.programs;P.environment=U.isMeshStandardMaterial?E.environment:null,P.fog=E.fog,P.envMap=(U.isMeshStandardMaterial?Ve:te).get(U.envMap||P.environment),De===void 0&&(U.addEventListener("dispose",qe),De=new Map,P.programs=De);let Ne=De.get(me);if(Ne!==void 0){if(P.currentProgram===Ne&&P.lightsStateVersion===Te)return ps(U,_e),Ne}else _e.uniforms=Fe.getUniforms(U),U.onBuild(A,_e,g),U.onBeforeCompile(_e,g),Ne=Fe.acquireProgram(_e,me),De.set(me,Ne),P.uniforms=_e.uniforms;const Ie=P.uniforms;(!U.isShaderMaterial&&!U.isRawShaderMaterial||U.clipping===!0)&&(Ie.clippingPlanes=I.uniform),ps(U,_e),P.needsLights=Jo(U),P.lightsStateVersion=Te,P.needsLights&&(Ie.ambientLightColor.value=$.state.ambient,Ie.lightProbe.value=$.state.probe,Ie.directionalLights.value=$.state.directional,Ie.directionalLightShadows.value=$.state.directionalShadow,Ie.spotLights.value=$.state.spot,Ie.spotLightShadows.value=$.state.spotShadow,Ie.rectAreaLights.value=$.state.rectArea,Ie.ltc_1.value=$.state.rectAreaLTC1,Ie.ltc_2.value=$.state.rectAreaLTC2,Ie.pointLights.value=$.state.point,Ie.pointLightShadows.value=$.state.pointShadow,Ie.hemisphereLights.value=$.state.hemi,Ie.directionalShadowMap.value=$.state.directionalShadowMap,Ie.directionalShadowMatrix.value=$.state.directionalShadowMatrix,Ie.spotShadowMap.value=$.state.spotShadowMap,Ie.spotLightMatrix.value=$.state.spotLightMatrix,Ie.spotLightMap.value=$.state.spotLightMap,Ie.pointShadowMap.value=$.state.pointShadowMap,Ie.pointShadowMatrix.value=$.state.pointShadowMatrix);const et=Ne.getUniforms(),ft=Ws.seqWithValue(et.seq,Ie);return P.currentProgram=Ne,P.uniformsList=ft,Ne}function ps(U,E){const A=be.get(U);A.outputEncoding=E.outputEncoding,A.instancing=E.instancing,A.skinning=E.skinning,A.morphTargets=E.morphTargets,A.morphNormals=E.morphNormals,A.morphColors=E.morphColors,A.morphTargetsCount=E.morphTargetsCount,A.numClippingPlanes=E.numClippingPlanes,A.numIntersection=E.numClipIntersection,A.vertexAlphas=E.vertexAlphas,A.vertexTangents=E.vertexTangents,A.toneMapping=E.toneMapping}function $o(U,E,A,P,$){E.isScene!==!0&&(E=W),ye.resetTextureUnits();const fe=E.fog,Te=P.isMeshStandardMaterial?E.environment:null,_e=x===null?g.outputEncoding:x.isXRRenderTarget===!0?x.texture.encoding:Wi,me=(P.isMeshStandardMaterial?Ve:te).get(P.envMap||Te),De=P.vertexColors===!0&&!!A.attributes.color&&A.attributes.color.itemSize===4,Ne=!!P.normalMap&&!!A.attributes.tangent,Ie=!!A.morphAttributes.position,et=!!A.morphAttributes.normal,ft=!!A.morphAttributes.color,Qe=P.toneMapped?g.toneMapping:si,ze=A.morphAttributes.position||A.morphAttributes.normal||A.morphAttributes.color,We=ze!==void 0?ze.length:0,je=be.get(P),Qt=f.state.lights;if(w===!0&&(R===!0||U!==M)){const rn=U===M&&P.id===y;I.setState(P,U,rn)}let rt=!1;P.version===je.__version?(je.needsLights&&je.lightsStateVersion!==Qt.state.version||je.outputEncoding!==_e||$.isInstancedMesh&&je.instancing===!1||!$.isInstancedMesh&&je.instancing===!0||$.isSkinnedMesh&&je.skinning===!1||!$.isSkinnedMesh&&je.skinning===!0||je.envMap!==me||P.fog===!0&&je.fog!==fe||je.numClippingPlanes!==void 0&&(je.numClippingPlanes!==I.numPlanes||je.numIntersection!==I.numIntersection)||je.vertexAlphas!==De||je.vertexTangents!==Ne||je.morphTargets!==Ie||je.morphNormals!==et||je.morphColors!==ft||je.toneMapping!==Qe||ue.isWebGL2===!0&&je.morphTargetsCount!==We)&&(rt=!0):(rt=!0,je.__version=P.version);let It=je.currentProgram;rt===!0&&(It=Jt(P,E,$));let Li=!1,Zn=!1,Ci=!1;const Bt=It.getUniforms(),Pi=je.uniforms;if(X.useProgram(It.program)&&(Li=!0,Zn=!0,Ci=!0),P.id!==y&&(y=P.id,Zn=!0),Li||M!==U){if(Bt.setValue(Y,"projectionMatrix",U.projectionMatrix),ue.logarithmicDepthBuffer&&Bt.setValue(Y,"logDepthBufFC",2/(Math.log(U.far+1)/Math.LN2)),M!==U&&(M=U,Zn=!0,Ci=!0),P.isShaderMaterial||P.isMeshPhongMaterial||P.isMeshToonMaterial||P.isMeshStandardMaterial||P.envMap){const rn=Bt.map.cameraPosition;rn!==void 0&&rn.setValue(Y,ee.setFromMatrixPosition(U.matrixWorld))}(P.isMeshPhongMaterial||P.isMeshToonMaterial||P.isMeshLambertMaterial||P.isMeshBasicMaterial||P.isMeshStandardMaterial||P.isShaderMaterial)&&Bt.setValue(Y,"isOrthographic",U.isOrthographicCamera===!0),(P.isMeshPhongMaterial||P.isMeshToonMaterial||P.isMeshLambertMaterial||P.isMeshBasicMaterial||P.isMeshStandardMaterial||P.isShaderMaterial||P.isShadowMaterial||$.isSkinnedMesh)&&Bt.setValue(Y,"viewMatrix",U.matrixWorldInverse)}if($.isSkinnedMesh){Bt.setOptional(Y,$,"bindMatrix"),Bt.setOptional(Y,$,"bindMatrixInverse");const rn=$.skeleton;rn&&(ue.floatVertexTextures?(rn.boneTexture===null&&rn.computeBoneTexture(),Bt.setValue(Y,"boneTexture",rn.boneTexture,ye),Bt.setValue(Y,"boneTextureSize",rn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Qo=A.morphAttributes;if((Qo.position!==void 0||Qo.normal!==void 0||Qo.color!==void 0&&ue.isWebGL2===!0)&&de.update($,A,P,It),(Zn||je.receiveShadow!==$.receiveShadow)&&(je.receiveShadow=$.receiveShadow,Bt.setValue(Y,"receiveShadow",$.receiveShadow)),P.isMeshGouraudMaterial&&P.envMap!==null&&(Pi.envMap.value=me,Pi.flipEnvMap.value=me.isCubeTexture&&me.isRenderTargetTexture===!1?-1:1),Zn&&(Bt.setValue(Y,"toneMappingExposure",g.toneMappingExposure),je.needsLights&&Zo(Pi,Ci),fe&&P.fog===!0&&$e.refreshFogUniforms(Pi,fe),$e.refreshMaterialUniforms(Pi,P,N,D,V),Ws.upload(Y,je.uniformsList,Pi,ye)),P.isShaderMaterial&&P.uniformsNeedUpdate===!0&&(Ws.upload(Y,je.uniformsList,Pi,ye),P.uniformsNeedUpdate=!1),P.isSpriteMaterial&&Bt.setValue(Y,"center",$.center),Bt.setValue(Y,"modelViewMatrix",$.modelViewMatrix),Bt.setValue(Y,"normalMatrix",$.normalMatrix),Bt.setValue(Y,"modelMatrix",$.matrixWorld),P.isShaderMaterial||P.isRawShaderMaterial){const rn=P.uniformsGroups;for(let Ko=0,ip=rn.length;Ko<ip;Ko++)if(ue.isWebGL2){const du=rn[Ko];Me.update(du,It),Me.bind(du,It)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return It}function Zo(U,E){U.ambientLightColor.needsUpdate=E,U.lightProbe.needsUpdate=E,U.directionalLights.needsUpdate=E,U.directionalLightShadows.needsUpdate=E,U.pointLights.needsUpdate=E,U.pointLightShadows.needsUpdate=E,U.spotLights.needsUpdate=E,U.spotLightShadows.needsUpdate=E,U.rectAreaLights.needsUpdate=E,U.hemisphereLights.needsUpdate=E}function Jo(U){return U.isMeshLambertMaterial||U.isMeshToonMaterial||U.isMeshPhongMaterial||U.isMeshStandardMaterial||U.isShadowMaterial||U.isShaderMaterial&&U.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return x},this.setRenderTargetTextures=function(U,E,A){be.get(U.texture).__webglTexture=E,be.get(U.depthTexture).__webglTexture=A;const P=be.get(U);P.__hasExternalTextures=!0,P.__hasExternalTextures&&(P.__autoAllocateDepthBuffer=A===void 0,P.__autoAllocateDepthBuffer||ae.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),P.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(U,E){const A=be.get(U);A.__webglFramebuffer=E,A.__useDefaultFramebuffer=E===void 0},this.setRenderTarget=function(U,E=0,A=0){x=U,v=E,_=A;let P=!0,$=null,fe=!1,Te=!1;if(U){const me=be.get(U);me.__useDefaultFramebuffer!==void 0?(X.bindFramebuffer(36160,null),P=!1):me.__webglFramebuffer===void 0?ye.setupRenderTarget(U):me.__hasExternalTextures&&ye.rebindTextures(U,be.get(U.texture).__webglTexture,be.get(U.depthTexture).__webglTexture);const De=U.texture;(De.isData3DTexture||De.isDataArrayTexture||De.isCompressedArrayTexture)&&(Te=!0);const Ne=be.get(U).__webglFramebuffer;U.isWebGLCubeRenderTarget?($=Ne[E],fe=!0):ue.isWebGL2&&U.samples>0&&ye.useMultisampledRTT(U)===!1?$=be.get(U).__webglMultisampledFramebuffer:$=Ne,T.copy(U.viewport),L.copy(U.scissor),b=U.scissorTest}else T.copy(G).multiplyScalar(N).floor(),L.copy(H).multiplyScalar(N).floor(),b=z;if(X.bindFramebuffer(36160,$)&&ue.drawBuffers&&P&&X.drawBuffers(U,$),X.viewport(T),X.scissor(L),X.setScissorTest(b),fe){const me=be.get(U.texture);Y.framebufferTexture2D(36160,36064,34069+E,me.__webglTexture,A)}else if(Te){const me=be.get(U.texture),De=E||0;Y.framebufferTextureLayer(36160,36064,me.__webglTexture,A||0,De)}y=-1},this.readRenderTargetPixels=function(U,E,A,P,$,fe,Te){if(!(U&&U.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let _e=be.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&Te!==void 0&&(_e=_e[Te]),_e){X.bindFramebuffer(36160,_e);try{const me=U.texture,De=me.format,Ne=me.type;if(De!==In&&oe.convert(De)!==Y.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Ie=Ne===xa&&(ae.has("EXT_color_buffer_half_float")||ue.isWebGL2&&ae.has("EXT_color_buffer_float"));if(Ne!==Hi&&oe.convert(Ne)!==Y.getParameter(35738)&&!(Ne===Ui&&(ue.isWebGL2||ae.has("OES_texture_float")||ae.has("WEBGL_color_buffer_float")))&&!Ie){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}E>=0&&E<=U.width-P&&A>=0&&A<=U.height-$&&Y.readPixels(E,A,P,$,oe.convert(De),oe.convert(Ne),fe)}finally{const me=x!==null?be.get(x).__webglFramebuffer:null;X.bindFramebuffer(36160,me)}}},this.copyFramebufferToTexture=function(U,E,A=0){const P=Math.pow(2,-A),$=Math.floor(E.image.width*P),fe=Math.floor(E.image.height*P);ye.setTexture2D(E,0),Y.copyTexSubImage2D(3553,A,0,0,U.x,U.y,$,fe),X.unbindTexture()},this.copyTextureToTexture=function(U,E,A,P=0){const $=E.image.width,fe=E.image.height,Te=oe.convert(A.format),_e=oe.convert(A.type);ye.setTexture2D(A,0),Y.pixelStorei(37440,A.flipY),Y.pixelStorei(37441,A.premultiplyAlpha),Y.pixelStorei(3317,A.unpackAlignment),E.isDataTexture?Y.texSubImage2D(3553,P,U.x,U.y,$,fe,Te,_e,E.image.data):E.isCompressedTexture?Y.compressedTexSubImage2D(3553,P,U.x,U.y,E.mipmaps[0].width,E.mipmaps[0].height,Te,E.mipmaps[0].data):Y.texSubImage2D(3553,P,U.x,U.y,Te,_e,E.image),P===0&&A.generateMipmaps&&Y.generateMipmap(3553),X.unbindTexture()},this.copyTextureToTexture3D=function(U,E,A,P,$=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const fe=U.max.x-U.min.x+1,Te=U.max.y-U.min.y+1,_e=U.max.z-U.min.z+1,me=oe.convert(P.format),De=oe.convert(P.type);let Ne;if(P.isData3DTexture)ye.setTexture3D(P,0),Ne=32879;else if(P.isDataArrayTexture)ye.setTexture2DArray(P,0),Ne=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Y.pixelStorei(37440,P.flipY),Y.pixelStorei(37441,P.premultiplyAlpha),Y.pixelStorei(3317,P.unpackAlignment);const Ie=Y.getParameter(3314),et=Y.getParameter(32878),ft=Y.getParameter(3316),Qe=Y.getParameter(3315),ze=Y.getParameter(32877),We=A.isCompressedTexture?A.mipmaps[0]:A.image;Y.pixelStorei(3314,We.width),Y.pixelStorei(32878,We.height),Y.pixelStorei(3316,U.min.x),Y.pixelStorei(3315,U.min.y),Y.pixelStorei(32877,U.min.z),A.isDataTexture||A.isData3DTexture?Y.texSubImage3D(Ne,$,E.x,E.y,E.z,fe,Te,_e,me,De,We.data):A.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Y.compressedTexSubImage3D(Ne,$,E.x,E.y,E.z,fe,Te,_e,me,We.data)):Y.texSubImage3D(Ne,$,E.x,E.y,E.z,fe,Te,_e,me,De,We),Y.pixelStorei(3314,Ie),Y.pixelStorei(32878,et),Y.pixelStorei(3316,ft),Y.pixelStorei(3315,Qe),Y.pixelStorei(32877,ze),$===0&&P.generateMipmaps&&Y.generateMipmap(Ne),X.unbindTexture()},this.initTexture=function(U){U.isCubeTexture?ye.setTextureCube(U,0):U.isData3DTexture?ye.setTexture3D(U,0):U.isDataArrayTexture||U.isCompressedArrayTexture?ye.setTexture2DArray(U,0):ye.setTexture2D(U,0),X.unbindTexture()},this.resetState=function(){v=0,_=0,x=null,X.reset(),K.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class ex extends Zf{}ex.prototype.isWebGL1Renderer=!0;class tx extends Nt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.fog!==null&&(n.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(n.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(n.backgroundIntensity=this.backgroundIntensity),n}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class js extends oi{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ut(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Sh=new ne,Eh=new ne,Th=new wt,Dl=new $c,Fs=new cs;class nx extends Nt{constructor(e=new On,n=new js){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const n=e.attributes.position,i=[0];for(let r=1,a=n.count;r<a;r++)Sh.fromBufferAttribute(n,r-1),Eh.fromBufferAttribute(n,r),i[r]=i[r-1],i[r]+=Sh.distanceTo(Eh);e.setAttribute("lineDistance",new Wt(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,n){const i=this.geometry,r=this.matrixWorld,a=e.params.Line.threshold,s=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Fs.copy(i.boundingSphere),Fs.applyMatrix4(r),Fs.radius+=a,e.ray.intersectsSphere(Fs)===!1)return;Th.copy(r).invert(),Dl.copy(e.ray).applyMatrix4(Th);const o=a/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=new ne,u=new ne,h=new ne,f=new ne,d=this.isLineSegments?2:1,m=i.index,p=i.attributes.position;if(m!==null){const v=Math.max(0,s.start),_=Math.min(m.count,s.start+s.count);for(let x=v,y=_-1;x<y;x+=d){const M=m.getX(x),T=m.getX(x+1);if(c.fromBufferAttribute(p,M),u.fromBufferAttribute(p,T),Dl.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const b=e.ray.origin.distanceTo(f);b<e.near||b>e.far||n.push({distance:b,point:h.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,s.start),_=Math.min(p.count,s.start+s.count);for(let x=v,y=_-1;x<y;x+=d){if(c.fromBufferAttribute(p,x),u.fromBufferAttribute(p,x+1),Dl.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const T=e.ray.origin.distanceTo(f);T<e.near||T>e.far||n.push({distance:T,point:h.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,s=r.length;a<s;a++){const o=r[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=a}}}}}const Ah=new ne,Lh=new ne;class Ch extends nx{constructor(e,n){super(e,n),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const n=e.attributes.position,i=[];for(let r=0,a=n.count;r<a;r+=2)Ah.fromBufferAttribute(n,r),Lh.fromBufferAttribute(n,r+1),i[r]=r===0?0:i[r-1],i[r+1]=i[r]+Ah.distanceTo(Lh);e.setAttribute("lineDistance",new Wt(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class fa extends oi{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new ut(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Ph=new wt,ec=new $c,Ns=new cs,zs=new ne;class Il extends Nt{constructor(e=new On,n=new fa){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),this.material=e.material,this.geometry=e.geometry,this}raycast(e,n){const i=this.geometry,r=this.matrixWorld,a=e.params.Points.threshold,s=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Ns.copy(i.boundingSphere),Ns.applyMatrix4(r),Ns.radius+=a,e.ray.intersectsSphere(Ns)===!1)return;Ph.copy(r).invert(),ec.copy(e.ray).applyMatrix4(Ph);const o=a/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=i.index,h=i.attributes.position;if(c!==null){const f=Math.max(0,s.start),d=Math.min(c.count,s.start+s.count);for(let m=f,g=d;m<g;m++){const p=c.getX(m);zs.fromBufferAttribute(h,p),Rh(zs,p,l,r,e,n,this)}}else{const f=Math.max(0,s.start),d=Math.min(h.count,s.start+s.count);for(let m=f,g=d;m<g;m++)zs.fromBufferAttribute(h,m),Rh(zs,m,l,r,e,n,this)}}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,s=r.length;a<s;a++){const o=r[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=a}}}}}function Rh(t,e,n,i,r,a,s){const o=ec.distanceSqToPoint(t);if(o<n){const l=new ne;ec.closestPointToPoint(t,l),l.applyMatrix4(i);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;a.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:s})}}class Jf extends oi{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new ut(16777215),this.specular=new ut(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ut(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Df,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Yc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}const Zs={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class ix{constructor(e,n,i){const r=this;let a=!1,s=0,o=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=n,this.onError=i,this.itemStart=function(u){o++,a===!1&&r.onStart!==void 0&&r.onStart(u,s,o),a=!0},this.itemEnd=function(u){s++,r.onProgress!==void 0&&r.onProgress(u,s,o),s===o&&(a=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(u){r.onError!==void 0&&r.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=c.length;h<f;h+=2){const d=c[h],m=c[h+1];if(d.global&&(d.lastIndex=0),d.test(u))return m}return null}}}const Qf=new ix;class fs{constructor(e){this.manager=e!==void 0?e:Qf,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,n){const i=this;return new Promise(function(r,a){i.load(e,r,n,a)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const ni={};class rx extends Error{constructor(e,n){super(e),this.response=n}}class Kf extends fs{constructor(e){super(e)}load(e,n,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=Zs.get(e);if(a!==void 0)return this.manager.itemStart(e),setTimeout(()=>{n&&n(a),this.manager.itemEnd(e)},0),a;if(ni[e]!==void 0){ni[e].push({onLoad:n,onProgress:i,onError:r});return}ni[e]=[],ni[e].push({onLoad:n,onProgress:i,onError:r});const s=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(s).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||c.body===void 0||c.body.getReader===void 0)return c;const u=ni[e],h=c.body.getReader(),f=c.headers.get("Content-Length")||c.headers.get("X-File-Size"),d=f?parseInt(f):0,m=d!==0;let g=0;const p=new ReadableStream({start(v){_();function _(){h.read().then(({done:x,value:y})=>{if(x)v.close();else{g+=y.byteLength;const M=new ProgressEvent("progress",{lengthComputable:m,loaded:g,total:d});for(let T=0,L=u.length;T<L;T++){const b=u[T];b.onProgress&&b.onProgress(M)}v.enqueue(y),_()}})}}});return new Response(p)}else throw new rx(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,o));case"json":return c.json();default:if(o===void 0)return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(o),f=h&&h[1]?h[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(m=>d.decode(m))}}}).then(c=>{Zs.add(e,c);const u=ni[e];delete ni[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onLoad&&d.onLoad(c)}}).catch(c=>{const u=ni[e];if(u===void 0)throw this.manager.itemError(e),c;delete ni[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class ax extends fs{constructor(e){super(e)}load(e,n,i,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,s=Zs.get(e);if(s!==void 0)return a.manager.itemStart(e),setTimeout(function(){n&&n(s),a.manager.itemEnd(e)},0),s;const o=ba("img");function l(){u(),Zs.add(e,this),n&&n(this),a.manager.itemEnd(e)}function c(h){u(),r&&r(h),a.manager.itemError(e),a.manager.itemEnd(e)}function u(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),a.manager.itemStart(e),o.src=e,o}}class sx extends fs{constructor(e){super(e)}load(e,n,i,r){const a=new tn,s=new ax(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(o){a.image=o,a.needsUpdate=!0,n!==void 0&&n(a)},i,r),a}}class ed extends Nt{constructor(e,n=1){super(),this.isLight=!0,this.type="Light",this.color=new ut(e),this.intensity=n}dispose(){}copy(e,n){return super.copy(e,n),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const n=super.toJSON(e);return n.object.color=this.color.getHex(),n.object.intensity=this.intensity,this.groundColor!==void 0&&(n.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(n.object.distance=this.distance),this.angle!==void 0&&(n.object.angle=this.angle),this.decay!==void 0&&(n.object.decay=this.decay),this.penumbra!==void 0&&(n.object.penumbra=this.penumbra),this.shadow!==void 0&&(n.object.shadow=this.shadow.toJSON()),n}}const Ol=new wt,Dh=new ne,Ih=new ne;class ox{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new dt(512,512),this.map=null,this.mapPass=null,this.matrix=new wt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Zc,this._frameExtents=new dt(1,1),this._viewportCount=1,this._viewports=[new _t(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const n=this.camera,i=this.matrix;Dh.setFromMatrixPosition(e.matrixWorld),n.position.copy(Dh),Ih.setFromMatrixPosition(e.target.matrixWorld),n.lookAt(Ih),n.updateMatrixWorld(),Ol.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ol),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Ol)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}const Oh=new wt,la=new ne,Fl=new ne;class lx extends ox{constructor(){super(new fn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new dt(4,2),this._viewportCount=6,this._viewports=[new _t(2,1,1,1),new _t(0,1,1,1),new _t(3,1,1,1),new _t(1,1,1,1),new _t(3,0,1,1),new _t(1,0,1,1)],this._cubeDirections=[new ne(1,0,0),new ne(-1,0,0),new ne(0,0,1),new ne(0,0,-1),new ne(0,1,0),new ne(0,-1,0)],this._cubeUps=[new ne(0,1,0),new ne(0,1,0),new ne(0,1,0),new ne(0,1,0),new ne(0,0,1),new ne(0,0,-1)]}updateMatrices(e,n=0){const i=this.camera,r=this.matrix,a=e.distance||i.far;a!==i.far&&(i.far=a,i.updateProjectionMatrix()),la.setFromMatrixPosition(e.matrixWorld),i.position.copy(la),Fl.copy(i.position),Fl.add(this._cubeDirections[n]),i.up.copy(this._cubeUps[n]),i.lookAt(Fl),i.updateMatrixWorld(),r.makeTranslation(-la.x,-la.y,-la.z),Oh.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Oh)}}class cx extends ed{constructor(e,n,i=0,r=2){super(e,n),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=r,this.shadow=new lx}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,n){return super.copy(e,n),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class ux extends ed{constructor(e,n){super(e,n),this.isAmbientLight=!0,this.type="AmbientLight"}}class hx{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let n="";for(let i=0,r=e.length;i<r;i++)n+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(n))}catch{return n}}static extractUrlBase(e){const n=e.lastIndexOf("/");return n===-1?"./":e.slice(0,n+1)}static resolveURL(e,n){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(n)&&/^\//.test(e)&&(n=n.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:n+e)}}typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Xc}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Xc);Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52));Number.isInteger===void 0&&(Number.isInteger=function(t){return typeof t=="number"&&isFinite(t)&&Math.floor(t)===t});Math.sign===void 0&&(Math.sign=function(t){return t<0?-1:t>0?1:+t});"name"in Function.prototype||Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}});Object.assign===void 0&&function(){Object.assign=function(t){if(t==null)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),n=1;n<arguments.length;n++){var i=arguments[n];if(i!=null)for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e}}();Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52));Number.isInteger===void 0&&(Number.isInteger=function(t){return typeof t=="number"&&isFinite(t)&&Math.floor(t)===t});Math.sign===void 0&&(Math.sign=function(t){return t<0?-1:t>0?1:+t});"name"in Function.prototype||Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}});Object.assign===void 0&&function(){Object.assign=function(t){if(t==null)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),n=1;n<arguments.length;n++){var i=arguments[n];if(i!=null)for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e}}();function Zt(){}Object.assign(Zt.prototype,{addEventListener:function(t,e){this._listeners===void 0&&(this._listeners={});var n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)},hasEventListener:function(t,e){if(this._listeners===void 0)return!1;var n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1},removeEventListener:function(t,e){if(this._listeners!==void 0){var n=this._listeners,i=n[t];if(i!==void 0){var r=i.indexOf(e);r!==-1&&i.splice(r,1)}}},dispatchEvent:function(t){if(this._listeners!==void 0){var e=this._listeners,n=e[t.type];if(n!==void 0){t.target=this;for(var i=n.slice(0),r=0,a=i.length;r<a;r++)i[r].call(this,t)}}}});var fx="100",wr={LEFT:0,MIDDLE:1,RIGHT:2},dx=0,Fh=1,px=2,td=1,mx=2,ds=0,Vt=1,er=2,nd=1,id=0,rd=1,Jr=2,Xs=0,Sr=1,tc=2,nc=3,ic=4,ad=5,xr=100,gx=101,vx=102,Nl=103,zl=104,yx=200,xx=201,_x=202,bx=203,sd=204,od=205,Mx=206,wx=207,Sx=208,Ex=209,Tx=210,Ax=0,Lx=1,Cx=2,rc=3,Px=4,Rx=5,Dx=6,Ix=7,jo=0,Ox=1,Fx=2,Ul=0,ld=1,Nx=2,zx=3,Ux=4,Bx=5,Kc=300,eu=301,ac=302,cd=303,sc=304,ud=305,tu=306,nu=307,yi=1e3,Mn=1001,Pr=1002,en=1003,iu=1004,ru=1005,Yt=1006,hd=1007,Xo=1008,au=1009,Gx=1010,kx=1011,Js=1012,Vx=1013,fd=1014,Ma=1015,su=1016,Hx=1017,Wx=1018,jx=1019,Qs=1020,Xx=1021,Rr=1022,Si=1023,qx=1024,Yx=1025,Er=1026,wa=1027,$x=1028,Nh=33776,zh=33777,Uh=33778,Bh=33779,Gh=35840,kh=35841,Vh=35842,Hh=35843,Zx=36196,Jx=37808,Qx=37809,Kx=37810,e_=37811,t_=37812,n_=37813,i_=37814,r_=37815,a_=37816,s_=37817,o_=37818,l_=37819,c_=37820,u_=37821,h_=2200,f_=2201,d_=2202,Ks=2300,qs=2301,Bl=2302,Dr=2400,_r=2401,eo=2402,dd=0,p_=1,m_=2,to=3e3,g_=3001,pd=3007,v_=3002,y_=3004,x_=3005,__=3006,b_=3200,M_=3201,qo=0,w_=1,it={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){for(var t=[],e=0;e<256;e++)t[e]=(e<16?"0":"")+e.toString(16);return function(){var i=Math.random()*4294967295|0,r=Math.random()*4294967295|0,a=Math.random()*4294967295|0,s=Math.random()*4294967295|0,o=t[i&255]+t[i>>8&255]+t[i>>16&255]+t[i>>24&255]+"-"+t[r&255]+t[r>>8&255]+"-"+t[r>>16&15|64]+t[r>>24&255]+"-"+t[a&63|128]+t[a>>8&255]+"-"+t[a>>16&255]+t[a>>24&255]+t[s&255]+t[s>>8&255]+t[s>>16&255]+t[s>>24&255];return o.toUpperCase()}}(),clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(t*6-15)+10))},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*it.DEG2RAD},radToDeg:function(t){return t*it.RAD2DEG},isPowerOfTwo:function(t){return(t&t-1)===0&&t!==0},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}};function le(t,e){this.x=t||0,this.y=e||0}Object.defineProperties(le.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}});Object.assign(le.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return e!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return e!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){var e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(){var t=new le,e=new le;return function(i,r){return t.set(i,i),e.set(r,r),this.clamp(t,e)}}(),clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},cross:function(t){return this.x*t.y-this.y*t.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y;return e*e+n*n},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return e===void 0&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*n-a*i+t.x,this.y=r*i+a*n+t.y,this}});function Ye(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Ye.prototype,{isMatrix4:!0,set:function(t,e,n,i,r,a,s,o,l,c,u,h,f,d,m,g){var p=this.elements;return p[0]=t,p[4]=e,p[8]=n,p[12]=i,p[1]=r,p[5]=a,p[9]=s,p[13]=o,p[2]=l,p[6]=c,p[10]=u,p[14]=h,p[3]=f,p[7]=d,p[11]=m,p[15]=g,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return new Ye().fromArray(this.elements)},copy:function(t){var e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this},copyPosition:function(t){var e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this},extractBasis:function(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this},extractRotation:function(){var t=new C;return function(n){var i=this.elements,r=n.elements,a=1/t.setFromMatrixColumn(n,0).length(),s=1/t.setFromMatrixColumn(n,1).length(),o=1/t.setFromMatrixColumn(n,2).length();return i[0]=r[0]*a,i[1]=r[1]*a,i[2]=r[2]*a,i[3]=0,i[4]=r[4]*s,i[5]=r[5]*s,i[6]=r[6]*s,i[7]=0,i[8]=r[8]*o,i[9]=r[9]*o,i[10]=r[10]*o,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}}(),makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,n=t.x,i=t.y,r=t.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(r),u=Math.sin(r);if(t.order==="XYZ"){var h=a*c,f=a*u,d=s*c,m=s*u;e[0]=o*c,e[4]=-o*u,e[8]=l,e[1]=f+d*l,e[5]=h-m*l,e[9]=-s*o,e[2]=m-h*l,e[6]=d+f*l,e[10]=a*o}else if(t.order==="YXZ"){var g=o*c,p=o*u,v=l*c,_=l*u;e[0]=g+_*s,e[4]=v*s-p,e[8]=a*l,e[1]=a*u,e[5]=a*c,e[9]=-s,e[2]=p*s-v,e[6]=_+g*s,e[10]=a*o}else if(t.order==="ZXY"){var g=o*c,p=o*u,v=l*c,_=l*u;e[0]=g-_*s,e[4]=-a*u,e[8]=v+p*s,e[1]=p+v*s,e[5]=a*c,e[9]=_-g*s,e[2]=-a*l,e[6]=s,e[10]=a*o}else if(t.order==="ZYX"){var h=a*c,f=a*u,d=s*c,m=s*u;e[0]=o*c,e[4]=d*l-f,e[8]=h*l+m,e[1]=o*u,e[5]=m*l+h,e[9]=f*l-d,e[2]=-l,e[6]=s*o,e[10]=a*o}else if(t.order==="YZX"){var x=a*o,y=a*l,M=s*o,T=s*l;e[0]=o*c,e[4]=T-x*u,e[8]=M*u+y,e[1]=u,e[5]=a*c,e[9]=-s*c,e[2]=-l*c,e[6]=y*u+M,e[10]=x-T*u}else if(t.order==="XZY"){var x=a*o,y=a*l,M=s*o,T=s*l;e[0]=o*c,e[4]=-u,e[8]=l*c,e[1]=x*u+T,e[5]=a*c,e[9]=y*u-M,e[2]=M*u-y,e[6]=s*c,e[10]=T*u+x}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(){var t=new C(0,0,0),e=new C(1,1,1);return function(i){return this.compose(t,i,e)}}(),lookAt:function(){var t=new C,e=new C,n=new C;return function(r,a,s){var o=this.elements;return n.subVectors(r,a),n.lengthSq()===0&&(n.z=1),n.normalize(),t.crossVectors(s,n),t.lengthSq()===0&&(Math.abs(s.z)===1?n.x+=1e-4:n.z+=1e-4,n.normalize(),t.crossVectors(s,n)),t.normalize(),e.crossVectors(n,t),o[0]=t.x,o[4]=e.x,o[8]=n.x,o[1]=t.y,o[5]=e.y,o[9]=n.y,o[2]=t.z,o[6]=e.z,o[10]=n.z,this}}(),multiply:function(t,e){return e!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[4],o=n[8],l=n[12],c=n[1],u=n[5],h=n[9],f=n[13],d=n[2],m=n[6],g=n[10],p=n[14],v=n[3],_=n[7],x=n[11],y=n[15],M=i[0],T=i[4],L=i[8],b=i[12],S=i[1],D=i[5],N=i[9],J=i[13],k=i[2],G=i[6],H=i[10],z=i[14],Z=i[3],w=i[7],R=i[11],V=i[15];return r[0]=a*M+s*S+o*k+l*Z,r[4]=a*T+s*D+o*G+l*w,r[8]=a*L+s*N+o*H+l*R,r[12]=a*b+s*J+o*z+l*V,r[1]=c*M+u*S+h*k+f*Z,r[5]=c*T+u*D+h*G+f*w,r[9]=c*L+u*N+h*H+f*R,r[13]=c*b+u*J+h*z+f*V,r[2]=d*M+m*S+g*k+p*Z,r[6]=d*T+m*D+g*G+p*w,r[10]=d*L+m*N+g*H+p*R,r[14]=d*b+m*J+g*z+p*V,r[3]=v*M+_*S+x*k+y*Z,r[7]=v*T+_*D+x*G+y*w,r[11]=v*L+_*N+x*H+y*R,r[15]=v*b+_*J+x*z+y*V,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(){var t=new C;return function(n){for(var i=0,r=n.count;i<r;i++)t.x=n.getX(i),t.y=n.getY(i),t.z=n.getZ(i),t.applyMatrix4(this),n.setXYZ(i,t.x,t.y,t.z);return n}}(),determinant:function(){var t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],a=t[1],s=t[5],o=t[9],l=t[13],c=t[2],u=t[6],h=t[10],f=t[14],d=t[3],m=t[7],g=t[11],p=t[15];return d*(+r*o*u-i*l*u-r*s*h+n*l*h+i*s*f-n*o*f)+m*(+e*o*f-e*l*h+r*a*h-i*a*f+i*l*c-r*o*c)+g*(+e*l*u-e*s*f-r*a*u+n*a*f+r*s*c-n*l*c)+p*(-i*s*c-e*o*u+e*s*h+i*a*u-n*a*h+n*o*c)},transpose:function(){var t=this.elements,e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var n=this.elements,i=t.elements,r=i[0],a=i[1],s=i[2],o=i[3],l=i[4],c=i[5],u=i[6],h=i[7],f=i[8],d=i[9],m=i[10],g=i[11],p=i[12],v=i[13],_=i[14],x=i[15],y=d*_*h-v*m*h+v*u*g-c*_*g-d*u*x+c*m*x,M=p*m*h-f*_*h-p*u*g+l*_*g+f*u*x-l*m*x,T=f*v*h-p*d*h+p*c*g-l*v*g-f*c*x+l*d*x,L=p*d*u-f*v*u-p*c*m+l*v*m+f*c*_-l*d*_,b=r*y+a*M+s*T+o*L;if(b===0){var S="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(e===!0)throw new Error(S);return console.warn(S),this.identity()}var D=1/b;return n[0]=y*D,n[1]=(v*m*o-d*_*o-v*s*g+a*_*g+d*s*x-a*m*x)*D,n[2]=(c*_*o-v*u*o+v*s*h-a*_*h-c*s*x+a*u*x)*D,n[3]=(d*u*o-c*m*o-d*s*h+a*m*h+c*s*g-a*u*g)*D,n[4]=M*D,n[5]=(f*_*o-p*m*o+p*s*g-r*_*g-f*s*x+r*m*x)*D,n[6]=(p*u*o-l*_*o-p*s*h+r*_*h+l*s*x-r*u*x)*D,n[7]=(l*m*o-f*u*o+f*s*h-r*m*h-l*s*g+r*u*g)*D,n[8]=T*D,n[9]=(p*d*o-f*v*o-p*a*g+r*v*g+f*a*x-r*d*x)*D,n[10]=(l*v*o-p*c*o+p*a*h-r*v*h-l*a*x+r*c*x)*D,n[11]=(f*c*o-l*d*o-f*a*h+r*d*h+l*a*g-r*c*g)*D,n[12]=L*D,n[13]=(f*v*s-p*d*s+p*a*m-r*v*m-f*a*_+r*d*_)*D,n[14]=(p*c*s-l*v*s-p*a*u+r*v*u+l*a*_-r*c*_)*D,n[15]=(l*d*s-f*c*s+f*a*u-r*d*u-l*a*m+r*c*m)*D,this},scale:function(t){var e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))},makeTranslation:function(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var n=Math.cos(e),i=Math.sin(e),r=1-n,a=t.x,s=t.y,o=t.z,l=r*a,c=r*s;return this.set(l*a+n,l*s-i*o,l*o+i*s,0,l*s+i*o,c*s+n,c*o-i*a,0,l*o-i*s,c*o+i*a,r*o*o+n,0,0,0,0,1),this},makeScale:function(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,n){var i=this.elements,r=e._x,a=e._y,s=e._z,o=e._w,l=r+r,c=a+a,u=s+s,h=r*l,f=r*c,d=r*u,m=a*c,g=a*u,p=s*u,v=o*l,_=o*c,x=o*u,y=n.x,M=n.y,T=n.z;return i[0]=(1-(m+p))*y,i[1]=(f+x)*y,i[2]=(d-_)*y,i[3]=0,i[4]=(f-x)*M,i[5]=(1-(h+p))*M,i[6]=(g+v)*M,i[7]=0,i[8]=(d+_)*T,i[9]=(g-v)*T,i[10]=(1-(h+m))*T,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this},decompose:function(){var t=new C,e=new Ye;return function(i,r,a){var s=this.elements,o=t.set(s[0],s[1],s[2]).length(),l=t.set(s[4],s[5],s[6]).length(),c=t.set(s[8],s[9],s[10]).length(),u=this.determinant();u<0&&(o=-o),i.x=s[12],i.y=s[13],i.z=s[14],e.copy(this);var h=1/o,f=1/l,d=1/c;return e.elements[0]*=h,e.elements[1]*=h,e.elements[2]*=h,e.elements[4]*=f,e.elements[5]*=f,e.elements[6]*=f,e.elements[8]*=d,e.elements[9]*=d,e.elements[10]*=d,r.setFromRotationMatrix(e),a.x=o,a.y=l,a.z=c,this}}(),makePerspective:function(t,e,n,i,r,a){a===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var s=this.elements,o=2*r/(e-t),l=2*r/(n-i),c=(e+t)/(e-t),u=(n+i)/(n-i),h=-(a+r)/(a-r),f=-2*a*r/(a-r);return s[0]=o,s[4]=0,s[8]=c,s[12]=0,s[1]=0,s[5]=l,s[9]=u,s[13]=0,s[2]=0,s[6]=0,s[10]=h,s[14]=f,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this},makeOrthographic:function(t,e,n,i,r,a){var s=this.elements,o=1/(e-t),l=1/(n-i),c=1/(a-r),u=(e+t)*o,h=(n+i)*l,f=(a+r)*c;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-u,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-h,s[2]=0,s[6]=0,s[10]=-2*c,s[14]=-f,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this},equals:function(t){for(var e=this.elements,n=t.elements,i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0},fromArray:function(t,e){e===void 0&&(e=0);for(var n=0;n<16;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){t===void 0&&(t=[]),e===void 0&&(e=0);var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}});function ct(t,e,n,i){this._x=t||0,this._y=e||0,this._z=n||0,this._w=i!==void 0?i:1}Object.assign(ct,{slerp:function(t,e,n,i){return n.copy(t).slerp(e,i)},slerpFlat:function(t,e,n,i,r,a,s){var o=n[i+0],l=n[i+1],c=n[i+2],u=n[i+3],h=r[a+0],f=r[a+1],d=r[a+2],m=r[a+3];if(u!==m||o!==h||l!==f||c!==d){var g=1-s,p=o*h+l*f+c*d+u*m,v=p>=0?1:-1,_=1-p*p;if(_>Number.EPSILON){var x=Math.sqrt(_),y=Math.atan2(x,p*v);g=Math.sin(g*y)/x,s=Math.sin(s*y)/x}var M=s*v;if(o=o*g+h*M,l=l*g+f*M,c=c*g+d*M,u=u*g+m*M,g===1-s){var T=1/Math.sqrt(o*o+l*l+c*c+u*u);o*=T,l*=T,c*=T,u*=T}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=u}});Object.defineProperties(ct.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this.onChangeCallback()}}});Object.assign(ct.prototype,{isQuaternion:!0,set:function(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(!(t&&t.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=t._x,i=t._y,r=t._z,a=t.order,s=Math.cos,o=Math.sin,l=s(n/2),c=s(i/2),u=s(r/2),h=o(n/2),f=o(i/2),d=o(r/2);return a==="XYZ"?(this._x=h*c*u+l*f*d,this._y=l*f*u-h*c*d,this._z=l*c*d+h*f*u,this._w=l*c*u-h*f*d):a==="YXZ"?(this._x=h*c*u+l*f*d,this._y=l*f*u-h*c*d,this._z=l*c*d-h*f*u,this._w=l*c*u+h*f*d):a==="ZXY"?(this._x=h*c*u-l*f*d,this._y=l*f*u+h*c*d,this._z=l*c*d+h*f*u,this._w=l*c*u-h*f*d):a==="ZYX"?(this._x=h*c*u-l*f*d,this._y=l*f*u+h*c*d,this._z=l*c*d-h*f*u,this._w=l*c*u+h*f*d):a==="YZX"?(this._x=h*c*u+l*f*d,this._y=l*f*u+h*c*d,this._z=l*c*d-h*f*u,this._w=l*c*u-h*f*d):a==="XZY"&&(this._x=h*c*u-l*f*d,this._y=l*f*u-h*c*d,this._z=l*c*d+h*f*u,this._w=l*c*u+h*f*d),e!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e=t.elements,n=e[0],i=e[4],r=e[8],a=e[1],s=e[5],o=e[9],l=e[2],c=e[6],u=e[10],h=n+s+u,f;return h>0?(f=.5/Math.sqrt(h+1),this._w=.25/f,this._x=(c-o)*f,this._y=(r-l)*f,this._z=(a-i)*f):n>s&&n>u?(f=2*Math.sqrt(1+n-s-u),this._w=(c-o)/f,this._x=.25*f,this._y=(i+a)/f,this._z=(r+l)/f):s>u?(f=2*Math.sqrt(1+s-n-u),this._w=(r-l)/f,this._x=(i+a)/f,this._y=.25*f,this._z=(o+c)/f):(f=2*Math.sqrt(1+u-n-s),this._w=(a-i)/f,this._x=(r+l)/f,this._y=(o+c)/f,this._z=.25*f),this.onChangeCallback(),this},setFromUnitVectors:function(){var t=new C,e,n=1e-6;return function(r,a){return t===void 0&&(t=new C),e=r.dot(a)+1,e<n?(e=0,Math.abs(r.x)>Math.abs(r.z)?t.set(-r.y,r.x,0):t.set(0,-r.z,r.y)):t.crossVectors(r,a),this._x=t.x,this._y=t.y,this._z=t.z,this._w=e,this.normalize()}}(),angleTo:function(t){return 2*Math.acos(Math.abs(it.clamp(this.dot(t),-1,1)))},rotateTowards:function(t,e){var n=this.angleTo(t);if(n===0)return this;var i=Math.min(1,e/n);return this.slerp(t,i),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return e!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var n=t._x,i=t._y,r=t._z,a=t._w,s=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+a*s+i*l-r*o,this._y=i*c+a*o+r*s-n*l,this._z=r*c+a*l+n*o-i*s,this._w=a*c-n*s-i*o-r*l,this.onChangeCallback(),this},slerp:function(t,e){if(e===0)return this;if(e===1)return this.copy(t);var n=this._x,i=this._y,r=this._z,a=this._w,s=a*t._w+n*t._x+i*t._y+r*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;var o=1-s*s;if(o<=Number.EPSILON){var l=1-e;return this._w=l*a+e*this._w,this._x=l*n+e*this._x,this._y=l*i+e*this._y,this._z=l*r+e*this._z,this.normalize()}var c=Math.sqrt(o),u=Math.atan2(c,s),h=Math.sin((1-e)*u)/c,f=Math.sin(e*u)/c;return this._w=a*h+this._w*f,this._x=n*h+this._x*f,this._y=i*h+this._y*f,this._z=r*h+this._z*f,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return e===void 0&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}});function C(t,e,n){this.x=t||0,this.y=e||0,this.z=n||0}Object.assign(C.prototype,{isVector3:!0,set:function(t,e,n){return this.x=t,this.y=e,this.z=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return e!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return e!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return e!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t=new ct;return function(n){return n&&n.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(t.setFromEuler(n))}}(),applyAxisAngle:function(){var t=new ct;return function(n,i){return this.applyQuaternion(t.setFromAxisAngle(n,i))}}(),applyMatrix3:function(t){var e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this},applyMatrix4:function(t){var e=this.x,n=this.y,i=this.z,r=t.elements,a=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*a,this},applyQuaternion:function(t){var e=this.x,n=this.y,i=this.z,r=t.x,a=t.y,s=t.z,o=t.w,l=o*e+a*i-s*n,c=o*n+s*e-r*i,u=o*i+r*n-a*e,h=-r*e-a*n-s*i;return this.x=l*o+h*-r+c*-s-u*-a,this.y=c*o+h*-a+u*-r-l*-s,this.z=u*o+h*-s+l*-a-c*-r,this},project:function(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)},unproject:function(){var t=new Ye;return function(n){return this.applyMatrix4(t.getInverse(n.projectionMatrix)).applyMatrix4(n.matrixWorld)}}(),transformDirection:function(t){var e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(){var t=new C,e=new C;return function(i,r){return t.set(i,i,i),e.set(r,r,r),this.clamp(t,e)}}(),clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},cross:function(t,e){return e!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)},crossVectors:function(t,e){var n=t.x,i=t.y,r=t.z,a=e.x,s=e.y,o=e.z;return this.x=i*o-r*s,this.y=r*a-n*o,this.z=n*s-i*a,this},projectOnVector:function(t){var e=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(e)},projectOnPlane:function(){var t=new C;return function(n){return t.copy(this).projectOnVector(n),this.sub(t)}}(),reflect:function(){var t=new C;return function(n){return this.sub(t.copy(n).multiplyScalar(2*this.dot(n)))}}(),angleTo:function(t){var e=this.dot(t)/Math.sqrt(this.lengthSq()*t.lengthSq());return Math.acos(it.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)},setFromSphericalCoords:function(t,e,n){var i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this},setFromCylindrical:function(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)},setFromCylindricalCoords:function(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this},setFromMatrixPosition:function(t){var e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,e*4)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return e===void 0&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}});function zt(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Object.assign(zt.prototype,{isMatrix3:!0,set:function(t,e,n,i,r,a,s,o,l){var c=this.elements;return c[0]=t,c[1]=i,c[2]=s,c[3]=e,c[4]=r,c[5]=o,c[6]=n,c[7]=a,c[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(t){var e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(){var t=new C;return function(n){for(var i=0,r=n.count;i<r;i++)t.x=n.getX(i),t.y=n.getY(i),t.z=n.getZ(i),t.applyMatrix3(this),n.setXYZ(i,t.x,t.y,t.z);return n}}(),multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[3],o=n[6],l=n[1],c=n[4],u=n[7],h=n[2],f=n[5],d=n[8],m=i[0],g=i[3],p=i[6],v=i[1],_=i[4],x=i[7],y=i[2],M=i[5],T=i[8];return r[0]=a*m+s*v+o*y,r[3]=a*g+s*_+o*M,r[6]=a*p+s*x+o*T,r[1]=l*m+c*v+u*y,r[4]=l*g+c*_+u*M,r[7]=l*p+c*x+u*T,r[2]=h*m+f*v+d*y,r[5]=h*g+f*_+d*M,r[8]=h*p+f*x+d*T,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8];return e*a*c-e*s*l-n*r*c+n*s*o+i*r*l-i*a*o},getInverse:function(t,e){t&&t.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var n=t.elements,i=this.elements,r=n[0],a=n[1],s=n[2],o=n[3],l=n[4],c=n[5],u=n[6],h=n[7],f=n[8],d=f*l-c*h,m=c*u-f*o,g=h*o-l*u,p=r*d+a*m+s*g;if(p===0){var v="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(e===!0)throw new Error(v);return console.warn(v),this.identity()}var _=1/p;return i[0]=d*_,i[1]=(s*h-f*a)*_,i[2]=(c*a-s*l)*_,i[3]=m*_,i[4]=(f*r-s*u)*_,i[5]=(s*o-c*r)*_,i[6]=g*_,i[7]=(a*u-h*r)*_,i[8]=(l*r-a*o)*_,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,n,i,r,a,s){var o=Math.cos(r),l=Math.sin(r);this.set(n*o,n*l,-n*(o*a+l*s)+a+t,-i*l,i*o,-i*(-l*a+o*s)+s+e,0,0,1)},scale:function(t,e){var n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this},rotate:function(t){var e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],a=i[3],s=i[6],o=i[1],l=i[4],c=i[7];return i[0]=e*r+n*o,i[3]=e*a+n*l,i[6]=e*s+n*c,i[1]=-n*r+e*o,i[4]=-n*a+e*l,i[7]=-n*s+e*c,this},translate:function(t,e){var n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this},equals:function(t){for(var e=this.elements,n=t.elements,i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0},fromArray:function(t,e){e===void 0&&(e=0);for(var n=0;n<9;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){t===void 0&&(t=[]),e===void 0&&(e=0);var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}});var mr,qi={getDataURL:function(t){var e;if(typeof HTMLCanvasElement=="undefined")return t.src;if(t instanceof HTMLCanvasElement)e=t;else{mr===void 0&&(mr=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),mr.width=t.width,mr.height=t.height;var n=mr.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=mr}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}},S_=0;function vt(t,e,n,i,r,a,s,o,l,c){Object.defineProperty(this,"id",{value:S_++}),this.uuid=it.generateUUID(),this.name="",this.image=t!==void 0?t:vt.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=e!==void 0?e:vt.DEFAULT_MAPPING,this.wrapS=n!==void 0?n:Mn,this.wrapT=i!==void 0?i:Mn,this.magFilter=r!==void 0?r:Yt,this.minFilter=a!==void 0?a:Xo,this.anisotropy=l!==void 0?l:1,this.format=s!==void 0?s:Si,this.type=o!==void 0?o:au,this.offset=new le(0,0),this.repeat=new le(1,1),this.center=new le(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new zt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c!==void 0?c:to,this.version=0,this.onUpdate=null}vt.DEFAULT_IMAGE=void 0;vt.DEFAULT_MAPPING=Kc;vt.prototype=Object.assign(Object.create(Zt.prototype),{constructor:vt,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){var e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];var n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){var i=this.image;if(i.uuid===void 0&&(i.uuid=it.generateUUID()),!e&&t.images[i.uuid]===void 0){var r;if(Array.isArray(i)){r=[];for(var a=0,s=i.length;a<s;a++)r.push(qi.getDataURL(i[a]))}else r=qi.getDataURL(i);t.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping!==Kc)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case yi:t.x=t.x-Math.floor(t.x);break;case Mn:t.x=t.x<0?0:1;break;case Pr:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case yi:t.y=t.y-Math.floor(t.y);break;case Mn:t.y=t.y<0?0:1;break;case Pr:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}});Object.defineProperty(vt.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});function mt(t,e,n,i){this.x=t||0,this.y=e||0,this.z=n||0,this.w=i!==void 0?i:1}Object.assign(mt.prototype,{isVector4:!0,set:function(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this},add:function(t,e){return e!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return e!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,n=this.y,i=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*e+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*e+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*e+a[7]*n+a[11]*i+a[15]*r,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,n,i,r,a=.01,s=.1,o=t.elements,l=o[0],c=o[4],u=o[8],h=o[1],f=o[5],d=o[9],m=o[2],g=o[6],p=o[10];if(Math.abs(c-h)<a&&Math.abs(u-m)<a&&Math.abs(d-g)<a){if(Math.abs(c+h)<s&&Math.abs(u+m)<s&&Math.abs(d+g)<s&&Math.abs(l+f+p-3)<s)return this.set(1,0,0,0),this;e=Math.PI;var v=(l+1)/2,_=(f+1)/2,x=(p+1)/2,y=(c+h)/4,M=(u+m)/4,T=(d+g)/4;return v>_&&v>x?v<a?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(v),i=y/n,r=M/n):_>x?_<a?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(_),n=y/i,r=T/i):x<a?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(x),n=M/r,i=T/r),this.set(n,i,r,e),this}var L=Math.sqrt((g-d)*(g-d)+(u-m)*(u-m)+(h-c)*(h-c));return Math.abs(L)<.001&&(L=1),this.x=(g-d)/L,this.y=(u-m)/L,this.z=(h-c)/L,this.w=Math.acos((l+f+p-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(){var t,e;return function(i,r){return t===void 0&&(t=new mt,e=new mt),t.set(i,i,i,i),e.set(r,r,r,r),this.clamp(t,e)}}(),clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return e===void 0&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}});function Ir(t,e,n){this.width=t,this.height=e,this.scissor=new mt(0,0,t,e),this.scissorTest=!1,this.viewport=new mt(0,0,t,e),n=n||{},this.texture=new vt(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Yt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!0,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}Ir.prototype=Object.assign(Object.create(Zt.prototype),{constructor:Ir,isWebGLRenderTarget:!0,setSize:function(t,e){(this.width!==t||this.height!==e)&&(this.width=t,this.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function Sa(t,e,n){Ir.call(this,t,e,n),this.activeCubeFace=0,this.activeMipMapLevel=0}Sa.prototype=Object.create(Ir.prototype);Sa.prototype.constructor=Sa;Sa.prototype.isWebGLRenderTargetCube=!0;function Or(t,e,n,i,r,a,s,o,l,c,u,h){vt.call(this,null,a,s,o,l,c,i,r,u,h),this.image={data:t,width:e,height:n},this.magFilter=l!==void 0?l:en,this.minFilter=c!==void 0?c:en,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}Or.prototype=Object.create(vt.prototype);Or.prototype.constructor=Or;Or.prototype.isDataTexture=!0;function li(t,e){this.min=t!==void 0?t:new C(1/0,1/0,1/0),this.max=e!==void 0?e:new C(-1/0,-1/0,-1/0)}Object.assign(li.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0,o=0,l=t.length;o<l;o+=3){var c=t[o],u=t[o+1],h=t[o+2];c<e&&(e=c),u<n&&(n=u),h<i&&(i=h),c>r&&(r=c),u>a&&(a=u),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(r,a,s),this},setFromBufferAttribute:function(t){for(var e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0,o=0,l=t.count;o<l;o++){var c=t.getX(o),u=t.getY(o),h=t.getZ(o);c<e&&(e=c),u<n&&(n=u),h<i&&(i=h),c>r&&(r=c),u>a&&(a=u),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(r,a,s),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new C;return function(n,i){var r=t.copy(i).multiplyScalar(.5);return this.min.copy(n).sub(r),this.max.copy(n).add(r),this}}(),setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){return t===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new C),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return t===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new C),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(){var t,e,n,i=new C;function r(a){var s=a.geometry;if(s!==void 0){if(s.isGeometry){var o=s.vertices;for(e=0,n=o.length;e<n;e++)i.copy(o[e]),i.applyMatrix4(a.matrixWorld),t.expandByPoint(i)}else if(s.isBufferGeometry){var l=s.attributes.position;if(l!==void 0)for(e=0,n=l.count;e<n;e++)i.fromBufferAttribute(l,e).applyMatrix4(a.matrixWorld),t.expandByPoint(i)}}}return function(s){return t=this,s.updateMatrixWorld(!0),s.traverse(r),this}}(),containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return e===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new C),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(){var t=new C;return function(n){return this.clampPoint(n.center,t),t.distanceToSquared(n.center)<=n.radius*n.radius}}(),intersectsPlane:function(t){var e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant},intersectsTriangle:function(){var t=new C,e=new C,n=new C,i=new C,r=new C,a=new C,s=new C,o=new C,l=new C,c=new C;function u(h){var f,d;for(f=0,d=h.length-3;f<=d;f+=3){s.fromArray(h,f);var m=l.x*Math.abs(s.x)+l.y*Math.abs(s.y)+l.z*Math.abs(s.z),g=t.dot(s),p=e.dot(s),v=n.dot(s);if(Math.max(-Math.max(g,p,v),Math.min(g,p,v))>m)return!1}return!0}return function(f){if(this.isEmpty())return!1;this.getCenter(o),l.subVectors(this.max,o),t.subVectors(f.a,o),e.subVectors(f.b,o),n.subVectors(f.c,o),i.subVectors(e,t),r.subVectors(n,e),a.subVectors(t,n);var d=[0,-i.z,i.y,0,-r.z,r.y,0,-a.z,a.y,i.z,0,-i.x,r.z,0,-r.x,a.z,0,-a.x,-i.y,i.x,0,-r.y,r.x,0,-a.y,a.x,0];return!u(d)||(d=[1,0,0,0,1,0,0,0,1],!u(d))?!1:(c.crossVectors(i,r),d=[c.x,c.y,c.z],u(d))}}(),clampPoint:function(t,e){return e===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new C),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new C;return function(n){var i=t.copy(n).clamp(this.min,this.max);return i.sub(n).length()}}(),getBoundingSphere:function(){var t=new C;return function(n){return n===void 0&&(console.warn("THREE.Box3: .getBoundingSphere() target is now required"),n=new Fn),this.getCenter(n.center),n.radius=this.getSize(t).length()*.5,n}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new C,new C,new C,new C,new C,new C,new C,new C];return function(n){return this.isEmpty()?this:(t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(n),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(n),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(n),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(n),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(n),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(n),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(n),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(n),this.setFromPoints(t),this)}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});function Fn(t,e){this.center=t!==void 0?t:new C,this.radius=e!==void 0?e:0}Object.assign(Fn.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new li;return function(n,i){var r=this.center;i!==void 0?r.copy(i):t.setFromPoints(n).getCenter(r);for(var a=0,s=0,o=n.length;s<o;s++)a=Math.max(a,r.distanceToSquared(n[s]));return this.radius=Math.sqrt(a),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var n=this.center.distanceToSquared(t);return e===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new C),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(t){return t===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new li),t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}});function Un(t,e){this.normal=t!==void 0?t:new C(1,0,0),this.constant=e!==void 0?e:0}Object.assign(Un.prototype,{set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new C,e=new C;return function(i,r,a){var s=t.subVectors(a,r).cross(e.subVectors(i,r)).normalize();return this.setFromNormalAndCoplanarPoint(s,i),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return e===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new C),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(){var t=new C;return function(n,i){i===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),i=new C);var r=n.delta(t),a=this.normal.dot(r);if(a===0)return this.distanceToPoint(n.start)===0?i.copy(n.start):void 0;var s=-(n.start.dot(this.normal)+this.constant)/a;if(!(s<0||s>1))return i.copy(r).multiplyScalar(s).add(n.start)}}(),intersectsLine:function(t){var e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return t===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new C),t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new C,e=new zt;return function(i,r){var a=r||e.getNormalMatrix(i),s=this.coplanarPoint(t).applyMatrix4(i),o=this.normal.applyMatrix3(a).normalize();return this.constant=-s.dot(o),this}}(),translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}});function ou(t,e,n,i,r,a){this.planes=[t!==void 0?t:new Un,e!==void 0?e:new Un,n!==void 0?n:new Un,i!==void 0?i:new Un,r!==void 0?r:new Un,a!==void 0?a:new Un]}Object.assign(ou.prototype,{set:function(t,e,n,i,r,a){var s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){for(var e=this.planes,n=0;n<6;n++)e[n].copy(t.planes[n]);return this},setFromMatrix:function(t){var e=this.planes,n=t.elements,i=n[0],r=n[1],a=n[2],s=n[3],o=n[4],l=n[5],c=n[6],u=n[7],h=n[8],f=n[9],d=n[10],m=n[11],g=n[12],p=n[13],v=n[14],_=n[15];return e[0].setComponents(s-i,u-o,m-h,_-g).normalize(),e[1].setComponents(s+i,u+o,m+h,_+g).normalize(),e[2].setComponents(s+r,u+l,m+f,_+p).normalize(),e[3].setComponents(s-r,u-l,m-f,_-p).normalize(),e[4].setComponents(s-a,u-c,m-d,_-v).normalize(),e[5].setComponents(s+a,u+c,m+d,_+v).normalize(),this},intersectsObject:function(){var t=new Fn;return function(n){var i=n.geometry;return i.boundingSphere===null&&i.computeBoundingSphere(),t.copy(i.boundingSphere).applyMatrix4(n.matrixWorld),this.intersectsSphere(t)}}(),intersectsSprite:function(){var t=new Fn;return function(n){return t.center.set(0,0,0),t.radius=.7071067811865476,t.applyMatrix4(n.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){for(var e=this.planes,n=t.center,i=-t.radius,r=0;r<6;r++){var a=e[r].distanceToPoint(n);if(a<i)return!1}return!0},intersectsBox:function(){var t=new C;return function(n){for(var i=this.planes,r=0;r<6;r++){var a=i[r];if(t.x=a.normal.x>0?n.max.x:n.min.x,t.y=a.normal.y>0?n.max.y:n.min.y,t.z=a.normal.z>0?n.max.z:n.min.z,a.distanceToPoint(t)<0)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}});var E_=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,T_=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,A_=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,L_=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( PHYSICAL )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,C_=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,P_="vec3 transformed = vec3( position );",R_="vec3 objectNormal = vec3( normal );",D_=`float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE  = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS  = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;
	return specularColor * AB.x + AB.y;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}`,I_=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,O_=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;
	}
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;
		}
		if ( clipped ) discard;
	#endif
#endif`,F_=`#if NUM_CLIPPING_PLANES > 0
	#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )
		varying vec3 vViewPosition;
	#endif
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,N_=`#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )
	varying vec3 vViewPosition;
#endif`,z_=`#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )
	vViewPosition = - mvPosition.xyz;
#endif`,U_=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,B_=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,G_=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,k_=`#ifdef USE_COLOR
	vColor.xyz = color.xyz;
#endif`,V_=`#define PI 3.14159265359
#define PI2 6.28318530718
#define PI_HALF 1.5707963267949
#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494
#define LOG2 1.442695
#define EPSILON 1e-6
#define saturate(a) clamp( a, 0.0, 1.0 )
#define whiteCompliment(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}`,H_=`#ifdef ENVMAP_TYPE_CUBE_UV
#define cubeUV_textureSize (1024.0)
int getFaceFromDirection(vec3 direction) {
	vec3 absDirection = abs(direction);
	int face = -1;
	if( absDirection.x > absDirection.z ) {
		if(absDirection.x > absDirection.y )
			face = direction.x > 0.0 ? 0 : 3;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	else {
		if(absDirection.z > absDirection.y )
			face = direction.z > 0.0 ? 2 : 5;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	return face;
}
#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)
#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))
vec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {
	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);
	float dxRoughness = dFdx(roughness);
	float dyRoughness = dFdy(roughness);
	vec3 dx = dFdx( vec * scale * dxRoughness );
	vec3 dy = dFdy( vec * scale * dyRoughness );
	float d = max( dot( dx, dx ), dot( dy, dy ) );
	d = clamp(d, 1.0, cubeUV_rangeClamp);
	float mipLevel = 0.5 * log2(d);
	return vec2(floor(mipLevel), fract(mipLevel));
}
#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)
#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)
vec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {
	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;
	float a = 16.0 * cubeUV_rcpTextureSize;
	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );
	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;
	float powScale = exp2_packed.x * exp2_packed.y;
	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;
	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;
	bool bRes = mipLevel == 0.0;
	scale =  bRes && (scale < a) ? a : scale;
	vec3 r;
	vec2 offset;
	int face = getFaceFromDirection(direction);
	float rcpPowScale = 1.0 / powScale;
	if( face == 0) {
		r = vec3(direction.x, -direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 1) {
		r = vec3(direction.y, direction.x, direction.z);
		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 2) {
		r = vec3(direction.z, direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 3) {
		r = vec3(direction.x, direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	else if( face == 4) {
		r = vec3(direction.y, direction.x, -direction.z);
		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	else {
		r = vec3(direction.z, -direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	r = normalize(r);
	float texelOffset = 0.5 * cubeUV_rcpTextureSize;
	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;
	vec2 base = offset + vec2( texelOffset );
	return base + s * ( scale - 2.0 * texelOffset );
}
#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)
vec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {
	float roughnessVal = roughness* cubeUV_maxLods3;
	float r1 = floor(roughnessVal);
	float r2 = r1 + 1.0;
	float t = fract(roughnessVal);
	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);
	float s = mipInfo.y;
	float level0 = mipInfo.x;
	float level1 = level0 + 1.0;
	level1 = level1 > 5.0 ? 5.0 : level1;
	level0 += min( floor( s + 0.5 ), 5.0 );
	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);
	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));
	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);
	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));
	vec4 result = mix(color10, color20, t);
	return vec4(result.rgb, 1.0);
}
#endif`,W_=`vec3 transformedNormal = normalMatrix * objectNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif`,j_=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,X_=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );
#endif`,q_=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Y_=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,$_="gl_FragColor = linearToOutputTexel( gl_FragColor );",Z_=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = min( floor( D ) / 255.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value )  {
	vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,J_=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToVertex, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_EQUIREC )
		vec2 sampleUV;
		reflectVec = normalize( reflectVec );
		sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
		sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
		vec4 envColor = texture2D( envMap, sampleUV );
	#elif defined( ENVMAP_TYPE_SPHERE )
		reflectVec = normalize( reflectVec );
		vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );
		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	envColor = envMapTexelToLinear( envColor );
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Q_=`#if defined( USE_ENVMAP ) || defined( PHYSICAL )
	uniform float reflectivity;
	uniform float envMapIntensity;
#endif
#ifdef USE_ENVMAP
	#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )
		varying vec3 vWorldPosition;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,K_=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,eb=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,tb=`#ifdef USE_FOG
	fogDepth = -mvPosition.z;
#endif`,nb=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,ib=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,rb=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,ab=`#ifdef TOON
	uniform sampler2D gradientMap;
	vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
		float dotNL = dot( normal, lightDirection );
		vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
		#ifdef USE_GRADIENTMAP
			return texture2D( gradientMap, coord ).rgb;
		#else
			return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
		#endif
	}
#endif`,sb=`#ifdef USE_LIGHTMAP
	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
#endif`,ob=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,lb=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
#endif`,cb=`uniform vec3 ambientLightColor;
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
		float shadowCameraNear;
		float shadowCameraFar;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,ub=`#if defined( USE_ENVMAP ) && defined( PHYSICAL )
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			vec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );
		#else
			vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			vec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));
		#elif defined( ENVMAP_TYPE_EQUIREC )
			vec2 sampleUV;
			sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_SPHERE )
			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,hb=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,fb=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	#ifdef TOON
		vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#else
		float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
		vec3 irradiance = dotNL * directLight.color;
	#endif
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,db=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
material.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );
#ifdef STANDARD
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
	material.clearCoat = saturate( clearCoat );	material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );
#endif`,pb=`struct PhysicalMaterial {
	vec3	diffuseColor;
	float	specularRoughness;
	vec3	specularColor;
	#ifndef STANDARD
		float clearCoat;
		float clearCoatRoughness;
	#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearCoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifndef STANDARD
		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );
	#else
		float clearCoatDHR = 0.0;
	#endif
	reflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );
	reflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	#ifndef STANDARD
		reflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );
	#endif
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	#ifndef STANDARD
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		float dotNL = dotNV;
		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );
	#else
		float clearCoatDHR = 0.0;
	#endif
	reflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );
	#ifndef STANDARD
		reflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );
	#endif
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )
#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,mb=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = normalize( vViewPosition );
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
#endif
#if defined( RE_IndirectDiffuse )
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearCoatRadiance = vec3( 0.0 );
#endif`,gb=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )
		irradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );
	#ifndef STANDARD
		clearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );
	#endif
#endif`,vb=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );
#endif`,yb=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,xb=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
#endif`,_b=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,bb=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
	#else
		gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
		gl_Position.z *= gl_Position.w;
	#endif
#endif`,Mb=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,wb=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Sb=`#ifdef USE_MAP
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif`,Eb=`#ifdef USE_MAP
	uniform mat3 uvTransform;
	uniform sampler2D map;
#endif`,Tb=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Ab=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Lb=`#ifdef USE_MORPHNORMALS
	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];
	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];
	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];
	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];
#endif`,Cb=`#ifdef USE_MORPHTARGETS
	#ifndef USE_MORPHNORMALS
	uniform float morphTargetInfluences[ 8 ];
	#else
	uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,Pb=`#ifdef USE_MORPHTARGETS
	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];
	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];
	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];
	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];
	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];
	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];
	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];
	#endif
#endif`,Rb=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
#endif`,Db=`#ifdef USE_NORMALMAP
	#ifdef OBJECTSPACE_NORMALMAP
		normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
		#ifdef FLIP_SIDED
			normal = - normal;
		#endif
		#ifdef DOUBLE_SIDED
			normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		normal = normalize( normalMatrix * normal );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,Ib=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
	#ifdef OBJECTSPACE_NORMALMAP
		uniform mat3 normalMatrix;
	#else
		vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {
			vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
			vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
			vec2 st0 = dFdx( vUv.st );
			vec2 st1 = dFdy( vUv.st );
			float scale = sign( st1.t * st0.s - st0.t * st1.s );
			vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
			vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
			vec3 N = normalize( surf_norm );
			mat3 tsn = mat3( S, T, N );
			vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
			mapN.xy *= normalScale;
			mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			return normalize( tsn * mapN );
		}
	#endif
#endif`,Ob=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Fb=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Nb=`vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );
gl_Position = projectionMatrix * mvPosition;`,zb=`#if defined( DITHERING )
  gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Ub=`#if defined( DITHERING )
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Bb=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Gb=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,kb=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {
		const vec2 offset = vec2( 0.0, 1.0 );
		vec2 texelSize = vec2( 1.0 ) / size;
		vec2 centroidUV = floor( uv * size + 0.5 ) / size;
		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );
		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );
		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );
		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );
		vec2 f = fract( uv * size + 0.5 );
		float a = mix( lb, lt, f.y );
		float b = mix( rb, rt, f.y );
		float c = mix( a, b, f.x );
		return c;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			shadow = (
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Vb=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
#endif`,Hb=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;
	}
	#endif
#endif`,Wb=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#endif
	#endif
	return shadow;
}`,jb=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Xb=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,qb=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Yb=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
#endif`,$b=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Zb=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Jb=`#if defined( TONE_MAPPING )
  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Qb=`#ifndef saturate
	#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
uniform float toneMappingWhitePoint;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )
vec3 Uncharted2ToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );
}`,Kb=`#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
#endif`,eM=`#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif`,tM=`#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,nM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,iM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
#endif`,rM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = uv2;
#endif`,aM=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );
#endif`,sM=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,oM=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,lM=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = mapTexelToLinear( texColor );
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,cM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,uM=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );
	#endif
}`,hM=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}`,fM=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,dM=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,pM=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV;
	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,mM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,gM=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,vM=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	vLineDistance = scale * lineDistance;
	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,yM=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,xM=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,_M=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bM=`#define LAMBERT
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,MM=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,wM=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,SM=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,EM=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,TM=`#define PHYSICAL
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifndef STANDARD
	uniform float clearCoat;
	uniform float clearCoatRoughness;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,AM=`#define PHYSICAL
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,LM=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,CM=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	vViewPosition = - mvPosition.xyz;
#endif
}`,PM=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,RM=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,DM=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <fog_fragment>
}`,IM=`#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,OM=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,FM=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,lt={alphamap_fragment:E_,alphamap_pars_fragment:T_,alphatest_fragment:A_,aomap_fragment:L_,aomap_pars_fragment:C_,begin_vertex:P_,beginnormal_vertex:R_,bsdfs:D_,bumpmap_pars_fragment:I_,clipping_planes_fragment:O_,clipping_planes_pars_fragment:F_,clipping_planes_pars_vertex:N_,clipping_planes_vertex:z_,color_fragment:U_,color_pars_fragment:B_,color_pars_vertex:G_,color_vertex:k_,common:V_,cube_uv_reflection_fragment:H_,defaultnormal_vertex:W_,displacementmap_pars_vertex:j_,displacementmap_vertex:X_,emissivemap_fragment:q_,emissivemap_pars_fragment:Y_,encodings_fragment:$_,encodings_pars_fragment:Z_,envmap_fragment:J_,envmap_pars_fragment:Q_,envmap_pars_vertex:K_,envmap_physical_pars_fragment:ub,envmap_vertex:eb,fog_vertex:tb,fog_pars_vertex:nb,fog_fragment:ib,fog_pars_fragment:rb,gradientmap_pars_fragment:ab,lightmap_fragment:sb,lightmap_pars_fragment:ob,lights_lambert_vertex:lb,lights_pars_begin:cb,lights_phong_fragment:hb,lights_phong_pars_fragment:fb,lights_physical_fragment:db,lights_physical_pars_fragment:pb,lights_fragment_begin:mb,lights_fragment_maps:gb,lights_fragment_end:vb,logdepthbuf_fragment:yb,logdepthbuf_pars_fragment:xb,logdepthbuf_pars_vertex:_b,logdepthbuf_vertex:bb,map_fragment:Mb,map_pars_fragment:wb,map_particle_fragment:Sb,map_particle_pars_fragment:Eb,metalnessmap_fragment:Tb,metalnessmap_pars_fragment:Ab,morphnormal_vertex:Lb,morphtarget_pars_vertex:Cb,morphtarget_vertex:Pb,normal_fragment_begin:Rb,normal_fragment_maps:Db,normalmap_pars_fragment:Ib,packing:Ob,premultiplied_alpha_fragment:Fb,project_vertex:Nb,dithering_fragment:zb,dithering_pars_fragment:Ub,roughnessmap_fragment:Bb,roughnessmap_pars_fragment:Gb,shadowmap_pars_fragment:kb,shadowmap_pars_vertex:Vb,shadowmap_vertex:Hb,shadowmask_pars_fragment:Wb,skinbase_vertex:jb,skinning_pars_vertex:Xb,skinning_vertex:qb,skinnormal_vertex:Yb,specularmap_fragment:$b,specularmap_pars_fragment:Zb,tonemapping_fragment:Jb,tonemapping_pars_fragment:Qb,uv_pars_fragment:Kb,uv_pars_vertex:eM,uv_vertex:tM,uv2_pars_fragment:nM,uv2_pars_vertex:iM,uv2_vertex:rM,worldpos_vertex:aM,background_frag:sM,background_vert:oM,cube_frag:lM,cube_vert:cM,depth_frag:uM,depth_vert:hM,distanceRGBA_frag:fM,distanceRGBA_vert:dM,equirect_frag:pM,equirect_vert:mM,linedashed_frag:gM,linedashed_vert:vM,meshbasic_frag:yM,meshbasic_vert:xM,meshlambert_frag:_M,meshlambert_vert:bM,meshmatcap_frag:MM,meshmatcap_vert:wM,meshphong_frag:SM,meshphong_vert:EM,meshphysical_frag:TM,meshphysical_vert:AM,normal_frag:LM,normal_vert:CM,points_frag:PM,points_vert:RM,shadow_frag:DM,shadow_vert:IM,sprite_frag:OM,sprite_vert:FM};function Ea(t){var e={};for(var n in t){e[n]={};for(var i in t[n]){var r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function ln(t){for(var e={},n=0;n<t.length;n++){var i=Ea(t[n]);for(var r in i)e[r]=i[r]}return e}var NM={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Ge(t,e,n){return e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}Object.assign(Ge.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,this},setRGB:function(t,e,n){return this.r=t,this.g=e,this.b=n,this},setHSL:function(){function t(e,n,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?e+(n-e)*6*i:i<1/2?n:i<2/3?e+(n-e)*6*(2/3-i):e}return function(n,i,r){if(n=it.euclideanModulo(n,1),i=it.clamp(i,0,1),r=it.clamp(r,0,1),i===0)this.r=this.g=this.b=r;else{var a=r<=.5?r*(1+i):r+i-r*i,s=2*r-a;this.r=t(s,a,n+1/3),this.g=t(s,a,n),this.b=t(s,a,n-1/3)}return this}}(),setStyle:function(t){function e(h){h!==void 0&&parseFloat(h)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){var i,r=n[1],a=n[2];switch(r){case"rgb":case"rgba":if(i=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,e(i[5]),this;if(i=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,e(i[5]),this;break;case"hsl":case"hsla":if(i=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){var s=parseFloat(i[1])/360,o=parseInt(i[2],10)/100,l=parseInt(i[3],10)/100;return e(i[5]),this.setHSL(s,o,l)}break}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(t)){var c=n[1],u=c.length;if(u===3)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(u===6)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this}if(t&&t.length>0){var c=NM[t];c!==void 0?this.setHex(c):console.warn("THREE.Color: Unknown color "+t)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return e===void 0&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){e===void 0&&(e=2);var n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this},convertGammaToLinear:function(t){return this.copyGammaToLinear(this,t),this},convertLinearToGamma:function(t){return this.copyLinearToGamma(this,t),this},copySRGBToLinear:function(){function t(e){return e<.04045?e*.0773993808:Math.pow(e*.9478672986+.0521327014,2.4)}return function(n){return this.r=t(n.r),this.g=t(n.g),this.b=t(n.b),this}}(),copyLinearToSRGB:function(){function t(e){return e<.0031308?e*12.92:1.055*Math.pow(e,.41666)-.055}return function(n){return this.r=t(n.r),this.g=t(n.g),this.b=t(n.b),this}}(),convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){t===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});var e=this.r,n=this.g,i=this.b,r=Math.max(e,n,i),a=Math.min(e,n,i),s,o,l=(a+r)/2;if(a===r)s=0,o=0;else{var c=r-a;switch(o=l<=.5?c/(r+a):c/(2-r-a),r){case e:s=(n-i)/c+(n<i?6:0);break;case n:s=(i-e)/c+2;break;case i:s=(e-n)/c+4;break}s/=6}return t.h=s,t.s=o,t.l=l,t},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(){var t={};return function(e,n,i){return this.getHSL(t),t.h+=e,t.s+=n,t.l+=i,this.setHSL(t.h,t.s,t.l),this}}(),add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},lerpHSL:function(){var t={h:0,s:0,l:0},e={h:0,s:0,l:0};return function(i,r){this.getHSL(t),i.getHSL(e);var a=it.lerp(t.h,e.h,r),s=it.lerp(t.s,e.s,r),o=it.lerp(t.l,e.l,r);return this.setHSL(a,s,o),this}}(),equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return e===void 0&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}});var Ue={common:{diffuse:{value:new Ge(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new zt},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new le(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ge(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Ge(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new zt}},sprite:{diffuse:{value:new Ge(15658734)},opacity:{value:1},center:{value:new le(.5,.5)},rotation:{value:0},map:{value:null},uvTransform:{value:new zt}}},ii={basic:{uniforms:ln([Ue.common,Ue.specularmap,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.fog]),vertexShader:lt.meshbasic_vert,fragmentShader:lt.meshbasic_frag},lambert:{uniforms:ln([Ue.common,Ue.specularmap,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.fog,Ue.lights,{emissive:{value:new Ge(0)}}]),vertexShader:lt.meshlambert_vert,fragmentShader:lt.meshlambert_frag},phong:{uniforms:ln([Ue.common,Ue.specularmap,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.gradientmap,Ue.fog,Ue.lights,{emissive:{value:new Ge(0)},specular:{value:new Ge(1118481)},shininess:{value:30}}]),vertexShader:lt.meshphong_vert,fragmentShader:lt.meshphong_frag},standard:{uniforms:ln([Ue.common,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.roughnessmap,Ue.metalnessmap,Ue.fog,Ue.lights,{emissive:{value:new Ge(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:lt.meshphysical_vert,fragmentShader:lt.meshphysical_frag},matcap:{uniforms:ln([Ue.common,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.fog,{matcap:{value:null}}]),vertexShader:lt.meshmatcap_vert,fragmentShader:lt.meshmatcap_frag},points:{uniforms:ln([Ue.points,Ue.fog]),vertexShader:lt.points_vert,fragmentShader:lt.points_frag},dashed:{uniforms:ln([Ue.common,Ue.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:lt.linedashed_vert,fragmentShader:lt.linedashed_frag},depth:{uniforms:ln([Ue.common,Ue.displacementmap]),vertexShader:lt.depth_vert,fragmentShader:lt.depth_frag},normal:{uniforms:ln([Ue.common,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,{opacity:{value:1}}]),vertexShader:lt.normal_vert,fragmentShader:lt.normal_frag},sprite:{uniforms:ln([Ue.sprite,Ue.fog]),vertexShader:lt.sprite_vert,fragmentShader:lt.sprite_frag},background:{uniforms:{uvTransform:{value:new zt},t2D:{value:null}},vertexShader:lt.background_vert,fragmentShader:lt.background_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:lt.cube_vert,fragmentShader:lt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:lt.equirect_vert,fragmentShader:lt.equirect_frag},distanceRGBA:{uniforms:ln([Ue.common,Ue.displacementmap,{referencePosition:{value:new C},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:lt.distanceRGBA_vert,fragmentShader:lt.distanceRGBA_frag},shadow:{uniforms:ln([Ue.lights,Ue.fog,{color:{value:new Ge(0)},opacity:{value:1}}]),vertexShader:lt.shadow_vert,fragmentShader:lt.shadow_frag}};ii.physical={uniforms:ln([ii.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:lt.meshphysical_vert,fragmentShader:lt.meshphysical_frag};function lu(){var t=null,e=!1,n=null;function i(r,a){e!==!1&&(n(r,a),t.requestAnimationFrame(i))}return{start:function(){e!==!0&&n!==null&&(t.requestAnimationFrame(i),e=!0)},stop:function(){e=!1},setAnimationLoop:function(r){n=r},setContext:function(r){t=r}}}function zM(t){var e=new WeakMap;function n(o,l){var c=o.array,u=o.dynamic?35048:35044,h=t.createBuffer();t.bindBuffer(l,h),t.bufferData(l,c,u),o.onUploadCallback();var f=5126;return c instanceof Float32Array?f=5126:c instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):c instanceof Uint16Array?f=5123:c instanceof Int16Array?f=5122:c instanceof Uint32Array?f=5125:c instanceof Int32Array?f=5124:c instanceof Int8Array?f=5120:c instanceof Uint8Array&&(f=5121),{buffer:h,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:o.version}}function i(o,l,c){var u=l.array,h=l.updateRange;t.bindBuffer(c,o),l.dynamic===!1?t.bufferData(c,u,35044):h.count===-1?t.bufferSubData(c,0,u):h.count===0?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(t.bufferSubData(c,h.offset*u.BYTES_PER_ELEMENT,u.subarray(h.offset,h.offset+h.count)),h.count=-1)}function r(o){return o.isInterleavedBufferAttribute&&(o=o.data),e.get(o)}function a(o){o.isInterleavedBufferAttribute&&(o=o.data);var l=e.get(o);l&&(t.deleteBuffer(l.buffer),e.delete(o))}function s(o,l){o.isInterleavedBufferAttribute&&(o=o.data);var c=e.get(o);c===void 0?e.set(o,n(o,l)):c.version<o.version&&(i(c.buffer,o,l),c.version=o.version)}return{get:r,remove:a,update:s}}function no(t,e,n,i,r,a){this.a=t,this.b=e,this.c=n,this.normal=i&&i.isVector3?i:new C,this.vertexNormals=Array.isArray(i)?i:[],this.color=r&&r.isColor?r:new Ge,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=a!==void 0?a:0}Object.assign(no.prototype,{clone:function(){return new this.constructor().copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,n=t.vertexNormals.length;e<n;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(var e=0,n=t.vertexColors.length;e<n;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});function Ai(t,e,n,i){this._x=t||0,this._y=e||0,this._z=n||0,this._order=i||Ai.DefaultOrder}Ai.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];Ai.DefaultOrder="XYZ";Object.defineProperties(Ai.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this.onChangeCallback()}}});Object.assign(Ai.prototype,{isEuler:!0,set:function(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._order=i||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e,n){var i=it.clamp,r=t.elements,a=r[0],s=r[4],o=r[8],l=r[1],c=r[5],u=r[9],h=r[2],f=r[6],d=r[10];return e=e||this._order,e==="XYZ"?(this._y=Math.asin(i(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(f,c),this._z=0)):e==="YXZ"?(this._x=Math.asin(-i(u,-1,1)),Math.abs(u)<.99999?(this._y=Math.atan2(o,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,a),this._z=0)):e==="ZXY"?(this._x=Math.asin(i(f,-1,1)),Math.abs(f)<.99999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-s,c)):(this._y=0,this._z=Math.atan2(l,a))):e==="ZYX"?(this._y=Math.asin(-i(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,a)):(this._x=0,this._z=Math.atan2(-s,c))):e==="YZX"?(this._z=Math.asin(i(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,a)):(this._x=0,this._y=Math.atan2(o,d))):e==="XZY"?(this._z=Math.asin(-i(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(f,c),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-u,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,n!==!1&&this.onChangeCallback(),this},setFromQuaternion:function(){var t=new Ye;return function(n,i,r){return t.makeRotationFromQuaternion(n),this.setFromRotationMatrix(t,i,r)}}(),setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(){var t=new ct;return function(n){return t.setFromEuler(this),this.setFromQuaternion(t,n)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new C(this._x,this._y,this._z)},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}});function md(){this.mask=1}Object.assign(md.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},test:function(t){return(this.mask&t.mask)!==0}});var UM=0;function Ee(){Object.defineProperty(this,"id",{value:UM++}),this.uuid=it.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ee.DefaultUp.clone();var t=new C,e=new Ai,n=new ct,i=new C(1,1,1);function r(){n.setFromEuler(e,!1)}function a(){e.setFromQuaternion(n,void 0,!1)}e.onChange(r),n.onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ye},normalMatrix:{value:new zt}}),this.matrix=new Ye,this.matrixWorld=new Ye,this.matrixAutoUpdate=Ee.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new md,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}Ee.DefaultUp=new C(0,1,0);Ee.DefaultMatrixAutoUpdate=!0;Ee.prototype=Object.assign(Object.create(Zt.prototype),{constructor:Ee,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var t=new ct;return function(n,i){return t.setFromAxisAngle(n,i),this.quaternion.multiply(t),this}}(),rotateOnWorldAxis:function(){var t=new ct;return function(n,i){return t.setFromAxisAngle(n,i),this.quaternion.premultiply(t),this}}(),rotateX:function(){var t=new C(1,0,0);return function(n){return this.rotateOnAxis(t,n)}}(),rotateY:function(){var t=new C(0,1,0);return function(n){return this.rotateOnAxis(t,n)}}(),rotateZ:function(){var t=new C(0,0,1);return function(n){return this.rotateOnAxis(t,n)}}(),translateOnAxis:function(){var t=new C;return function(n,i){return t.copy(n).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(i)),this}}(),translateX:function(){var t=new C(1,0,0);return function(n){return this.translateOnAxis(t,n)}}(),translateY:function(){var t=new C(0,1,0);return function(n){return this.translateOnAxis(t,n)}}(),translateZ:function(){var t=new C(0,0,1);return function(n){return this.translateOnAxis(t,n)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new Ye;return function(n){return n.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){var t=new ct,e=new Ye,n=new C,i=new C;return function(a,s,o){a.isVector3?n.copy(a):n.set(a,s,o);var l=this.parent;this.updateWorldMatrix(!0,!1),i.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?e.lookAt(i,n,this.up):e.lookAt(n,i,this.up),this.quaternion.setFromRotationMatrix(e),l&&(e.extractRotation(l.matrixWorld),t.setFromRotationMatrix(e),this.quaternion.premultiply(t.inverse()))}}(),add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var n=this.children.indexOf(t);return n!==-1&&(t.parent=null,t.dispatchEvent({type:"removed"}),this.children.splice(n,1)),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var n=0,i=this.children.length;n<i;n++){var r=this.children[n],a=r.getObjectByProperty(t,e);if(a!==void 0)return a}},getWorldPosition:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new C),this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var t=new C,e=new C;return function(i){return i===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),i=new ct),this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,i,e),i}}(),getWorldScale:function(){var t=new C,e=new ct;return function(i){return i===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),i=new C),this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,e,i),i}}(),getWorldDirection:function(t){t===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new C),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);for(var e=this.children,n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(this.visible!==!1){t(this);for(var e=this.children,n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){var n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0)for(var i=this.children,r=0,a=i.length;r<a;r++)i[r].updateWorldMatrix(!1,!0)},toJSON:function(t){var e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1);function r(p,v){return p[v.uuid]===void 0&&(p[v.uuid]=v.toJSON(t)),v.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);var a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){var s=a.shapes;if(Array.isArray(s))for(var o=0,l=s.length;o<l;o++){var c=s[o];r(t.shapes,c)}else r(t.shapes,s)}}if(this.material!==void 0)if(Array.isArray(this.material)){for(var u=[],o=0,l=this.material.length;o<l;o++)u.push(r(t.materials,this.material[o]));i.material=u}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(var o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(t).object)}if(e){var h=g(t.geometries),f=g(t.materials),d=g(t.textures),m=g(t.images),s=g(t.shapes);h.length>0&&(n.geometries=h),f.length>0&&(n.materials=f),d.length>0&&(n.textures=d),m.length>0&&(n.images=m),s.length>0&&(n.shapes=s)}return n.object=i,n;function g(p){var v=[];for(var _ in p){var x=p[_];delete x.metadata,v.push(x)}return v}},clone:function(t){return new this.constructor().copy(this,t)},copy:function(t,e){if(e===void 0&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(var n=0;n<t.children.length;n++){var i=t.children[n];this.add(i.clone())}return this}});var BM=0;function Ze(){Object.defineProperty(this,"id",{value:BM+=2}),this.uuid=it.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Ze.prototype=Object.assign(Object.create(Zt.prototype),{constructor:Ze,isGeometry:!0,applyMatrix:function(t){for(var e=new zt().getNormalMatrix(t),n=0,i=this.vertices.length;n<i;n++){var r=this.vertices[n];r.applyMatrix4(t)}for(var n=0,i=this.faces.length;n<i;n++){var a=this.faces[n];a.normal.applyMatrix3(e).normalize();for(var s=0,o=a.vertexNormals.length;s<o;s++)a.vertexNormals[s].applyMatrix3(e).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var t=new Ye;return function(n){return t.makeRotationX(n),this.applyMatrix(t),this}}(),rotateY:function(){var t=new Ye;return function(n){return t.makeRotationY(n),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new Ye;return function(n){return t.makeRotationZ(n),this.applyMatrix(t),this}}(),translate:function(){var t=new Ye;return function(n,i,r){return t.makeTranslation(n,i,r),this.applyMatrix(t),this}}(),scale:function(){var t=new Ye;return function(n,i,r){return t.makeScale(n,i,r),this.applyMatrix(t),this}}(),lookAt:function(){var t=new Ee;return function(n){t.lookAt(n),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),fromBufferGeometry:function(t){var e=this,n=t.index!==null?t.index.array:void 0,i=t.attributes,r=i.position.array,a=i.normal!==void 0?i.normal.array:void 0,s=i.color!==void 0?i.color.array:void 0,o=i.uv!==void 0?i.uv.array:void 0,l=i.uv2!==void 0?i.uv2.array:void 0;l!==void 0&&(this.faceVertexUvs[1]=[]);for(var c=0,u=0;c<r.length;c+=3,u+=2)e.vertices.push(new C().fromArray(r,c)),s!==void 0&&e.colors.push(new Ge().fromArray(s,c));function h(v,_,x,y){var M=s===void 0?[]:[e.colors[v].clone(),e.colors[_].clone(),e.colors[x].clone()],T=a===void 0?[]:[new C().fromArray(a,v*3),new C().fromArray(a,_*3),new C().fromArray(a,x*3)],L=new no(v,_,x,T,M,y);e.faces.push(L),o!==void 0&&e.faceVertexUvs[0].push([new le().fromArray(o,v*2),new le().fromArray(o,_*2),new le().fromArray(o,x*2)]),l!==void 0&&e.faceVertexUvs[1].push([new le().fromArray(l,v*2),new le().fromArray(l,_*2),new le().fromArray(l,x*2)])}var f=t.groups;if(f.length>0)for(var c=0;c<f.length;c++)for(var d=f[c],m=d.start,g=d.count,u=m,p=m+g;u<p;u+=3)n!==void 0?h(n[u],n[u+1],n[u+2],d.materialIndex):h(u,u+1,u+2,d.materialIndex);else if(n!==void 0)for(var c=0;c<n.length;c+=3)h(n[c],n[c+1],n[c+2]);else for(var c=0;c<r.length/3;c+=3)h(c,c+1,c+2);return this.computeFaceNormals(),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){var t=new C;return function(){return this.computeBoundingBox(),this.boundingBox.getCenter(t).negate(),this.translate(t.x,t.y,t.z),this}}(),normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,n=e===0?1:1/e,i=new Ye;return i.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix(i),this},computeFaceNormals:function(){for(var t=new C,e=new C,n=0,i=this.faces.length;n<i;n++){var r=this.faces[n],a=this.vertices[r.a],s=this.vertices[r.b],o=this.vertices[r.c];t.subVectors(o,s),e.subVectors(a,s),t.cross(e),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t){t===void 0&&(t=!0);var e,n,i,r,a,s;for(s=new Array(this.vertices.length),e=0,n=this.vertices.length;e<n;e++)s[e]=new C;if(t){var o,l,c,u=new C,h=new C;for(i=0,r=this.faces.length;i<r;i++)a=this.faces[i],o=this.vertices[a.a],l=this.vertices[a.b],c=this.vertices[a.c],u.subVectors(c,l),h.subVectors(o,l),u.cross(h),s[a.a].add(u),s[a.b].add(u),s[a.c].add(u)}else for(this.computeFaceNormals(),i=0,r=this.faces.length;i<r;i++)a=this.faces[i],s[a.a].add(a.normal),s[a.b].add(a.normal),s[a.c].add(a.normal);for(e=0,n=this.vertices.length;e<n;e++)s[e].normalize();for(i=0,r=this.faces.length;i<r;i++){a=this.faces[i];var f=a.vertexNormals;f.length===3?(f[0].copy(s[a.a]),f[1].copy(s[a.b]),f[2].copy(s[a.c])):(f[0]=s[a.a].clone(),f[1]=s[a.b].clone(),f[2]=s[a.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,n;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){n=this.faces[t];var i=n.vertexNormals;i.length===3?(i[0].copy(n.normal),i[1].copy(n.normal),i[2].copy(n.normal)):(i[0]=n.normal.clone(),i[1]=n.normal.clone(),i[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,n,i,r;for(n=0,i=this.faces.length;n<i;n++)for(r=this.faces[n],r.__originalFaceNormal?r.__originalFaceNormal.copy(r.normal):r.__originalFaceNormal=r.normal.clone(),r.__originalVertexNormals||(r.__originalVertexNormals=[]),t=0,e=r.vertexNormals.length;t<e;t++)r.__originalVertexNormals[t]?r.__originalVertexNormals[t].copy(r.vertexNormals[t]):r.__originalVertexNormals[t]=r.vertexNormals[t].clone();var a=new Ze;for(a.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var s=this.morphNormals[t].faceNormals,o=this.morphNormals[t].vertexNormals,c,u;for(n=0,i=this.faces.length;n<i;n++)c=new C,u={a:new C,b:new C,c:new C},s.push(c),o.push(u)}var l=this.morphNormals[t];a.vertices=this.morphTargets[t].vertices,a.computeFaceNormals(),a.computeVertexNormals();var c,u;for(n=0,i=this.faces.length;n<i;n++)r=this.faces[n],c=l.faceNormals[n],u=l.vertexNormals[n],c.copy(r.normal),u.a.copy(r.vertexNormals[0]),u.b.copy(r.vertexNormals[1]),u.c.copy(r.vertexNormals[2])}for(n=0,i=this.faces.length;n<i;n++)r=this.faces[n],r.normal=r.__originalFaceNormal,r.vertexNormals=r.__originalVertexNormals},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new li),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Fn),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n){if(!(t&&t.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);return}var i,r=this.vertices.length,a=this.vertices,s=t.vertices,o=this.faces,l=t.faces,c=this.faceVertexUvs[0],u=t.faceVertexUvs[0],h=this.colors,f=t.colors;n===void 0&&(n=0),e!==void 0&&(i=new zt().getNormalMatrix(e));for(var d=0,m=s.length;d<m;d++){var g=s[d],p=g.clone();e!==void 0&&p.applyMatrix4(e),a.push(p)}for(var d=0,m=f.length;d<m;d++)h.push(f[d].clone());for(d=0,m=l.length;d<m;d++){var v=l[d],_,x,y,M=v.vertexNormals,T=v.vertexColors;_=new no(v.a+r,v.b+r,v.c+r),_.normal.copy(v.normal),i!==void 0&&_.normal.applyMatrix3(i).normalize();for(var L=0,b=M.length;L<b;L++)x=M[L].clone(),i!==void 0&&x.applyMatrix3(i).normalize(),_.vertexNormals.push(x);_.color.copy(v.color);for(var L=0,b=T.length;L<b;L++)y=T[L],_.vertexColors.push(y.clone());_.materialIndex=v.materialIndex+n,o.push(_)}for(d=0,m=u.length;d<m;d++){var S=u[d],D=[];if(S!==void 0){for(var L=0,b=S.length;L<b;L++)D.push(S[L].clone());c.push(D)}}},mergeMesh:function(t){if(!(t&&t.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t);return}t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)},mergeVertices:function(){var t={},e=[],n=[],i,r,a=4,s=Math.pow(10,a),o,l,c,u,h,f;for(o=0,l=this.vertices.length;o<l;o++)i=this.vertices[o],r=Math.round(i.x*s)+"_"+Math.round(i.y*s)+"_"+Math.round(i.z*s),t[r]===void 0?(t[r]=o,e.push(this.vertices[o]),n[o]=e.length-1):n[o]=n[t[r]];var d=[];for(o=0,l=this.faces.length;o<l;o++){c=this.faces[o],c.a=n[c.a],c.b=n[c.b],c.c=n[c.c],u=[c.a,c.b,c.c];for(var m=0;m<3;m++)if(u[m]===u[(m+1)%3]){d.push(o);break}}for(o=d.length-1;o>=0;o--){var g=d[o];for(this.faces.splice(g,1),h=0,f=this.faceVertexUvs.length;h<f;h++)this.faceVertexUvs[h].splice(g,1)}var p=this.vertices.length-e.length;return this.vertices=e,p},setFromPoints:function(t){this.vertices=[];for(var e=0,n=t.length;e<n;e++){var i=t[e];this.vertices.push(new C(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){for(var t=this.faces,e=t.length,n=0;n<e;n++)t[n]._id=n;function i(c,u){return c.materialIndex-u.materialIndex}t.sort(i);var r=this.faceVertexUvs[0],a=this.faceVertexUvs[1],s,o;r&&r.length===e&&(s=[]),a&&a.length===e&&(o=[]);for(var n=0;n<e;n++){var l=t[n]._id;s&&s.push(r[l]),o&&o.push(a[l])}s&&(this.faceVertexUvs[0]=s),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){var t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.parameters!==void 0){var e=this.parameters;for(var n in e)e[n]!==void 0&&(t[n]=e[n]);return t}for(var i=[],r=0;r<this.vertices.length;r++){var a=this.vertices[r];i.push(a.x,a.y,a.z)}for(var s=[],o=[],l={},c=[],u={},h=[],f={},r=0;r<this.faces.length;r++){var d=this.faces[r],m=!0,g=!1,p=this.faceVertexUvs[0][r]!==void 0,v=d.normal.length()>0,_=d.vertexNormals.length>0,x=d.color.r!==1||d.color.g!==1||d.color.b!==1,y=d.vertexColors.length>0,M=0;if(M=S(M,0,0),M=S(M,1,m),M=S(M,2,g),M=S(M,3,p),M=S(M,4,v),M=S(M,5,_),M=S(M,6,x),M=S(M,7,y),s.push(M),s.push(d.a,d.b,d.c),s.push(d.materialIndex),p){var T=this.faceVertexUvs[0][r];s.push(J(T[0]),J(T[1]),J(T[2]))}if(v&&s.push(D(d.normal)),_){var L=d.vertexNormals;s.push(D(L[0]),D(L[1]),D(L[2]))}if(x&&s.push(N(d.color)),y){var b=d.vertexColors;s.push(N(b[0]),N(b[1]),N(b[2]))}}function S(k,G,H){return H?k|1<<G:k&~(1<<G)}function D(k){var G=k.x.toString()+k.y.toString()+k.z.toString();return l[G]!==void 0||(l[G]=o.length/3,o.push(k.x,k.y,k.z)),l[G]}function N(k){var G=k.r.toString()+k.g.toString()+k.b.toString();return u[G]!==void 0||(u[G]=c.length,c.push(k.getHex())),u[G]}function J(k){var G=k.x.toString()+k.y.toString();return f[G]!==void 0||(f[G]=h.length/2,h.push(k.x,k.y)),f[G]}return t.data={},t.data.vertices=i,t.data.normals=o,c.length>0&&(t.data.colors=c),h.length>0&&(t.data.uvs=[h]),t.data.faces=s,t},clone:function(){return new Ze().copy(this)},copy:function(t){var e,n,i,r,a,s;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var o=t.vertices;for(e=0,n=o.length;e<n;e++)this.vertices.push(o[e].clone());var l=t.colors;for(e=0,n=l.length;e<n;e++)this.colors.push(l[e].clone());var c=t.faces;for(e=0,n=c.length;e<n;e++)this.faces.push(c[e].clone());for(e=0,n=t.faceVertexUvs.length;e<n;e++){var u=t.faceVertexUvs[e];for(this.faceVertexUvs[e]===void 0&&(this.faceVertexUvs[e]=[]),i=0,r=u.length;i<r;i++){var h=u[i],f=[];for(a=0,s=h.length;a<s;a++){var d=h[a];f.push(d.clone())}this.faceVertexUvs[e].push(f)}}var m=t.morphTargets;for(e=0,n=m.length;e<n;e++){var g={};if(g.name=m[e].name,m[e].vertices!==void 0)for(g.vertices=[],i=0,r=m[e].vertices.length;i<r;i++)g.vertices.push(m[e].vertices[i].clone());if(m[e].normals!==void 0)for(g.normals=[],i=0,r=m[e].normals.length;i<r;i++)g.normals.push(m[e].normals[i].clone());this.morphTargets.push(g)}var p=t.morphNormals;for(e=0,n=p.length;e<n;e++){var v={};if(p[e].vertexNormals!==void 0)for(v.vertexNormals=[],i=0,r=p[e].vertexNormals.length;i<r;i++){var _=p[e].vertexNormals[i],x={};x.a=_.a.clone(),x.b=_.b.clone(),x.c=_.c.clone(),v.vertexNormals.push(x)}if(p[e].faceNormals!==void 0)for(v.faceNormals=[],i=0,r=p[e].faceNormals.length;i<r;i++)v.faceNormals.push(p[e].faceNormals[i].clone());this.morphNormals.push(v)}var y=t.skinWeights;for(e=0,n=y.length;e<n;e++)this.skinWeights.push(y[e].clone());var M=t.skinIndices;for(e=0,n=M.length;e<n;e++)this.skinIndices.push(M[e].clone());var T=t.lineDistances;for(e=0,n=T.length;e<n;e++)this.lineDistances.push(T[e]);var L=t.boundingBox;L!==null&&(this.boundingBox=L.clone());var b=t.boundingSphere;return b!==null&&(this.boundingSphere=b.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function st(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(st.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(st.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");return this.count=t!==void 0?t.length/this.itemSize:0,this.array=t,this},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.dynamic=t.dynamic,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(var i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,n=0,i=0,r=t.length;i<r;i++){var a=t[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),a=new Ge),e[n++]=a.r,e[n++]=a.g,e[n++]=a.b}return this},copyVector2sArray:function(t){for(var e=this.array,n=0,i=0,r=t.length;i<r;i++){var a=t[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),a=new le),e[n++]=a.x,e[n++]=a.y}return this},copyVector3sArray:function(t){for(var e=this.array,n=0,i=0,r=t.length;i<r;i++){var a=t[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),a=new C),e[n++]=a.x,e[n++]=a.y,e[n++]=a.z}return this},copyVector4sArray:function(t){for(var e=this.array,n=0,i=0,r=t.length;i<r;i++){var a=t[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),a=new mt),e[n++]=a.x,e[n++]=a.y,e[n++]=a.z,e[n++]=a.w}return this},set:function(t,e){return e===void 0&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}});function oc(t,e,n){st.call(this,new Int8Array(t),e,n)}oc.prototype=Object.create(st.prototype);oc.prototype.constructor=oc;function lc(t,e,n){st.call(this,new Uint8Array(t),e,n)}lc.prototype=Object.create(st.prototype);lc.prototype.constructor=lc;function cc(t,e,n){st.call(this,new Uint8ClampedArray(t),e,n)}cc.prototype=Object.create(st.prototype);cc.prototype.constructor=cc;function uc(t,e,n){st.call(this,new Int16Array(t),e,n)}uc.prototype=Object.create(st.prototype);uc.prototype.constructor=uc;function Ta(t,e,n){st.call(this,new Uint16Array(t),e,n)}Ta.prototype=Object.create(st.prototype);Ta.prototype.constructor=Ta;function hc(t,e,n){st.call(this,new Int32Array(t),e,n)}hc.prototype=Object.create(st.prototype);hc.prototype.constructor=hc;function Aa(t,e,n){st.call(this,new Uint32Array(t),e,n)}Aa.prototype=Object.create(st.prototype);Aa.prototype.constructor=Aa;function Ae(t,e,n){st.call(this,new Float32Array(t),e,n)}Ae.prototype=Object.create(st.prototype);Ae.prototype.constructor=Ae;function fc(t,e,n){st.call(this,new Float64Array(t),e,n)}fc.prototype=Object.create(st.prototype);fc.prototype.constructor=fc;function gd(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}Object.assign(gd.prototype,{computeGroups:function(t){for(var e,n=[],i=void 0,r=t.faces,a=0;a<r.length;a++){var s=r[a];s.materialIndex!==i&&(i=s.materialIndex,e!==void 0&&(e.count=a*3-e.start,n.push(e)),e={start:a*3,materialIndex:i})}e!==void 0&&(e.count=a*3-e.start,n.push(e)),this.groups=n},fromGeometry:function(t){var e=t.faces,n=t.vertices,i=t.faceVertexUvs,r=i[0]&&i[0].length>0,a=i[1]&&i[1].length>0,s=t.morphTargets,o=s.length,l;if(o>0){l=[];for(var c=0;c<o;c++)l[c]={name:s[c].name,data:[]};this.morphTargets.position=l}var u=t.morphNormals,h=u.length,f;if(h>0){f=[];for(var c=0;c<h;c++)f[c]={name:u[c].name,data:[]};this.morphTargets.normal=f}var d=t.skinIndices,m=t.skinWeights,g=d.length===n.length,p=m.length===n.length;n.length>0&&e.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(var c=0;c<e.length;c++){var v=e[c];this.vertices.push(n[v.a],n[v.b],n[v.c]);var _=v.vertexNormals;if(_.length===3)this.normals.push(_[0],_[1],_[2]);else{var x=v.normal;this.normals.push(x,x,x)}var y=v.vertexColors;if(y.length===3)this.colors.push(y[0],y[1],y[2]);else{var M=v.color;this.colors.push(M,M,M)}if(r===!0){var T=i[0][c];T!==void 0?this.uvs.push(T[0],T[1],T[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",c),this.uvs.push(new le,new le,new le))}if(a===!0){var T=i[1][c];T!==void 0?this.uvs2.push(T[0],T[1],T[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",c),this.uvs2.push(new le,new le,new le))}for(var L=0;L<o;L++){var b=s[L].vertices;l[L].data.push(b[v.a],b[v.b],b[v.c])}for(var L=0;L<h;L++){var S=u[L].vertexNormals[c];f[L].data.push(S.a,S.b,S.c)}g&&this.skinIndices.push(d[v.a],d[v.b],d[v.c]),p&&this.skinWeights.push(m[v.a],m[v.b],m[v.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this}});function vd(t){if(t.length===0)return-1/0;for(var e=t[0],n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}var GM=1;function Re(){Object.defineProperty(this,"id",{value:GM+=2}),this.uuid=it.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Re.prototype=Object.assign(Object.create(Zt.prototype),{constructor:Re,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(vd(t)>65535?Aa:Ta)(t,1):this.index=t},addAttribute:function(t,e){return!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(t,new st(arguments[1],arguments[2]))):t==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):(this.attributes[t]=e,this)},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,n){this.groups.push({start:t,count:e,materialIndex:n!==void 0?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;e!==void 0&&(t.applyToBufferAttribute(e),e.needsUpdate=!0);var n=this.attributes.normal;if(n!==void 0){var i=new zt().getNormalMatrix(t);i.applyToBufferAttribute(n),n.needsUpdate=!0}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(){var t=new Ye;return function(n){return t.makeRotationX(n),this.applyMatrix(t),this}}(),rotateY:function(){var t=new Ye;return function(n){return t.makeRotationY(n),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new Ye;return function(n){return t.makeRotationZ(n),this.applyMatrix(t),this}}(),translate:function(){var t=new Ye;return function(n,i,r){return t.makeTranslation(n,i,r),this.applyMatrix(t),this}}(),scale:function(){var t=new Ye;return function(n,i,r){return t.makeScale(n,i,r),this.applyMatrix(t),this}}(),lookAt:function(){var t=new Ee;return function(n){t.lookAt(n),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),center:function(){var t=new C;return function(){return this.computeBoundingBox(),this.boundingBox.getCenter(t).negate(),this.translate(t.x,t.y,t.z),this}}(),setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){var n=new Ae(e.vertices.length*3,3),i=new Ae(e.colors.length*3,3);if(this.addAttribute("position",n.copyVector3sArray(e.vertices)),this.addAttribute("color",i.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var r=new Ae(e.lineDistances.length,1);this.addAttribute("lineDistance",r.copyArray(e.lineDistances))}e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){for(var e=[],n=0,i=t.length;n<i;n++){var r=t[n];e.push(r.x,r.y,r.z||0)}return this.addAttribute("position",new Ae(e,3)),this},updateFromObject:function(t){var e=t.geometry;if(t.isMesh){var n=e.__directGeometry;if(e.elementsNeedUpdate===!0&&(n=void 0,e.elementsNeedUpdate=!1),n===void 0)return this.fromGeometry(e);n.verticesNeedUpdate=e.verticesNeedUpdate,n.normalsNeedUpdate=e.normalsNeedUpdate,n.colorsNeedUpdate=e.colorsNeedUpdate,n.uvsNeedUpdate=e.uvsNeedUpdate,n.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=n}var i;return e.verticesNeedUpdate===!0&&(i=this.attributes.position,i!==void 0&&(i.copyVector3sArray(e.vertices),i.needsUpdate=!0),e.verticesNeedUpdate=!1),e.normalsNeedUpdate===!0&&(i=this.attributes.normal,i!==void 0&&(i.copyVector3sArray(e.normals),i.needsUpdate=!0),e.normalsNeedUpdate=!1),e.colorsNeedUpdate===!0&&(i=this.attributes.color,i!==void 0&&(i.copyColorsArray(e.colors),i.needsUpdate=!0),e.colorsNeedUpdate=!1),e.uvsNeedUpdate&&(i=this.attributes.uv,i!==void 0&&(i.copyVector2sArray(e.uvs),i.needsUpdate=!0),e.uvsNeedUpdate=!1),e.lineDistancesNeedUpdate&&(i=this.attributes.lineDistance,i!==void 0&&(i.copyArray(e.lineDistances),i.needsUpdate=!0),e.lineDistancesNeedUpdate=!1),e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=new gd().fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(t.vertices.length*3);if(this.addAttribute("position",new st(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var n=new Float32Array(t.normals.length*3);this.addAttribute("normal",new st(n,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var i=new Float32Array(t.colors.length*3);this.addAttribute("color",new st(i,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var r=new Float32Array(t.uvs.length*2);this.addAttribute("uv",new st(r,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var a=new Float32Array(t.uvs2.length*2);this.addAttribute("uv2",new st(a,2).copyVector2sArray(t.uvs2))}this.groups=t.groups;for(var s in t.morphTargets){for(var o=[],l=t.morphTargets[s],c=0,u=l.length;c<u;c++){var h=l[c],f=new Ae(h.data.length*3,3);f.name=h.name,o.push(f.copyVector3sArray(h.data))}this.morphAttributes[s]=o}if(t.skinIndices.length>0){var d=new Ae(t.skinIndices.length*4,4);this.addAttribute("skinIndex",d.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var m=new Ae(t.skinWeights.length*4,4);this.addAttribute("skinWeight",m.copyVector4sArray(t.skinWeights))}return t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new li);var t=this.attributes.position;t!==void 0?this.boundingBox.setFromBufferAttribute(t):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var t=new li,e=new C;return function(){this.boundingSphere===null&&(this.boundingSphere=new Fn);var i=this.attributes.position;if(i){var r=this.boundingSphere.center;t.setFromBufferAttribute(i),t.getCenter(r);for(var a=0,s=0,o=i.count;s<o;s++)e.x=i.getX(s),e.y=i.getY(s),e.z=i.getZ(s),a=Math.max(a,r.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes;if(e.position){var n=e.position.array;if(e.normal===void 0)this.addAttribute("normal",new st(new Float32Array(n.length),3));else for(var i=e.normal.array,r=0,a=i.length;r<a;r++)i[r]=0;var s=e.normal.array,o,l,c,u=new C,h=new C,f=new C,d=new C,m=new C;if(t)for(var g=t.array,r=0,a=t.count;r<a;r+=3)o=g[r+0]*3,l=g[r+1]*3,c=g[r+2]*3,u.fromArray(n,o),h.fromArray(n,l),f.fromArray(n,c),d.subVectors(f,h),m.subVectors(u,h),d.cross(m),s[o]+=d.x,s[o+1]+=d.y,s[o+2]+=d.z,s[l]+=d.x,s[l+1]+=d.y,s[l+2]+=d.z,s[c]+=d.x,s[c+1]+=d.y,s[c+2]+=d.z;else for(var r=0,a=n.length;r<a;r+=9)u.fromArray(n,r),h.fromArray(n,r+3),f.fromArray(n,r+6),d.subVectors(f,h),m.subVectors(u,h),d.cross(m),s[r]=d.x,s[r+1]=d.y,s[r+2]=d.z,s[r+3]=d.x,s[r+4]=d.y,s[r+5]=d.z,s[r+6]=d.x,s[r+7]=d.y,s[r+8]=d.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(!(t&&t.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);return}e===void 0&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var n=this.attributes;for(var i in n)if(t.attributes[i]!==void 0)for(var r=n[i],a=r.array,s=t.attributes[i],o=s.array,l=s.itemSize,c=0,u=l*e;c<o.length;c++,u++)a[u]=o[c];return this},normalizeNormals:function(){var t=new C;return function(){for(var n=this.attributes.normal,i=0,r=n.count;i<r;i++)t.x=n.getX(i),t.y=n.getY(i),t.z=n.getZ(i),t.normalize(),n.setXYZ(i,t.x,t.y,t.z)}}(),toNonIndexed:function(){if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t=new Re,e=this.index.array,n=this.attributes;for(var i in n){for(var r=n[i],a=r.array,s=r.itemSize,o=new a.constructor(e.length*s),l=0,c=0,u=0,h=e.length;u<h;u++){l=e[u]*s;for(var f=0;f<s;f++)o[c++]=a[l++]}t.addAttribute(i,new st(o,s))}for(var d=this.groups,u=0,h=d.length;u<h;u++){var m=d[u];t.addGroup(m.start,m.count,m.materialIndex)}return t},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){var e=this.parameters;for(var n in e)e[n]!==void 0&&(t[n]=e[n]);return t}t.data={attributes:{}};var i=this.index;if(i!==null){var r=Array.prototype.slice.call(i.array);t.data.index={type:i.array.constructor.name,array:r}}var a=this.attributes;for(var n in a){var s=a[n],r=Array.prototype.slice.call(s.array);t.data.attributes[n]={itemSize:s.itemSize,type:s.array.constructor.name,array:r,normalized:s.normalized}}var o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));var l=this.boundingSphere;return l!==null&&(t.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),t},clone:function(){return new Re().copy(this)},copy:function(t){var e,n,i;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var r=t.index;r!==null&&this.setIndex(r.clone());var a=t.attributes;for(e in a){var s=a[e];this.addAttribute(e,s.clone())}var o=t.morphAttributes;for(e in o){var l=[],c=o[e];for(n=0,i=c.length;n<i;n++)l.push(c[n].clone());this.morphAttributes[e]=l}var u=t.groups;for(n=0,i=u.length;n<i;n++){var h=u[n];this.addGroup(h.start,h.count,h.materialIndex)}var f=t.boundingBox;f!==null&&(this.boundingBox=f.clone());var d=t.boundingSphere;return d!==null&&(this.boundingSphere=d.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function io(t,e,n,i,r,a){Ze.call(this),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:a},this.fromBufferGeometry(new cn(t,e,n,i,r,a)),this.mergeVertices()}io.prototype=Object.create(Ze.prototype);io.prototype.constructor=io;function cn(t,e,n,i,r,a){Re.call(this),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};var s=this;t=t||1,e=e||1,n=n||1,i=Math.floor(i)||1,r=Math.floor(r)||1,a=Math.floor(a)||1;var o=[],l=[],c=[],u=[],h=0,f=0;d("z","y","x",-1,-1,n,e,t,a,r,0),d("z","y","x",1,-1,n,e,-t,a,r,1),d("x","z","y",1,1,t,n,e,i,a,2),d("x","z","y",1,-1,t,n,-e,i,a,3),d("x","y","z",1,-1,t,e,n,i,r,4),d("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(o),this.addAttribute("position",new Ae(l,3)),this.addAttribute("normal",new Ae(c,3)),this.addAttribute("uv",new Ae(u,2));function d(m,g,p,v,_,x,y,M,T,L,b){var S=x/T,D=y/L,N=x/2,J=y/2,k=M/2,G=T+1,H=L+1,z=0,Z=0,w,R,V=new C;for(R=0;R<H;R++){var F=R*D-J;for(w=0;w<G;w++){var O=w*S-N;V[m]=O*v,V[g]=F*_,V[p]=k,l.push(V.x,V.y,V.z),V[m]=0,V[g]=0,V[p]=M>0?1:-1,c.push(V.x,V.y,V.z),u.push(w/T),u.push(1-R/L),z+=1}}for(R=0;R<L;R++)for(w=0;w<T;w++){var ee=h+w+G*R,W=h+w+G*(R+1),se=h+(w+1)+G*(R+1),Y=h+(w+1)+G*R;o.push(ee,W,Y),o.push(W,se,Y),Z+=6}s.addGroup(f,Z,b),f+=Z,h+=z}}cn.prototype=Object.create(Re.prototype);cn.prototype.constructor=cn;function ro(t,e,n,i){Ze.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i},this.fromBufferGeometry(new dn(t,e,n,i)),this.mergeVertices()}ro.prototype=Object.create(Ze.prototype);ro.prototype.constructor=ro;function dn(t,e,n,i){Re.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i},t=t||1,e=e||1;var r=t/2,a=e/2,s=Math.floor(n)||1,o=Math.floor(i)||1,l=s+1,c=o+1,u=t/s,h=e/o,f,d,m=[],g=[],p=[],v=[];for(d=0;d<c;d++){var _=d*h-a;for(f=0;f<l;f++){var x=f*u-r;g.push(x,-_,0),p.push(0,0,1),v.push(f/s),v.push(1-d/o)}}for(d=0;d<o;d++)for(f=0;f<s;f++){var y=f+l*d,M=f+l*(d+1),T=f+1+l*(d+1),L=f+1+l*d;m.push(y,M,L),m.push(M,T,L)}this.setIndex(m),this.addAttribute("position",new Ae(g,3)),this.addAttribute("normal",new Ae(p,3)),this.addAttribute("uv",new Ae(v,2))}dn.prototype=Object.create(Re.prototype);dn.prototype.constructor=dn;var kM=0;function nt(){Object.defineProperty(this,"id",{value:kM++}),this.uuid=it.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=Sr,this.side=ds,this.flatShading=!1,this.vertexColors=id,this.opacity=1,this.transparent=!1,this.blendSrc=sd,this.blendDst=od,this.blendEquation=xr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=rc,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.userData={},this.needsUpdate=!0}nt.prototype=Object.assign(Object.create(Zt.prototype),{constructor:nt,isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(t!==void 0)for(var e in t){var n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if(e==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===nd;continue}var i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}},toJSON:function(t){var e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearCoat!==void 0&&(n.clearCoat=this.clearCoat),this.clearCoatRoughness!==void 0&&(n.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,this.combine!==void 0&&(n.combine=this.combine),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Sr&&(n.blending=this.blending),this.flatShading===!0&&(n.flatShading=this.flatShading),this.side!==ds&&(n.side=this.side),this.vertexColors!==id&&(n.vertexColors=this.vertexColors),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.skinning===!0&&(n.skinning=!0),this.visible===!1&&(n.visible=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){var o=[];for(var l in s){var c=s[l];delete c.metadata,o.push(c)}return o}if(e){var r=i(t.textures),a=i(t.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n},clone:function(){return new this.constructor().copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.lights=t.lights,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.userData=JSON.parse(JSON.stringify(t.userData)),this.clipShadows=t.clipShadows,this.clipIntersection=t.clipIntersection;var e=t.clippingPlanes,n=null;if(e!==null){var i=e.length;n=new Array(i);for(var r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.shadowSide=t.shadowSide,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function En(t){nt.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,this.fragmentShader=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,t!==void 0&&(t.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}En.prototype=Object.create(nt.prototype);En.prototype.constructor=En;En.prototype.isShaderMaterial=!0;En.prototype.copy=function(t){return nt.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Ea(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this};En.prototype.toJSON=function(t){var e=nt.prototype.toJSON.call(this,t);e.uniforms={};for(var n in this.uniforms){var i=this.uniforms[n],r=i.value;r&&r.isTexture?e.uniforms[n]={type:"t",value:r.toJSON(t).uuid}:r&&r.isColor?e.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?e.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?e.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?e.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix4?e.uniforms[n]={type:"m4",value:r.toArray()}:e.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;var a={};for(var s in this.extensions)this.extensions[s]===!0&&(a[s]=!0);return Object.keys(a).length>0&&(e.extensions=a),e};function Qr(t,e){this.origin=t!==void 0?t:new C,this.direction=e!==void 0?e:new C}Object.assign(Qr.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return e===void 0&&(console.warn("THREE.Ray: .at() target is now required"),e=new C),e.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(){var t=new C;return function(n){return this.origin.copy(this.at(n,t)),this}}(),closestPointToPoint:function(t,e){e===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new C),e.subVectors(t,this.origin);var n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(){var t=new C;return function(n){var i=t.subVectors(n,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(n):(t.copy(this.direction).multiplyScalar(i).add(this.origin),t.distanceToSquared(n))}}(),distanceSqToSegment:function(){var t=new C,e=new C,n=new C;return function(r,a,s,o){t.copy(r).add(a).multiplyScalar(.5),e.copy(a).sub(r).normalize(),n.copy(this.origin).sub(t);var l=r.distanceTo(a)*.5,c=-this.direction.dot(e),u=n.dot(this.direction),h=-n.dot(e),f=n.lengthSq(),d=Math.abs(1-c*c),m,g,p,v;if(d>0)if(m=c*h-u,g=c*u-h,v=l*d,m>=0)if(g>=-v)if(g<=v){var _=1/d;m*=_,g*=_,p=m*(m+c*g+2*u)+g*(c*m+g+2*h)+f}else g=l,m=Math.max(0,-(c*g+u)),p=-m*m+g*(g+2*h)+f;else g=-l,m=Math.max(0,-(c*g+u)),p=-m*m+g*(g+2*h)+f;else g<=-v?(m=Math.max(0,-(-c*l+u)),g=m>0?-l:Math.min(Math.max(-l,-h),l),p=-m*m+g*(g+2*h)+f):g<=v?(m=0,g=Math.min(Math.max(-l,-h),l),p=g*(g+2*h)+f):(m=Math.max(0,-(c*l+u)),g=m>0?l:Math.min(Math.max(-l,-h),l),p=-m*m+g*(g+2*h)+f);else g=c>0?-l:l,m=Math.max(0,-(c*g+u)),p=-m*m+g*(g+2*h)+f;return s&&s.copy(this.direction).multiplyScalar(m).add(this.origin),o&&o.copy(e).multiplyScalar(g).add(t),p}}(),intersectSphere:function(){var t=new C;return function(n,i){t.subVectors(n.center,this.origin);var r=t.dot(this.direction),a=t.dot(t)-r*r,s=n.radius*n.radius;if(a>s)return null;var o=Math.sqrt(s-a),l=r-o,c=r+o;return l<0&&c<0?null:l<0?this.at(c,i):this.at(l,i)}}(),intersectsSphere:function(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;var n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null},intersectPlane:function(t,e){var n=this.distanceToPlane(t);return n===null?null:this.at(n,e)},intersectsPlane:function(t){var e=t.distanceToPoint(this.origin);if(e===0)return!0;var n=t.normal.dot(this.direction);return n*e<0},intersectBox:function(t,e){var n,i,r,a,s,o,l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,h=this.origin;return l>=0?(n=(t.min.x-h.x)*l,i=(t.max.x-h.x)*l):(n=(t.max.x-h.x)*l,i=(t.min.x-h.x)*l),c>=0?(r=(t.min.y-h.y)*c,a=(t.max.y-h.y)*c):(r=(t.max.y-h.y)*c,a=(t.min.y-h.y)*c),n>a||r>i||((r>n||n!==n)&&(n=r),(a<i||i!==i)&&(i=a),u>=0?(s=(t.min.z-h.z)*u,o=(t.max.z-h.z)*u):(s=(t.max.z-h.z)*u,o=(t.min.z-h.z)*u),n>o||s>i)||((s>n||n!==n)&&(n=s),(o<i||i!==i)&&(i=o),i<0)?null:this.at(n>=0?n:i,e)},intersectsBox:function(){var t=new C;return function(n){return this.intersectBox(n,t)!==null}}(),intersectTriangle:function(){var t=new C,e=new C,n=new C,i=new C;return function(a,s,o,l,c){e.subVectors(s,a),n.subVectors(o,a),i.crossVectors(e,n);var u=this.direction.dot(i),h;if(u>0){if(l)return null;h=1}else if(u<0)h=-1,u=-u;else return null;t.subVectors(this.origin,a);var f=h*this.direction.dot(n.crossVectors(t,n));if(f<0)return null;var d=h*this.direction.dot(e.cross(t));if(d<0||f+d>u)return null;var m=-h*t.dot(i);return m<0?null:this.at(m/u,c)}}(),applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}});function jt(t,e,n){this.a=t!==void 0?t:new C,this.b=e!==void 0?e:new C,this.c=n!==void 0?n:new C}Object.assign(jt,{getNormal:function(){var t=new C;return function(n,i,r,a){a===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),a=new C),a.subVectors(r,i),t.subVectors(n,i),a.cross(t);var s=a.lengthSq();return s>0?a.multiplyScalar(1/Math.sqrt(s)):a.set(0,0,0)}}(),getBarycoord:function(){var t=new C,e=new C,n=new C;return function(r,a,s,o,l){t.subVectors(o,a),e.subVectors(s,a),n.subVectors(r,a);var c=t.dot(t),u=t.dot(e),h=t.dot(n),f=e.dot(e),d=e.dot(n),m=c*f-u*u;if(l===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),l=new C),m===0)return l.set(-2,-1,-1);var g=1/m,p=(f*h-u*d)*g,v=(c*d-u*h)*g;return l.set(1-p-v,v,p)}}(),containsPoint:function(){var t=new C;return function(n,i,r,a){return jt.getBarycoord(n,i,r,a,t),t.x>=0&&t.y>=0&&t.x+t.y<=1}}(),getUV:function(){var t=new C;return function(n,i,r,a,s,o,l,c){return this.getBarycoord(n,i,r,a,t),c.set(0,0),c.addScaledVector(s,t.x),c.addScaledVector(o,t.y),c.addScaledVector(l,t.z),c}}()});Object.assign(jt.prototype,{set:function(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this},setFromPointsAndIndices:function(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},getArea:function(){var t=new C,e=new C;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),t.cross(e).length()*.5}}(),getMidpoint:function(t){return t===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new C),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(t){return jt.getNormal(this.a,this.b,this.c,t)},getPlane:function(t){return t===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new C),t.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(t,e){return jt.getBarycoord(t,this.a,this.b,this.c,e)},containsPoint:function(t){return jt.containsPoint(t,this.a,this.b,this.c)},getUV:function(t,e,n,i,r){return jt.getUV(t,this.a,this.b,this.c,e,n,i,r)},intersectsBox:function(t){return t.intersectsTriangle(this)},closestPointToPoint:function(){var t=new C,e=new C,n=new C,i=new C,r=new C,a=new C;return function(o,l){l===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),l=new C);var c=this.a,u=this.b,h=this.c,f,d;t.subVectors(u,c),e.subVectors(h,c),i.subVectors(o,c);var m=t.dot(i),g=e.dot(i);if(m<=0&&g<=0)return l.copy(c);r.subVectors(o,u);var p=t.dot(r),v=e.dot(r);if(p>=0&&v<=p)return l.copy(u);var _=m*v-p*g;if(_<=0&&m>=0&&p<=0)return f=m/(m-p),l.copy(c).addScaledVector(t,f);a.subVectors(o,h);var x=t.dot(a),y=e.dot(a);if(y>=0&&x<=y)return l.copy(h);var M=x*g-m*y;if(M<=0&&g>=0&&y<=0)return d=g/(g-y),l.copy(c).addScaledVector(e,d);var T=p*y-x*v;if(T<=0&&v-p>=0&&x-y>=0)return n.subVectors(h,u),d=(v-p)/(v-p+(x-y)),l.copy(u).addScaledVector(n,d);var L=1/(T+M+_);return f=M*L,d=_*L,l.copy(c).addScaledVector(t,f).addScaledVector(e,d)}}(),equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}});function nn(t){nt.call(this),this.type="MeshBasicMaterial",this.color=new Ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=jo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(t)}nn.prototype=Object.create(nt.prototype);nn.prototype.constructor=nn;nn.prototype.isMeshBasicMaterial=!0;nn.prototype.copy=function(t){return nt.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this};function Oe(t,e){Ee.call(this),this.type="Mesh",this.geometry=t!==void 0?t:new Re,this.material=e!==void 0?e:new nn({color:Math.random()*16777215}),this.drawMode=dd,this.updateMorphTargets()}Oe.prototype=Object.assign(Object.create(Ee.prototype),{constructor:Oe,isMesh:!0,setDrawMode:function(t){this.drawMode=t},copy:function(t){return Ee.prototype.copy.call(this,t),this.drawMode=t.drawMode,t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this},updateMorphTargets:function(){var t=this.geometry,e,n,i;if(t.isBufferGeometry){var r=t.morphAttributes,a=Object.keys(r);if(a.length>0){var s=r[a[0]];if(s!==void 0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,n=s.length;e<n;e++)i=s[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}else{var o=t.morphTargets;o!==void 0&&o.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(){var t=new Ye,e=new Qr,n=new Fn,i=new C,r=new C,a=new C,s=new C,o=new C,l=new C,c=new le,u=new le,h=new le,f=new C,d=new C;function m(p,v,_,x,y,M,T,L){var b;if(v.side===Vt?b=x.intersectTriangle(T,M,y,!0,L):b=x.intersectTriangle(y,M,T,v.side!==er,L),b===null)return null;d.copy(L),d.applyMatrix4(p.matrixWorld);var S=_.ray.origin.distanceTo(d);return S<_.near||S>_.far?null:{distance:S,point:d.clone(),object:p}}function g(p,v,_,x,y,M,T,L,b){i.fromBufferAttribute(y,T),r.fromBufferAttribute(y,L),a.fromBufferAttribute(y,b);var S=m(p,v,_,x,i,r,a,f);if(S){M&&(c.fromBufferAttribute(M,T),u.fromBufferAttribute(M,L),h.fromBufferAttribute(M,b),S.uv=jt.getUV(f,i,r,a,c,u,h,new le));var D=new no(T,L,b);jt.getNormal(i,r,a,D.normal),S.face=D}return S}return function(v,_){var x=this.geometry,y=this.material,M=this.matrixWorld;if(y!==void 0&&(x.boundingSphere===null&&x.computeBoundingSphere(),n.copy(x.boundingSphere),n.applyMatrix4(M),v.ray.intersectsSphere(n)!==!1&&(t.getInverse(M),e.copy(v.ray).applyMatrix4(t),!(x.boundingBox!==null&&e.intersectsBox(x.boundingBox)===!1)))){var T;if(x.isBufferGeometry){var L,b,S,D=x.index,N=x.attributes.position,J=x.attributes.uv,k=x.groups,G=x.drawRange,H,z,Z,w,R,V,F,O;if(D!==null)if(Array.isArray(y))for(H=0,Z=k.length;H<Z;H++)for(R=k[H],V=y[R.materialIndex],F=Math.max(R.start,G.start),O=Math.min(R.start+R.count,G.start+G.count),z=F,w=O;z<w;z+=3)L=D.getX(z),b=D.getX(z+1),S=D.getX(z+2),T=g(this,V,v,e,N,J,L,b,S),T&&(T.faceIndex=Math.floor(z/3),_.push(T));else for(F=Math.max(0,G.start),O=Math.min(D.count,G.start+G.count),H=F,Z=O;H<Z;H+=3)L=D.getX(H),b=D.getX(H+1),S=D.getX(H+2),T=g(this,y,v,e,N,J,L,b,S),T&&(T.faceIndex=Math.floor(H/3),_.push(T));else if(N!==void 0)if(Array.isArray(y))for(H=0,Z=k.length;H<Z;H++)for(R=k[H],V=y[R.materialIndex],F=Math.max(R.start,G.start),O=Math.min(R.start+R.count,G.start+G.count),z=F,w=O;z<w;z+=3)L=z,b=z+1,S=z+2,T=g(this,V,v,e,N,J,L,b,S),T&&(T.faceIndex=Math.floor(z/3),_.push(T));else for(F=Math.max(0,G.start),O=Math.min(N.count,G.start+G.count),H=F,Z=O;H<Z;H+=3)L=H,b=H+1,S=H+2,T=g(this,y,v,e,N,J,L,b,S),T&&(T.faceIndex=Math.floor(H/3),_.push(T))}else if(x.isGeometry){var ee,W,se,Y=Array.isArray(y),re=x.vertices,ae=x.faces,ue,X=x.faceVertexUvs[0];X.length>0&&(ue=X);for(var ve=0,be=ae.length;ve<be;ve++){var ye=ae[ve],te=Y?y[ye.materialIndex]:y;if(te!==void 0){if(ee=re[ye.a],W=re[ye.b],se=re[ye.c],te.morphTargets===!0){var Ve=x.morphTargets,Xe=this.morphTargetInfluences;i.set(0,0,0),r.set(0,0,0),a.set(0,0,0);for(var ie=0,ke=Ve.length;ie<ke;ie++){var Fe=Xe[ie];if(Fe!==0){var $e=Ve[ie].vertices;i.addScaledVector(s.subVectors($e[ye.a],ee),Fe),r.addScaledVector(o.subVectors($e[ye.b],W),Fe),a.addScaledVector(l.subVectors($e[ye.c],se),Fe)}}i.add(ee),r.add(W),a.add(se),ee=i,W=r,se=a}if(T=m(this,te,v,e,ee,W,se,f),T){if(ue&&ue[ve]){var Ke=ue[ve];c.copy(Ke[0]),u.copy(Ke[1]),h.copy(Ke[2]),T.uv=jt.getUV(f,ee,W,se,c,u,h,new le)}T.face=ye,T.faceIndex=ve,_.push(T)}}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function VM(t,e,n,i){var r=new Ge(0),a=0,s,o,l=null,c=0;function u(f,d,m,g){var p=d.background;if(p===null?(h(r,a),l=null,c=0):p&&p.isColor&&(h(p,1),g=!0,l=null,c=0),(t.autoClear||g)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),p&&(p.isCubeTexture||p.isWebGLRenderTargetCube)){o===void 0&&(o=new Oe(new cn(1,1,1),new En({type:"BackgroundCubeMaterial",uniforms:Ea(ii.cube.uniforms),vertexShader:ii.cube.vertexShader,fragmentShader:ii.cube.fragmentShader,side:Vt,depthTest:!0,depthWrite:!1,fog:!1})),o.geometry.removeAttribute("normal"),o.geometry.removeAttribute("uv"),o.onBeforeRender=function(_,x,y){this.matrixWorld.copyPosition(y.matrixWorld)},Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.tCube.value}}),n.update(o));var v=p.isWebGLRenderTargetCube?p.texture:p;o.material.uniforms.tCube.value=v,o.material.uniforms.tFlip.value=p.isWebGLRenderTargetCube?1:-1,(l!==p||c!==v.version)&&(o.material.needsUpdate=!0,l=p,c=v.version),f.unshift(o,o.geometry,o.material,0,null)}else p&&p.isTexture&&(s===void 0&&(s=new Oe(new dn(2,2),new En({type:"BackgroundMaterial",uniforms:Ea(ii.background.uniforms),vertexShader:ii.background.vertexShader,fragmentShader:ii.background.fragmentShader,side:ds,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.removeAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(s)),s.material.uniforms.t2D.value=p,p.matrixAutoUpdate===!0&&p.updateMatrix(),s.material.uniforms.uvTransform.value.copy(p.matrix),(l!==p||c!==p.version)&&(s.material.needsUpdate=!0,l=p,c=p.version),f.unshift(s,s.geometry,s.material,0,null))}function h(f,d){e.buffers.color.setClear(f.r,f.g,f.b,d,i)}return{getClearColor:function(){return r},setClearColor:function(f,d){r.set(f),a=d!==void 0?d:1,h(r,a)},getClearAlpha:function(){return a},setClearAlpha:function(f){a=f,h(r,a)},render:u}}function HM(t,e,n,i){var r;function a(l){r=l}function s(l,c){t.drawArrays(r,l,c),n.update(c,r)}function o(l,c,u){var h;if(i.isWebGL2)h=t;else if(h=e.get("ANGLE_instanced_arrays"),h===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[i.isWebGL2?"drawArraysInstanced":"drawArraysInstancedANGLE"](r,c,u,l.maxInstancedCount),n.update(u,r,l.maxInstancedCount)}this.setMode=a,this.render=s,this.renderInstances=o}function WM(t,e,n){var i;function r(){if(i!==void 0)return i;var M=e.get("EXT_texture_filter_anisotropic");return M!==null?i=t.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function a(M){if(M==="highp"){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";M="mediump"}return M==="mediump"&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var s=typeof WebGL2RenderingContext!="undefined"&&t instanceof WebGL2RenderingContext,o=n.precision!==void 0?n.precision:"highp",l=a(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);var c=n.logarithmicDepthBuffer===!0,u=t.getParameter(34930),h=t.getParameter(35660),f=t.getParameter(3379),d=t.getParameter(34076),m=t.getParameter(34921),g=t.getParameter(36347),p=t.getParameter(36348),v=t.getParameter(36349),_=h>0,x=s||!!e.get("OES_texture_float"),y=_&&x;return{isWebGL2:s,getMaxAnisotropy:r,getMaxPrecision:a,precision:o,logarithmicDepthBuffer:c,maxTextures:u,maxVertexTextures:h,maxTextureSize:f,maxCubemapSize:d,maxAttributes:m,maxVertexUniforms:g,maxVaryings:p,maxFragmentUniforms:v,vertexTextures:_,floatFragmentTextures:x,floatVertexTextures:y}}function jM(){var t=this,e=null,n=0,i=!1,r=!1,a=new Un,s=new zt,o={value:null,needsUpdate:!1};this.uniform=o,this.numPlanes=0,this.numIntersection=0,this.init=function(u,h,f){var d=u.length!==0||h||n!==0||i;return i=h,e=c(u,f,0),n=u.length,d},this.beginShadows=function(){r=!0,c(null)},this.endShadows=function(){r=!1,l()},this.setState=function(u,h,f,d,m,g){if(!i||u===null||u.length===0||r&&!f)r?c(null):l();else{var p=r?0:n,v=p*4,_=m.clippingState||null;o.value=_,_=c(u,d,v,g);for(var x=0;x!==v;++x)_[x]=e[x];m.clippingState=_,this.numIntersection=h?this.numPlanes:0,this.numPlanes+=p}};function l(){o.value!==e&&(o.value=e,o.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function c(u,h,f,d){var m=u!==null?u.length:0,g=null;if(m!==0){if(g=o.value,d!==!0||g===null){var p=f+m*4,v=h.matrixWorldInverse;s.getNormalMatrix(v),(g===null||g.length<p)&&(g=new Float32Array(p));for(var _=0,x=f;_!==m;++_,x+=4)a.copy(u[_]).applyMatrix4(v,s),a.normal.toArray(g,x),g[x+3]=a.constant}o.value=g,o.needsUpdate=!0}return t.numPlanes=m,g}}function XM(t){var e={};return{get:function(n){if(e[n]!==void 0)return e[n];var i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),e[n]=i,i}}}function qM(t,e,n){var i={},r={};function a(c){var u=c.target,h=i[u.id];h.index!==null&&e.remove(h.index);for(var f in h.attributes)e.remove(h.attributes[f]);u.removeEventListener("dispose",a),delete i[u.id];var d=r[h.id];d&&(e.remove(d),delete r[h.id]),n.memory.geometries--}function s(c,u){var h=i[u.id];return h||(u.addEventListener("dispose",a),u.isBufferGeometry?h=u:u.isGeometry&&(u._bufferGeometry===void 0&&(u._bufferGeometry=new Re().setFromObject(c)),h=u._bufferGeometry),i[u.id]=h,n.memory.geometries++,h)}function o(c){var u=c.index,h=c.attributes;u!==null&&e.update(u,34963);for(var f in h)e.update(h[f],34962);var d=c.morphAttributes;for(var f in d)for(var m=d[f],g=0,p=m.length;g<p;g++)e.update(m[g],34962)}function l(c){var u=r[c.id];if(u)return u;var h=[],f=c.index,d=c.attributes;if(f!==null)for(var m=f.array,g=0,p=m.length;g<p;g+=3){var v=m[g+0],_=m[g+1],x=m[g+2];h.push(v,_,_,x,x,v)}else for(var m=d.position.array,g=0,p=m.length/3-1;g<p;g+=3){var v=g+0,_=g+1,x=g+2;h.push(v,_,_,x,x,v)}return u=new(vd(h)>65535?Aa:Ta)(h,1),e.update(u,34963),r[c.id]=u,u}return{get:s,update:o,getWireframeAttribute:l}}function YM(t,e,n,i){var r;function a(h){r=h}var s,o;function l(h){s=h.type,o=h.bytesPerElement}function c(h,f){t.drawElements(r,f,s,h*o),n.update(f,r)}function u(h,f,d){var m;if(i.isWebGL2)m=t;else{var m=e.get("ANGLE_instanced_arrays");if(m===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}}m[i.isWebGL2?"drawElementsInstanced":"drawElementsInstancedANGLE"](r,d,s,f*o,h.maxInstancedCount),n.update(d,r,h.maxInstancedCount)}this.setMode=a,this.setIndex=l,this.render=c,this.renderInstances=u}function $M(t){var e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(a,s,o){switch(o=o||1,n.calls++,s){case 4:n.triangles+=o*(a/3);break;case 5:case 6:n.triangles+=o*(a-2);break;case 1:n.lines+=o*(a/2);break;case 3:n.lines+=o*(a-1);break;case 2:n.lines+=o*a;break;case 0:n.points+=o*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",s);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:r,update:i}}function ZM(t,e){return Math.abs(e[1])-Math.abs(t[1])}function JM(t){var e={},n=new Float32Array(8);function i(r,a,s,o){var l=r.morphTargetInfluences,c=l.length,u=e[a.id];if(u===void 0){u=[];for(var h=0;h<c;h++)u[h]=[h,0];e[a.id]=u}for(var f=s.morphTargets&&a.morphAttributes.position,d=s.morphNormals&&a.morphAttributes.normal,h=0;h<c;h++){var m=u[h];m[1]!==0&&(f&&a.removeAttribute("morphTarget"+h),d&&a.removeAttribute("morphNormal"+h))}for(var h=0;h<c;h++){var m=u[h];m[0]=h,m[1]=l[h]}u.sort(ZM);for(var h=0;h<8;h++){var m=u[h];if(m){var g=m[0],p=m[1];if(p){f&&a.addAttribute("morphTarget"+h,f[g]),d&&a.addAttribute("morphNormal"+h,d[g]),n[h]=p;continue}}n[h]=0}o.getUniforms().setValue(t,"morphTargetInfluences",n)}return{update:i}}function QM(t,e){var n={};function i(a){var s=e.render.frame,o=a.geometry,l=t.get(a,o);return n[l.id]!==s&&(o.isGeometry&&l.updateFromObject(a),t.update(l),n[l.id]=s),l}function r(){n={}}return{update:i,dispose:r}}function Ei(t,e,n,i,r,a,s,o,l,c){t=t!==void 0?t:[],e=e!==void 0?e:eu,vt.call(this,t,e,n,i,r,a,s,o,l,c),this.flipY=!1}Ei.prototype=Object.create(vt.prototype);Ei.prototype.constructor=Ei;Ei.prototype.isCubeTexture=!0;Object.defineProperty(Ei.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}});function La(t,e,n,i){vt.call(this,null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=en,this.minFilter=en,this.generateMipmaps=!1,this.flipY=!1}La.prototype=Object.create(vt.prototype);La.prototype.constructor=La;La.prototype.isDataTexture3D=!0;var yd=new vt,KM=new La,xd=new Ei;function _d(){this.seq=[],this.map={}}var Wh=[],jh=[],Xh=new Float32Array(16),qh=new Float32Array(9),Yh=new Float32Array(4);function Kr(t,e,n){var i=t[0];if(i<=0||i>0)return t;var r=e*n,a=Wh[r];if(a===void 0&&(a=new Float32Array(r),Wh[r]=a),e!==0){i.toArray(a,0);for(var s=1,o=0;s!==e;++s)o+=n,t[s].toArray(a,o)}return a}function St(t,e){if(t.length!==e.length)return!1;for(var n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Ot(t,e){for(var n=0,i=e.length;n<i;n++)t[n]=e[n]}function bd(t,e){var n=jh[e];n===void 0&&(n=new Int32Array(e),jh[e]=n);for(var i=0;i!==e;++i)n[i]=t.allocTextureUnit();return n}function ew(t,e){var n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function tw(t,e){var n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function nw(t,e){var n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(St(n,e))return;t.uniform2fv(this.addr,e),Ot(n,e)}}function iw(t,e){var n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(St(n,e))return;t.uniform3fv(this.addr,e),Ot(n,e)}}function rw(t,e){var n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(St(n,e))return;t.uniform4fv(this.addr,e),Ot(n,e)}}function aw(t,e){var n=this.cache,i=e.elements;if(i===void 0){if(St(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Ot(n,e)}else{if(St(n,i))return;Yh.set(i),t.uniformMatrix2fv(this.addr,!1,Yh),Ot(n,i)}}function sw(t,e){var n=this.cache,i=e.elements;if(i===void 0){if(St(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Ot(n,e)}else{if(St(n,i))return;qh.set(i),t.uniformMatrix3fv(this.addr,!1,qh),Ot(n,i)}}function ow(t,e){var n=this.cache,i=e.elements;if(i===void 0){if(St(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Ot(n,e)}else{if(St(n,i))return;Xh.set(i),t.uniformMatrix4fv(this.addr,!1,Xh),Ot(n,i)}}function lw(t,e,n){var i=this.cache,r=n.allocTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2D(e||yd,r)}function cw(t,e,n){var i=this.cache,r=n.allocTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||KM,r)}function uw(t,e,n){var i=this.cache,r=n.allocTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(e||xd,r)}function Md(t,e){var n=this.cache;St(n,e)||(t.uniform2iv(this.addr,e),Ot(n,e))}function wd(t,e){var n=this.cache;St(n,e)||(t.uniform3iv(this.addr,e),Ot(n,e))}function Sd(t,e){var n=this.cache;St(n,e)||(t.uniform4iv(this.addr,e),Ot(n,e))}function hw(t){switch(t){case 5126:return ew;case 35664:return nw;case 35665:return iw;case 35666:return rw;case 35674:return aw;case 35675:return sw;case 35676:return ow;case 35678:case 36198:return lw;case 35679:return cw;case 35680:return uw;case 5124:case 35670:return tw;case 35667:case 35671:return Md;case 35668:case 35672:return wd;case 35669:case 35673:return Sd}}function fw(t,e){var n=this.cache;St(n,e)||(t.uniform1fv(this.addr,e),Ot(n,e))}function dw(t,e){var n=this.cache;St(n,e)||(t.uniform1iv(this.addr,e),Ot(n,e))}function pw(t,e){var n=this.cache,i=Kr(e,this.size,2);St(n,i)||(t.uniform2fv(this.addr,i),this.updateCache(i))}function mw(t,e){var n=this.cache,i=Kr(e,this.size,3);St(n,i)||(t.uniform3fv(this.addr,i),this.updateCache(i))}function gw(t,e){var n=this.cache,i=Kr(e,this.size,4);St(n,i)||(t.uniform4fv(this.addr,i),this.updateCache(i))}function vw(t,e){var n=this.cache,i=Kr(e,this.size,4);St(n,i)||(t.uniformMatrix2fv(this.addr,!1,i),this.updateCache(i))}function yw(t,e){var n=this.cache,i=Kr(e,this.size,9);St(n,i)||(t.uniformMatrix3fv(this.addr,!1,i),this.updateCache(i))}function xw(t,e){var n=this.cache,i=Kr(e,this.size,16);St(n,i)||(t.uniformMatrix4fv(this.addr,!1,i),this.updateCache(i))}function _w(t,e,n){var i=this.cache,r=e.length,a=bd(n,r);St(i,a)===!1&&(t.uniform1iv(this.addr,a),Ot(i,a));for(var s=0;s!==r;++s)n.setTexture2D(e[s]||yd,a[s])}function bw(t,e,n){var i=this.cache,r=e.length,a=bd(n,r);St(i,a)===!1&&(t.uniform1iv(this.addr,a),Ot(i,a));for(var s=0;s!==r;++s)n.setTextureCube(e[s]||xd,a[s])}function Mw(t){switch(t){case 5126:return fw;case 35664:return pw;case 35665:return mw;case 35666:return gw;case 35674:return vw;case 35675:return yw;case 35676:return xw;case 35678:return _w;case 35680:return bw;case 5124:case 35670:return dw;case 35667:case 35671:return Md;case 35668:case 35672:return wd;case 35669:case 35673:return Sd}}function ww(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=hw(e.type)}function Ed(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=Mw(e.type)}Ed.prototype.updateCache=function(t){var e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Ot(e,t)};function Td(t){this.id=t,_d.call(this)}Td.prototype.setValue=function(t,e,n){for(var i=this.seq,r=0,a=i.length;r!==a;++r){var s=i[r];s.setValue(t,e[s.id],n)}};var Gl=/([\w\d_]+)(\])?(\[|\.)?/g;function $h(t,e){t.seq.push(e),t.map[e.id]=e}function Sw(t,e,n){var i=t.name,r=i.length;for(Gl.lastIndex=0;;){var a=Gl.exec(i),s=Gl.lastIndex,o=a[1],l=a[2]==="]",c=a[3];if(l&&(o=o|0),c===void 0||c==="["&&s+2===r){$h(n,c===void 0?new ww(o,t,e):new Ed(o,t,e));break}else{var u=n.map,h=u[o];h===void 0&&(h=new Td(o),$h(n,h)),n=h}}}function bi(t,e,n){_d.call(this),this.renderer=n;for(var i=t.getProgramParameter(e,35718),r=0;r<i;++r){var a=t.getActiveUniform(e,r),s=t.getUniformLocation(e,a.name);Sw(a,s,this)}}bi.prototype.setValue=function(t,e,n){var i=this.map[e];i!==void 0&&i.setValue(t,n,this.renderer)};bi.prototype.setOptional=function(t,e,n){var i=e[n];i!==void 0&&this.setValue(t,n,i)};bi.upload=function(t,e,n,i){for(var r=0,a=e.length;r!==a;++r){var s=e[r],o=n[s.id];o.needsUpdate!==!1&&s.setValue(t,o.value,i)}};bi.seqWithValue=function(t,e){for(var n=[],i=0,r=t.length;i!==r;++i){var a=t[i];a.id in e&&n.push(a)}return n};function Ew(t){for(var e=t.split(`
`),n=0;n<e.length;n++)e[n]=n+1+": "+e[n];return e.join(`
`)}function Zh(t,e,n){var i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),t.getShaderParameter(i,35713)===!1&&console.error("THREE.WebGLShader: Shader couldn't compile."),t.getShaderInfoLog(i)!==""&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",e===35633?"vertex":"fragment",t.getShaderInfoLog(i),Ew(n)),i}var Tw=0;function Ad(t){switch(t){case to:return["Linear","( value )"];case g_:return["sRGB","( value )"];case v_:return["RGBE","( value )"];case y_:return["RGBM","( value, 7.0 )"];case x_:return["RGBM","( value, 16.0 )"];case __:return["RGBD","( value, 256.0 )"];case pd:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+t)}}function Us(t,e){var n=Ad(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Aw(t,e){var n=Ad(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Lw(t,e){var n;switch(e){case ld:n="Linear";break;case Nx:n="Reinhard";break;case zx:n="Uncharted2";break;case Ux:n="OptimizedCineon";break;case Bx:n="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Cw(t,e,n){t=t||{};var i=[t.derivatives||e.envMapCubeUV||e.bumpMap||e.normalMap&&!e.objectSpaceNormalMap||e.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||e.logarithmicDepthBuffer)&&n.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&n.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||e.envMap)&&n.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""];return i.filter(da).join(`
`)}function Pw(t){var e=[];for(var n in t){var i=t[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function Rw(t,e){for(var n={},i=t.getProgramParameter(e,35721),r=0;r<i;r++){var a=t.getActiveAttrib(e,r),s=a.name;n[s]=t.getAttribLocation(e,s)}return n}function da(t){return t!==""}function Jh(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights)}function Qh(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}function dc(t){var e=/^[ \t]*#include +<([\w\d./]+)>/gm;function n(i,r){var a=lt[r];if(a===void 0)throw new Error("Can not resolve #include <"+r+">");return dc(a)}return t.replace(e,n)}function Kh(t){var e=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;function n(i,r,a,s){for(var o="",l=parseInt(r);l<parseInt(a);l++)o+=s.replace(/\[ i \]/g,"[ "+l+" ]");return o}return t.replace(e,n)}function Dw(t,e,n,i,r,a,s){var o=t.context,l=i.defines,c=r.vertexShader,u=r.fragmentShader,h="SHADOWMAP_TYPE_BASIC";a.shadowMapType===td?h="SHADOWMAP_TYPE_PCF":a.shadowMapType===mx&&(h="SHADOWMAP_TYPE_PCF_SOFT");var f="ENVMAP_TYPE_CUBE",d="ENVMAP_MODE_REFLECTION",m="ENVMAP_BLENDING_MULTIPLY";if(a.envMap){switch(i.envMap.mapping){case eu:case ac:f="ENVMAP_TYPE_CUBE";break;case tu:case nu:f="ENVMAP_TYPE_CUBE_UV";break;case cd:case sc:f="ENVMAP_TYPE_EQUIREC";break;case ud:f="ENVMAP_TYPE_SPHERE";break}switch(i.envMap.mapping){case ac:case sc:d="ENVMAP_MODE_REFRACTION";break}switch(i.combine){case jo:m="ENVMAP_BLENDING_MULTIPLY";break;case Ox:m="ENVMAP_BLENDING_MIX";break;case Fx:m="ENVMAP_BLENDING_ADD";break}}var g=t.gammaFactor>0?t.gammaFactor:1,p=s.isWebGL2?"":Cw(i.extensions,a,e),v=Pw(l),_=o.createProgram(),x,y;if(i.isRawShaderMaterial?(x=[v].filter(da).join(`
`),x.length>0&&(x+=`
`),y=[p,v].filter(da).join(`
`),y.length>0&&(y+=`
`)):(x=["precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+r.name,v,a.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+g,"#define MAX_BONES "+a.maxBones,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+d:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexColors?"#define USE_COLOR":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.useVertexTexture?"#define BONE_TEXTURE":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&&a.flatShading===!1?"#define USE_MORPHNORMALS":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+h:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&(s.isWebGL2||e.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(da).join(`
`),y=[p,"precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+r.name,v,a.alphaTest?"#define ALPHATEST "+a.alphaTest+(a.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+g,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.matcap?"#define USE_MATCAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+f:"",a.envMap?"#define "+d:"",a.envMap?"#define "+m:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexColors?"#define USE_COLOR":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+h:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&(s.isWebGL2||e.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"",a.envMap&&(s.isWebGL2||e.get("EXT_shader_texture_lod"))?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",a.toneMapping!==Ul?"#define TONE_MAPPING":"",a.toneMapping!==Ul?lt.tonemapping_pars_fragment:"",a.toneMapping!==Ul?Lw("toneMapping",a.toneMapping):"",a.dithering?"#define DITHERING":"",a.outputEncoding||a.mapEncoding||a.matcapEncoding||a.envMapEncoding||a.emissiveMapEncoding?lt.encodings_pars_fragment:"",a.mapEncoding?Us("mapTexelToLinear",a.mapEncoding):"",a.matcapEncoding?Us("matcapTexelToLinear",a.matcapEncoding):"",a.envMapEncoding?Us("envMapTexelToLinear",a.envMapEncoding):"",a.emissiveMapEncoding?Us("emissiveMapTexelToLinear",a.emissiveMapEncoding):"",a.outputEncoding?Aw("linearToOutputTexel",a.outputEncoding):"",a.depthPacking?"#define DEPTH_PACKING "+i.depthPacking:"",`
`].filter(da).join(`
`)),c=dc(c),c=Jh(c,a),c=Qh(c,a),u=dc(u),u=Jh(u,a),u=Qh(u,a),c=Kh(c),u=Kh(u),s.isWebGL2&&!i.isRawShaderMaterial){var M=!1,T=/^\s*#version\s+300\s+es\s*\n/;i.isShaderMaterial&&c.match(T)!==null&&u.match(T)!==null&&(M=!0,c=c.replace(T,""),u=u.replace(T,"")),x=[`#version 300 es
`,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,y=[`#version 300 es
`,"#define varying in",M?"":"out highp vec4 pc_fragColor;",M?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+y}var L=x+c,b=y+u,S=Zh(o,35633,L),D=Zh(o,35632,b);o.attachShader(_,S),o.attachShader(_,D),i.index0AttributeName!==void 0?o.bindAttribLocation(_,0,i.index0AttributeName):a.morphTargets===!0&&o.bindAttribLocation(_,0,"position"),o.linkProgram(_);var N=o.getProgramInfoLog(_).trim(),J=o.getShaderInfoLog(S).trim(),k=o.getShaderInfoLog(D).trim(),G=!0,H=!0;o.getProgramParameter(_,35714)===!1?(G=!1,console.error("THREE.WebGLProgram: shader error: ",o.getError(),"35715",o.getProgramParameter(_,35715),"gl.getProgramInfoLog",N,J,k)):N!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",N):(J===""||k==="")&&(H=!1),H&&(this.diagnostics={runnable:G,material:i,programLog:N,vertexShader:{log:J,prefix:x},fragmentShader:{log:k,prefix:y}}),o.deleteShader(S),o.deleteShader(D);var z;this.getUniforms=function(){return z===void 0&&(z=new bi(o,_,t)),z};var Z;return this.getAttributes=function(){return Z===void 0&&(Z=Rw(o,_)),Z},this.destroy=function(){o.deleteProgram(_),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.name=r.name,this.id=Tw++,this.code=n,this.usedTimes=1,this.program=_,this.vertexShader=S,this.fragmentShader=D,this}function Iw(t,e,n){var i=[],r={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},a=["precision","supportsVertexTextures","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering"];function s(l){var c=l.skeleton,u=c.bones;if(n.floatVertexTextures)return 1024;var h=n.maxVertexUniforms,f=Math.floor((h-20)/4),d=Math.min(f,u.length);return d<u.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+u.length+" bones. This GPU supports "+d+"."),0):d}function o(l,c){var u;return l?l.isTexture?u=l.encoding:l.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),u=l.texture.encoding):u=to,u===to&&c&&(u=pd),u}this.getParameters=function(l,c,u,h,f,d,m){var g=r[l.type],p=m.isSkinnedMesh?s(m):0,v=n.precision;l.precision!==null&&(v=n.getMaxPrecision(l.precision),v!==l.precision&&console.warn("THREE.WebGLProgram.getParameters:",l.precision,"not supported, using",v,"instead."));var _=t.getRenderTarget(),x={shaderID:g,precision:v,supportsVertexTextures:n.vertexTextures,outputEncoding:o(_?_.texture:null,t.gammaOutput),map:!!l.map,mapEncoding:o(l.map,t.gammaInput),matcap:!!l.matcap,matcapEncoding:o(l.matcap,t.gammaInput),envMap:!!l.envMap,envMapMode:l.envMap&&l.envMap.mapping,envMapEncoding:o(l.envMap,t.gammaInput),envMapCubeUV:!!l.envMap&&(l.envMap.mapping===tu||l.envMap.mapping===nu),lightMap:!!l.lightMap,aoMap:!!l.aoMap,emissiveMap:!!l.emissiveMap,emissiveMapEncoding:o(l.emissiveMap,t.gammaInput),bumpMap:!!l.bumpMap,normalMap:!!l.normalMap,objectSpaceNormalMap:l.normalMapType===w_,displacementMap:!!l.displacementMap,roughnessMap:!!l.roughnessMap,metalnessMap:!!l.metalnessMap,specularMap:!!l.specularMap,alphaMap:!!l.alphaMap,gradientMap:!!l.gradientMap,combine:l.combine,vertexColors:l.vertexColors,fog:!!h,useFog:l.fog,fogExp:h&&h.isFogExp2,flatShading:l.flatShading,sizeAttenuation:l.sizeAttenuation,logarithmicDepthBuffer:n.logarithmicDepthBuffer,skinning:l.skinning&&p>0,maxBones:p,useVertexTexture:n.floatVertexTextures,morphTargets:l.morphTargets,morphNormals:l.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:c.directional.length,numPointLights:c.point.length,numSpotLights:c.spot.length,numRectAreaLights:c.rectArea.length,numHemiLights:c.hemi.length,numClippingPlanes:f,numClipIntersection:d,dithering:l.dithering,shadowMapEnabled:t.shadowMap.enabled&&m.receiveShadow&&u.length>0,shadowMapType:t.shadowMap.type,toneMapping:t.toneMapping,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:l.premultipliedAlpha,alphaTest:l.alphaTest,doubleSided:l.side===er,flipSided:l.side===Vt,depthPacking:l.depthPacking!==void 0?l.depthPacking:!1};return x},this.getProgramCode=function(l,c){var u=[];if(c.shaderID?u.push(c.shaderID):(u.push(l.fragmentShader),u.push(l.vertexShader)),l.defines!==void 0)for(var h in l.defines)u.push(h),u.push(l.defines[h]);for(var f=0;f<a.length;f++)u.push(c[a[f]]);return u.push(l.onBeforeCompile.toString()),u.push(t.gammaOutput),u.push(t.gammaFactor),u.join()},this.acquireProgram=function(l,c,u,h){for(var f,d=0,m=i.length;d<m;d++){var g=i[d];if(g.code===h){f=g,++f.usedTimes;break}}return f===void 0&&(f=new Dw(t,e,h,l,c,u,n),i.push(f)),f},this.releaseProgram=function(l){if(--l.usedTimes===0){var c=i.indexOf(l);i[c]=i[i.length-1],i.pop(),l.destroy()}},this.programs=i}function Ow(){var t=new WeakMap;function e(a){var s=t.get(a);return s===void 0&&(s={},t.set(a,s)),s}function n(a){t.delete(a)}function i(a,s,o){t.get(a)[s]=o}function r(){t=new WeakMap}return{get:e,remove:n,update:i,dispose:r}}function Fw(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program&&e.program&&t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Nw(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function ef(){var t=[],e=0,n=[],i=[];function r(){e=0,n.length=0,i.length=0}function a(c,u,h,f,d){var m=t[e];return m===void 0?(m={id:c.id,object:c,geometry:u,material:h,program:h.program,renderOrder:c.renderOrder,z:f,group:d},t[e]=m):(m.id=c.id,m.object=c,m.geometry=u,m.material=h,m.program=h.program,m.renderOrder=c.renderOrder,m.z=f,m.group=d),e++,m}function s(c,u,h,f,d){var m=a(c,u,h,f,d);(h.transparent===!0?i:n).push(m)}function o(c,u,h,f,d){var m=a(c,u,h,f,d);(h.transparent===!0?i:n).unshift(m)}function l(){n.length>1&&n.sort(Fw),i.length>1&&i.sort(Nw)}return{opaque:n,transparent:i,init:r,push:s,unshift:o,sort:l}}function zw(){var t={};function e(i,r){var a=t[i.id],s;return a===void 0?(s=new ef,t[i.id]={},t[i.id][r.id]=s):(s=a[r.id],s===void 0&&(s=new ef,a[r.id]=s)),s}function n(){t={}}return{get:e,dispose:n}}function Uw(){var t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];var n;switch(e.type){case"DirectionalLight":n={direction:new C,color:new Ge,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new le};break;case"SpotLight":n={position:new C,direction:new C,color:new Ge,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new le};break;case"PointLight":n={position:new C,color:new Ge,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new le,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":n={direction:new C,skyColor:new Ge,groundColor:new Ge};break;case"RectAreaLight":n={color:new Ge,position:new C,halfWidth:new C,halfHeight:new C};break}return t[e.id]=n,n}}}var Bw=0;function Gw(){var t=new Uw,e={id:Bw++,hash:{stateID:-1,directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,shadowsLength:-1},ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},n=new C,i=new Ye,r=new Ye;function a(s,o,l){for(var c=0,u=0,h=0,f=0,d=0,m=0,g=0,p=0,v=l.matrixWorldInverse,_=0,x=s.length;_<x;_++){var y=s[_],M=y.color,T=y.intensity,L=y.distance,b=y.shadow&&y.shadow.map?y.shadow.map.texture:null;if(y.isAmbientLight)c+=M.r*T,u+=M.g*T,h+=M.b*T;else if(y.isDirectionalLight){var S=t.get(y);if(S.color.copy(y.color).multiplyScalar(y.intensity),S.direction.setFromMatrixPosition(y.matrixWorld),n.setFromMatrixPosition(y.target.matrixWorld),S.direction.sub(n),S.direction.transformDirection(v),S.shadow=y.castShadow,y.castShadow){var D=y.shadow;S.shadowBias=D.bias,S.shadowRadius=D.radius,S.shadowMapSize=D.mapSize}e.directionalShadowMap[f]=b,e.directionalShadowMatrix[f]=y.shadow.matrix,e.directional[f]=S,f++}else if(y.isSpotLight){var S=t.get(y);if(S.position.setFromMatrixPosition(y.matrixWorld),S.position.applyMatrix4(v),S.color.copy(M).multiplyScalar(T),S.distance=L,S.direction.setFromMatrixPosition(y.matrixWorld),n.setFromMatrixPosition(y.target.matrixWorld),S.direction.sub(n),S.direction.transformDirection(v),S.coneCos=Math.cos(y.angle),S.penumbraCos=Math.cos(y.angle*(1-y.penumbra)),S.decay=y.decay,S.shadow=y.castShadow,y.castShadow){var D=y.shadow;S.shadowBias=D.bias,S.shadowRadius=D.radius,S.shadowMapSize=D.mapSize}e.spotShadowMap[m]=b,e.spotShadowMatrix[m]=y.shadow.matrix,e.spot[m]=S,m++}else if(y.isRectAreaLight){var S=t.get(y);S.color.copy(M).multiplyScalar(T),S.position.setFromMatrixPosition(y.matrixWorld),S.position.applyMatrix4(v),r.identity(),i.copy(y.matrixWorld),i.premultiply(v),r.extractRotation(i),S.halfWidth.set(y.width*.5,0,0),S.halfHeight.set(0,y.height*.5,0),S.halfWidth.applyMatrix4(r),S.halfHeight.applyMatrix4(r),e.rectArea[g]=S,g++}else if(y.isPointLight){var S=t.get(y);if(S.position.setFromMatrixPosition(y.matrixWorld),S.position.applyMatrix4(v),S.color.copy(y.color).multiplyScalar(y.intensity),S.distance=y.distance,S.decay=y.decay,S.shadow=y.castShadow,y.castShadow){var D=y.shadow;S.shadowBias=D.bias,S.shadowRadius=D.radius,S.shadowMapSize=D.mapSize,S.shadowCameraNear=D.camera.near,S.shadowCameraFar=D.camera.far}e.pointShadowMap[d]=b,e.pointShadowMatrix[d]=y.shadow.matrix,e.point[d]=S,d++}else if(y.isHemisphereLight){var S=t.get(y);S.direction.setFromMatrixPosition(y.matrixWorld),S.direction.transformDirection(v),S.direction.normalize(),S.skyColor.copy(y.color).multiplyScalar(T),S.groundColor.copy(y.groundColor).multiplyScalar(T),e.hemi[p]=S,p++}}e.ambient[0]=c,e.ambient[1]=u,e.ambient[2]=h,e.directional.length=f,e.spot.length=m,e.rectArea.length=g,e.point.length=d,e.hemi.length=p,e.hash.stateID=e.id,e.hash.directionalLength=f,e.hash.pointLength=d,e.hash.spotLength=m,e.hash.rectAreaLength=g,e.hash.hemiLength=p,e.hash.shadowsLength=o.length}return{setup:a,state:e}}function tf(){var t=new Gw,e=[],n=[];function i(){e.length=0,n.length=0}function r(l){e.push(l)}function a(l){n.push(l)}function s(l){t.setup(e,n,l)}var o={lightsArray:e,shadowsArray:n,lights:t};return{init:i,state:o,setupLights:s,pushLight:r,pushShadow:a}}function kw(){var t={};function e(i,r){var a;return t[i.id]===void 0?(a=new tf,t[i.id]={},t[i.id][r.id]=a):t[i.id][r.id]===void 0?(a=new tf,t[i.id][r.id]=a):a=t[i.id][r.id],a}function n(){t={}}return{get:e,dispose:n}}function Yi(t){nt.call(this),this.type="MeshDepthMaterial",this.depthPacking=b_,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(t)}Yi.prototype=Object.create(nt.prototype);Yi.prototype.constructor=Yi;Yi.prototype.isMeshDepthMaterial=!0;Yi.prototype.copy=function(t){return nt.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this};function $i(t){nt.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new C,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.lights=!1,this.setValues(t)}$i.prototype=Object.create(nt.prototype);$i.prototype.constructor=$i;$i.prototype.isMeshDistanceMaterial=!0;$i.prototype.copy=function(t){return nt.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};function Ld(t,e,n){for(var i=new ou,r=new Ye,a=new le,s=new le(n,n),o=new C,l=new C,c=1,u=2,h=(c|u)+1,f=new Array(h),d=new Array(h),m={},g={0:Vt,1:ds,2:er},p=[new C(1,0,0),new C(-1,0,0),new C(0,0,1),new C(0,0,-1),new C(0,1,0),new C(0,-1,0)],v=[new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,0,1),new C(0,0,-1)],_=[new mt,new mt,new mt,new mt,new mt,new mt],x=0;x!==h;++x){var y=(x&c)!==0,M=(x&u)!==0,T=new Yi({depthPacking:M_,morphTargets:y,skinning:M});f[x]=T;var L=new $i({morphTargets:y,skinning:M});d[x]=L}var b=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=td,this.render=function(N,J,k){if(b.enabled!==!1&&!(b.autoUpdate===!1&&b.needsUpdate===!1)&&N.length!==0){t.context;var G=t.state;G.disable(3042),G.buffers.color.setClear(1,1,1,1),G.buffers.depth.setTest(!0),G.setScissorTest(!1);for(var H,z=0,Z=N.length;z<Z;z++){var w=N[z],R=w.shadow,V=w&&w.isPointLight;if(R===void 0){console.warn("THREE.WebGLShadowMap:",w,"has no shadow.");continue}var F=R.camera;if(a.copy(R.mapSize),a.min(s),V){var O=a.x,ee=a.y;_[0].set(O*2,ee,O,ee),_[1].set(0,ee,O,ee),_[2].set(O*3,ee,O,ee),_[3].set(O,ee,O,ee),_[4].set(O*3,0,O,ee),_[5].set(O,0,O,ee),a.x*=4,a.y*=2}if(R.map===null){var W={minFilter:en,magFilter:en,format:Si};R.map=new Ir(a.x,a.y,W),R.map.texture.name=w.name+".shadowMap",F.updateProjectionMatrix()}R.isSpotLightShadow&&R.update(w);var se=R.map,Y=R.matrix;l.setFromMatrixPosition(w.matrixWorld),F.position.copy(l),V?(H=6,Y.makeTranslation(-l.x,-l.y,-l.z)):(H=1,o.setFromMatrixPosition(w.target.matrixWorld),F.lookAt(o),F.updateMatrixWorld(),Y.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),Y.multiply(F.projectionMatrix),Y.multiply(F.matrixWorldInverse)),t.setRenderTarget(se),t.clear();for(var re=0;re<H;re++){if(V){o.copy(F.position),o.add(p[re]),F.up.copy(v[re]),F.lookAt(o),F.updateMatrixWorld();var ae=_[re];G.viewport(ae)}r.multiplyMatrices(F.projectionMatrix,F.matrixWorldInverse),i.setFromMatrix(r),D(J,k,F,V)}}b.needsUpdate=!1}};function S(N,J,k,G,H,z){var Z=N.geometry,w=null,R=f,V=N.customDepthMaterial;if(k&&(R=d,V=N.customDistanceMaterial),V)w=V;else{var F=!1;J.morphTargets&&(Z&&Z.isBufferGeometry?F=Z.morphAttributes&&Z.morphAttributes.position&&Z.morphAttributes.position.length>0:Z&&Z.isGeometry&&(F=Z.morphTargets&&Z.morphTargets.length>0)),N.isSkinnedMesh&&J.skinning===!1&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",N);var O=N.isSkinnedMesh&&J.skinning,ee=0;F&&(ee|=c),O&&(ee|=u),w=R[ee]}if(t.localClippingEnabled&&J.clipShadows===!0&&J.clippingPlanes.length!==0){var W=w.uuid,se=J.uuid,Y=m[W];Y===void 0&&(Y={},m[W]=Y);var re=Y[se];re===void 0&&(re=w.clone(),Y[se]=re),w=re}return w.visible=J.visible,w.wireframe=J.wireframe,w.side=J.shadowSide!=null?J.shadowSide:g[J.side],w.clipShadows=J.clipShadows,w.clippingPlanes=J.clippingPlanes,w.clipIntersection=J.clipIntersection,w.wireframeLinewidth=J.wireframeLinewidth,w.linewidth=J.linewidth,k&&w.isMeshDistanceMaterial&&(w.referencePosition.copy(G),w.nearDistance=H,w.farDistance=z),w}function D(N,J,k,G){if(N.visible!==!1){var H=N.layers.test(J.layers);if(H&&(N.isMesh||N.isLine||N.isPoints)&&N.castShadow&&(!N.frustumCulled||i.intersectsObject(N))){N.modelViewMatrix.multiplyMatrices(k.matrixWorldInverse,N.matrixWorld);var z=e.update(N),Z=N.material;if(Array.isArray(Z))for(var w=z.groups,R=0,V=w.length;R<V;R++){var F=w[R],O=Z[F.materialIndex];if(O&&O.visible){var ee=S(N,O,G,l,k.near,k.far);t.renderBufferDirect(k,null,z,ee,N,F)}}else if(Z.visible){var ee=S(N,Z,G,l,k.near,k.far);t.renderBufferDirect(k,null,z,ee,N,null)}}for(var W=N.children,se=0,Y=W.length;se<Y;se++)D(W[se],J,k,G)}}}function Vw(t,e,n,i){function r(){var j=!1,oe=new mt,K=null,Me=new mt(0,0,0,0);return{setMask:function(pe){K!==pe&&!j&&(t.colorMask(pe,pe,pe,pe),K=pe)},setLocked:function(pe){j=pe},setClear:function(pe,xe,Le,Se,Je){Je===!0&&(pe*=Se,xe*=Se,Le*=Se),oe.set(pe,xe,Le,Se),Me.equals(oe)===!1&&(t.clearColor(pe,xe,Le,Se),Me.copy(oe))},reset:function(){j=!1,K=null,Me.set(-1,0,0,0)}}}function a(){var j=!1,oe=null,K=null,Me=null;return{setTest:function(pe){pe?ue(2929):X(2929)},setMask:function(pe){oe!==pe&&!j&&(t.depthMask(pe),oe=pe)},setFunc:function(pe){if(K!==pe){if(pe)switch(pe){case Ax:t.depthFunc(512);break;case Lx:t.depthFunc(519);break;case Cx:t.depthFunc(513);break;case rc:t.depthFunc(515);break;case Px:t.depthFunc(514);break;case Rx:t.depthFunc(518);break;case Dx:t.depthFunc(516);break;case Ix:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);K=pe}},setLocked:function(pe){j=pe},setClear:function(pe){Me!==pe&&(t.clearDepth(pe),Me=pe)},reset:function(){j=!1,oe=null,K=null,Me=null}}}function s(){var j=!1,oe=null,K=null,Me=null,pe=null,xe=null,Le=null,Se=null,Je=null;return{setTest:function(qe){qe?ue(2960):X(2960)},setMask:function(qe){oe!==qe&&!j&&(t.stencilMask(qe),oe=qe)},setFunc:function(qe,ht,Q){(K!==qe||Me!==ht||pe!==Q)&&(t.stencilFunc(qe,ht,Q),K=qe,Me=ht,pe=Q)},setOp:function(qe,ht,Q){(xe!==qe||Le!==ht||Se!==Q)&&(t.stencilOp(qe,ht,Q),xe=qe,Le=ht,Se=Q)},setLocked:function(qe){j=qe},setClear:function(qe){Je!==qe&&(t.clearStencil(qe),Je=qe)},reset:function(){j=!1,oe=null,K=null,Me=null,pe=null,xe=null,Le=null,Se=null,Je=null}}}var o=new r,l=new a,c=new s,u=t.getParameter(34921),h=new Uint8Array(u),f=new Uint8Array(u),d=new Uint8Array(u),m={},g=null,p=null,v=null,_=null,x=null,y=null,M=null,T=null,L=null,b=null,S=!1,D=null,N=null,J=null,k=null,G=null,H=t.getParameter(35661),z=!1,Z=0,w=t.getParameter(7938);w.indexOf("WebGL")!==-1?(Z=parseFloat(/^WebGL\ ([0-9])/.exec(w)[1]),z=Z>=1):w.indexOf("OpenGL ES")!==-1&&(Z=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(w)[1]),z=Z>=2);var R=null,V={},F=new mt,O=new mt;function ee(j,oe,K){var Me=new Uint8Array(4),pe=t.createTexture();t.bindTexture(j,pe),t.texParameteri(j,10241,9728),t.texParameteri(j,10240,9728);for(var xe=0;xe<K;xe++)t.texImage2D(oe+xe,0,6408,1,1,0,6408,5121,Me);return pe}var W={};W[3553]=ee(3553,3553,1),W[34067]=ee(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ue(2929),l.setFunc(rc),Ve(!1),Xe(Fh),ue(2884),ye(Xs);function se(){for(var j=0,oe=h.length;j<oe;j++)h[j]=0}function Y(j){re(j,0)}function re(j,oe){if(h[j]=1,f[j]===0&&(t.enableVertexAttribArray(j),f[j]=1),d[j]!==oe){var K=i.isWebGL2?t:e.get("ANGLE_instanced_arrays");K[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](j,oe),d[j]=oe}}function ae(){for(var j=0,oe=f.length;j!==oe;++j)f[j]!==h[j]&&(t.disableVertexAttribArray(j),f[j]=0)}function ue(j){m[j]!==!0&&(t.enable(j),m[j]=!0)}function X(j){m[j]!==!1&&(t.disable(j),m[j]=!1)}function ve(){if(g===null&&(g=[],e.get("WEBGL_compressed_texture_pvrtc")||e.get("WEBGL_compressed_texture_s3tc")||e.get("WEBGL_compressed_texture_etc1")||e.get("WEBGL_compressed_texture_astc")))for(var j=t.getParameter(34467),oe=0;oe<j.length;oe++)g.push(j[oe]);return g}function be(j){return p!==j?(t.useProgram(j),p=j,!0):!1}function ye(j,oe,K,Me,pe,xe,Le,Se){if(j===Xs){v&&(X(3042),v=!1);return}if(v||(ue(3042),v=!0),j!==ad){if(j!==_||Se!==S){if((x!==xr||T!==xr)&&(t.blendEquation(32774),x=xr,T=xr),Se)switch(j){case Sr:t.blendFuncSeparate(1,771,1,771);break;case tc:t.blendFunc(1,1);break;case nc:t.blendFuncSeparate(0,0,769,771);break;case ic:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",j);break}else switch(j){case Sr:t.blendFuncSeparate(770,771,1,771);break;case tc:t.blendFunc(770,1);break;case nc:t.blendFunc(0,769);break;case ic:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",j);break}y=null,M=null,L=null,b=null,_=j,S=Se}return}pe=pe||oe,xe=xe||K,Le=Le||Me,(oe!==x||pe!==T)&&(t.blendEquationSeparate(n.convert(oe),n.convert(pe)),x=oe,T=pe),(K!==y||Me!==M||xe!==L||Le!==b)&&(t.blendFuncSeparate(n.convert(K),n.convert(Me),n.convert(xe),n.convert(Le)),y=K,M=Me,L=xe,b=Le),_=j,S=null}function te(j,oe){j.side===er?X(2884):ue(2884);var K=j.side===Vt;oe&&(K=!K),Ve(K),j.blending===Sr&&j.transparent===!1?ye(Xs):ye(j.blending,j.blendEquation,j.blendSrc,j.blendDst,j.blendEquationAlpha,j.blendSrcAlpha,j.blendDstAlpha,j.premultipliedAlpha),l.setFunc(j.depthFunc),l.setTest(j.depthTest),l.setMask(j.depthWrite),o.setMask(j.colorWrite),ke(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits)}function Ve(j){D!==j&&(j?t.frontFace(2304):t.frontFace(2305),D=j)}function Xe(j){j!==dx?(ue(2884),j!==N&&(j===Fh?t.cullFace(1029):j===px?t.cullFace(1028):t.cullFace(1032))):X(2884),N=j}function ie(j){j!==J&&(z&&t.lineWidth(j),J=j)}function ke(j,oe,K){j?(ue(32823),(k!==oe||G!==K)&&(t.polygonOffset(oe,K),k=oe,G=K)):X(32823)}function Fe(j){j?ue(3089):X(3089)}function $e(j){j===void 0&&(j=33984+H-1),R!==j&&(t.activeTexture(j),R=j)}function Ke(j,oe){R===null&&$e();var K=V[R];K===void 0&&(K={type:void 0,texture:void 0},V[R]=K),(K.type!==j||K.texture!==oe)&&(t.bindTexture(j,oe||W[j]),K.type=j,K.texture=oe)}function B(){try{t.compressedTexImage2D.apply(t,arguments)}catch(j){console.error("THREE.WebGLState:",j)}}function I(){try{t.texImage2D.apply(t,arguments)}catch(j){console.error("THREE.WebGLState:",j)}}function ce(){try{t.texImage3D.apply(t,arguments)}catch(j){console.error("THREE.WebGLState:",j)}}function ge(j){F.equals(j)===!1&&(t.scissor(j.x,j.y,j.z,j.w),F.copy(j))}function de(j){O.equals(j)===!1&&(t.viewport(j.x,j.y,j.z,j.w),O.copy(j))}function q(){for(var j=0;j<f.length;j++)f[j]===1&&(t.disableVertexAttribArray(j),f[j]=0);m={},g=null,R=null,V={},p=null,_=null,D=null,N=null,o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},initAttributes:se,enableAttribute:Y,enableAttributeAndDivisor:re,disableUnusedAttributes:ae,enable:ue,disable:X,getCompressedTextureFormats:ve,useProgram:be,setBlending:ye,setMaterial:te,setFlipSided:Ve,setCullFace:Xe,setLineWidth:ie,setPolygonOffset:ke,setScissorTest:Fe,activeTexture:$e,bindTexture:Ke,compressedTexImage2D:B,texImage2D:I,texImage3D:ce,scissor:ge,viewport:de,reset:q}}function Hw(t,e,n,i,r,a,s){var o={},l;function c(w,R){if(w.width>R||w.height>R){if("data"in w){console.warn("THREE.WebGLRenderer: image in DataTexture is too big ("+w.width+"x"+w.height+").");return}var V=R/Math.max(w.width,w.height),F=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");F.width=Math.floor(w.width*V),F.height=Math.floor(w.height*V);var O=F.getContext("2d");return O.drawImage(w,0,0,w.width,w.height,0,0,F.width,F.height),console.warn("THREE.WebGLRenderer: image is too big ("+w.width+"x"+w.height+"). Resized to "+F.width+"x"+F.height),F}return w}function u(w){return it.isPowerOfTwo(w.width)&&it.isPowerOfTwo(w.height)}function h(w){if(w instanceof HTMLImageElement||w instanceof HTMLCanvasElement||w instanceof ImageBitmap){l===void 0&&(l=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),l.width=it.floorPowerOfTwo(w.width),l.height=it.floorPowerOfTwo(w.height);var R=l.getContext("2d");return R.drawImage(w,0,0,l.width,l.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+w.width+"x"+w.height+"). Resized to "+l.width+"x"+l.height),l}return w}function f(w){return r.isWebGL2?!1:w.wrapS!==Mn||w.wrapT!==Mn||w.minFilter!==en&&w.minFilter!==Yt}function d(w,R){return w.generateMipmaps&&R&&w.minFilter!==en&&w.minFilter!==Yt}function m(w,R,V,F){t.generateMipmap(w);var O=i.get(R);O.__maxMipLevel=Math.log(Math.max(V,F))*Math.LOG2E}function g(w,R){if(!r.isWebGL2)return w;if(w===6403){if(R===5126)return 33326;if(R===5131)return 33325;if(R===5121)return 33321}if(w===6407){if(R===5126)return 34837;if(R===5131)return 34843;if(R===5121)return 32849}if(w===6408){if(R===5126)return 34836;if(R===5131)return 34842;if(R===5121)return 32856}return w}function p(w){return w===en||w===iu||w===ru?9728:9729}function v(w){var R=w.target;R.removeEventListener("dispose",v),x(R),R.isVideoTexture&&delete o[R.id],s.memory.textures--}function _(w){var R=w.target;R.removeEventListener("dispose",_),y(R),s.memory.textures--}function x(w){var R=i.get(w);if(w.image&&R.__image__webglTextureCube)t.deleteTexture(R.__image__webglTextureCube);else{if(R.__webglInit===void 0)return;t.deleteTexture(R.__webglTexture)}i.remove(w)}function y(w){var R=i.get(w),V=i.get(w.texture);if(!!w){if(V.__webglTexture!==void 0&&t.deleteTexture(V.__webglTexture),w.depthTexture&&w.depthTexture.dispose(),w.isWebGLRenderTargetCube)for(var F=0;F<6;F++)t.deleteFramebuffer(R.__webglFramebuffer[F]),R.__webglDepthbuffer&&t.deleteRenderbuffer(R.__webglDepthbuffer[F]);else t.deleteFramebuffer(R.__webglFramebuffer),R.__webglDepthbuffer&&t.deleteRenderbuffer(R.__webglDepthbuffer);i.remove(w.texture),i.remove(w)}}function M(w,R){var V=i.get(w);if(w.isVideoTexture&&Z(w),w.version>0&&V.__version!==w.version){var F=w.image;if(F===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(F.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{D(V,w,R);return}}n.activeTexture(33984+R),n.bindTexture(3553,V.__webglTexture)}function T(w,R){var V=i.get(w);if(w.version>0&&V.__version!==w.version){D(V,w,R);return}n.activeTexture(33984+R),n.bindTexture(32879,V.__webglTexture)}function L(w,R){var V=i.get(w);if(w.image.length===6)if(w.version>0&&V.__version!==w.version){V.__image__webglTextureCube||(w.addEventListener("dispose",v),V.__image__webglTextureCube=t.createTexture(),s.memory.textures++),n.activeTexture(33984+R),n.bindTexture(34067,V.__image__webglTextureCube),t.pixelStorei(37440,w.flipY);for(var F=w&&w.isCompressedTexture,O=w.image[0]&&w.image[0].isDataTexture,ee=[],W=0;W<6;W++)!F&&!O?ee[W]=c(w.image[W],r.maxCubemapSize):ee[W]=O?w.image[W].image:w.image[W];var se=ee[0],Y=u(se),re=a.convert(w.format),ae=a.convert(w.type),ue=g(re,ae);S(34067,w,Y);for(var W=0;W<6;W++)if(!F)O?n.texImage2D(34069+W,0,ue,ee[W].width,ee[W].height,0,re,ae,ee[W].data):n.texImage2D(34069+W,0,ue,re,ae,ee[W]);else for(var X,ve=ee[W].mipmaps,be=0,ye=ve.length;be<ye;be++)X=ve[be],w.format!==Si&&w.format!==Rr?n.getCompressedTextureFormats().indexOf(re)>-1?n.compressedTexImage2D(34069+W,be,ue,X.width,X.height,0,X.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+W,be,ue,X.width,X.height,0,re,ae,X.data);F?V.__maxMipLevel=ve.length-1:V.__maxMipLevel=0,d(w,Y)&&m(34067,w,se.width,se.height),V.__version=w.version,w.onUpdate&&w.onUpdate(w)}else n.activeTexture(33984+R),n.bindTexture(34067,V.__image__webglTextureCube)}function b(w,R){n.activeTexture(33984+R),n.bindTexture(34067,i.get(w).__webglTexture)}function S(w,R,V){var F;if(V?(t.texParameteri(w,10242,a.convert(R.wrapS)),t.texParameteri(w,10243,a.convert(R.wrapT)),t.texParameteri(w,10240,a.convert(R.magFilter)),t.texParameteri(w,10241,a.convert(R.minFilter))):(t.texParameteri(w,10242,33071),t.texParameteri(w,10243,33071),(R.wrapS!==Mn||R.wrapT!==Mn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(w,10240,p(R.magFilter)),t.texParameteri(w,10241,p(R.minFilter)),R.minFilter!==en&&R.minFilter!==Yt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),F=e.get("EXT_texture_filter_anisotropic"),F){if(R.type===Ma&&e.get("OES_texture_float_linear")===null||R.type===su&&(r.isWebGL2||e.get("OES_texture_half_float_linear"))===null)return;(R.anisotropy>1||i.get(R).__currentAnisotropy)&&(t.texParameterf(w,F.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,r.getMaxAnisotropy())),i.get(R).__currentAnisotropy=R.anisotropy)}}function D(w,R,V){var F;R.isDataTexture3D?F=32879:F=3553,w.__webglInit===void 0&&(w.__webglInit=!0,R.addEventListener("dispose",v),w.__webglTexture=t.createTexture(),s.memory.textures++),n.activeTexture(33984+V),n.bindTexture(F,w.__webglTexture),t.pixelStorei(37440,R.flipY),t.pixelStorei(37441,R.premultiplyAlpha),t.pixelStorei(3317,R.unpackAlignment);var O=c(R.image,r.maxTextureSize);f(R)&&u(O)===!1&&(O=h(O));var ee=u(O),W=a.convert(R.format),se=a.convert(R.type),Y=g(W,se);S(F,R,ee);var re,ae=R.mipmaps;if(R.isDepthTexture){if(Y=6402,R.type===Ma){if(!r.isWebGL2)throw new Error("Float Depth Texture only supported in WebGL2.0");Y=36012}else r.isWebGL2&&(Y=33189);R.format===Er&&Y===6402&&R.type!==Js&&R.type!==fd&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),R.type=Js,se=a.convert(R.type)),R.format===wa&&(Y=34041,R.type!==Qs&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),R.type=Qs,se=a.convert(R.type))),n.texImage2D(3553,0,Y,O.width,O.height,0,W,se,null)}else if(R.isDataTexture)if(ae.length>0&&ee){for(var ue=0,X=ae.length;ue<X;ue++)re=ae[ue],n.texImage2D(3553,ue,Y,re.width,re.height,0,W,se,re.data);R.generateMipmaps=!1,w.__maxMipLevel=ae.length-1}else n.texImage2D(3553,0,Y,O.width,O.height,0,W,se,O.data),w.__maxMipLevel=0;else if(R.isCompressedTexture){for(var ue=0,X=ae.length;ue<X;ue++)re=ae[ue],R.format!==Si&&R.format!==Rr?n.getCompressedTextureFormats().indexOf(W)>-1?n.compressedTexImage2D(3553,ue,Y,re.width,re.height,0,re.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,ue,Y,re.width,re.height,0,W,se,re.data);w.__maxMipLevel=ae.length-1}else if(R.isDataTexture3D)n.texImage3D(32879,0,Y,O.width,O.height,O.depth,0,W,se,O.data),w.__maxMipLevel=0;else if(ae.length>0&&ee){for(var ue=0,X=ae.length;ue<X;ue++)re=ae[ue],n.texImage2D(3553,ue,Y,W,se,re);R.generateMipmaps=!1,w.__maxMipLevel=ae.length-1}else n.texImage2D(3553,0,Y,W,se,O),w.__maxMipLevel=0;d(R,ee)&&m(3553,R,O.width,O.height),w.__version=R.version,R.onUpdate&&R.onUpdate(R)}function N(w,R,V,F){var O=a.convert(R.texture.format),ee=a.convert(R.texture.type),W=g(O,ee);n.texImage2D(F,0,W,R.width,R.height,0,O,ee,null),t.bindFramebuffer(36160,w),t.framebufferTexture2D(36160,V,F,i.get(R.texture).__webglTexture,0),t.bindFramebuffer(36160,null)}function J(w,R){t.bindRenderbuffer(36161,w),R.depthBuffer&&!R.stencilBuffer?(t.renderbufferStorage(36161,33189,R.width,R.height),t.framebufferRenderbuffer(36160,36096,36161,w)):R.depthBuffer&&R.stencilBuffer?(t.renderbufferStorage(36161,34041,R.width,R.height),t.framebufferRenderbuffer(36160,33306,36161,w)):t.renderbufferStorage(36161,32854,R.width,R.height),t.bindRenderbuffer(36161,null)}function k(w,R){var V=R&&R.isWebGLRenderTargetCube;if(V)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,w),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(R.depthTexture).__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),M(R.depthTexture,0);var F=i.get(R.depthTexture).__webglTexture;if(R.depthTexture.format===Er)t.framebufferTexture2D(36160,36096,3553,F,0);else if(R.depthTexture.format===wa)t.framebufferTexture2D(36160,33306,3553,F,0);else throw new Error("Unknown depthTexture format")}function G(w){var R=i.get(w),V=w.isWebGLRenderTargetCube===!0;if(w.depthTexture){if(V)throw new Error("target.depthTexture not supported in Cube render targets");k(R.__webglFramebuffer,w)}else if(V){R.__webglDepthbuffer=[];for(var F=0;F<6;F++)t.bindFramebuffer(36160,R.__webglFramebuffer[F]),R.__webglDepthbuffer[F]=t.createRenderbuffer(),J(R.__webglDepthbuffer[F],w)}else t.bindFramebuffer(36160,R.__webglFramebuffer),R.__webglDepthbuffer=t.createRenderbuffer(),J(R.__webglDepthbuffer,w);t.bindFramebuffer(36160,null)}function H(w){var R=i.get(w),V=i.get(w.texture);w.addEventListener("dispose",_),V.__webglTexture=t.createTexture(),s.memory.textures++;var F=w.isWebGLRenderTargetCube===!0,O=u(w);if(F){R.__webglFramebuffer=[];for(var ee=0;ee<6;ee++)R.__webglFramebuffer[ee]=t.createFramebuffer()}else R.__webglFramebuffer=t.createFramebuffer();if(F){n.bindTexture(34067,V.__webglTexture),S(34067,w.texture,O);for(var ee=0;ee<6;ee++)N(R.__webglFramebuffer[ee],w,36064,34069+ee);d(w.texture,O)&&m(34067,w.texture,w.width,w.height),n.bindTexture(34067,null)}else n.bindTexture(3553,V.__webglTexture),S(3553,w.texture,O),N(R.__webglFramebuffer,w,36064,3553),d(w.texture,O)&&m(3553,w.texture,w.width,w.height),n.bindTexture(3553,null);w.depthBuffer&&G(w)}function z(w){var R=w.texture,V=u(w);if(d(R,V)){var F=w.isWebGLRenderTargetCube?34067:3553,O=i.get(R).__webglTexture;n.bindTexture(F,O),m(F,R,w.width,w.height),n.bindTexture(F,null)}}function Z(w){var R=w.id,V=s.render.frame;o[R]!==V&&(o[R]=V,w.update())}this.setTexture2D=M,this.setTexture3D=T,this.setTextureCube=L,this.setTextureCubeDynamic=b,this.setupRenderTarget=H,this.updateRenderTargetMipmap=z}function Ww(t,e,n){function i(r){var a;if(r===yi)return 10497;if(r===Mn)return 33071;if(r===Pr)return 33648;if(r===en)return 9728;if(r===iu)return 9984;if(r===ru)return 9986;if(r===Yt)return 9729;if(r===hd)return 9985;if(r===Xo)return 9987;if(r===au)return 5121;if(r===Hx)return 32819;if(r===Wx)return 32820;if(r===jx)return 33635;if(r===Gx)return 5120;if(r===kx)return 5122;if(r===Js)return 5123;if(r===Vx)return 5124;if(r===fd)return 5125;if(r===Ma)return 5126;if(r===su){if(n.isWebGL2)return 5131;if(a=e.get("OES_texture_half_float"),a!==null)return a.HALF_FLOAT_OES}if(r===Xx)return 6406;if(r===Rr)return 6407;if(r===Si)return 6408;if(r===qx)return 6409;if(r===Yx)return 6410;if(r===Er)return 6402;if(r===wa)return 34041;if(r===$x)return 6403;if(r===xr)return 32774;if(r===gx)return 32778;if(r===vx)return 32779;if(r===yx)return 0;if(r===xx)return 1;if(r===_x)return 768;if(r===bx)return 769;if(r===sd)return 770;if(r===od)return 771;if(r===Mx)return 772;if(r===wx)return 773;if(r===Sx)return 774;if(r===Ex)return 775;if(r===Tx)return 776;if((r===Nh||r===zh||r===Uh||r===Bh)&&(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null)){if(r===Nh)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===zh)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Uh)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Bh)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((r===Gh||r===kh||r===Vh||r===Hh)&&(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null)){if(r===Gh)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===kh)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Vh)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Hh)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(r===Zx&&(a=e.get("WEBGL_compressed_texture_etc1"),a!==null))return a.COMPRESSED_RGB_ETC1_WEBGL;if((r===Jx||r===Qx||r===Kx||r===e_||r===t_||r===n_||r===i_||r===r_||r===a_||r===s_||r===o_||r===l_||r===c_||r===u_)&&(a=e.get("WEBGL_compressed_texture_astc"),a!==null))return r;if(r===Nl||r===zl){if(n.isWebGL2){if(r===Nl)return 32775;if(r===zl)return 32776}if(a=e.get("EXT_blend_minmax"),a!==null){if(r===Nl)return a.MIN_EXT;if(r===zl)return a.MAX_EXT}}if(r===Qs){if(n.isWebGL2)return 34042;if(a=e.get("WEBGL_depth_texture"),a!==null)return a.UNSIGNED_INT_24_8_WEBGL}return 0}return{convert:i}}function Ca(){Ee.call(this),this.type="Group"}Ca.prototype=Object.assign(Object.create(Ee.prototype),{constructor:Ca,isGroup:!0});function Hn(){Ee.call(this),this.type="Camera",this.matrixWorldInverse=new Ye,this.projectionMatrix=new Ye,this.projectionMatrixInverse=new Ye}Hn.prototype=Object.assign(Object.create(Ee.prototype),{constructor:Hn,isCamera:!0,copy:function(t,e){return Ee.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){t===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new C),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){Ee.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return new this.constructor().copy(this)}});function Et(t,e,n,i){Hn.call(this),this.type="PerspectiveCamera",this.fov=t!==void 0?t:50,this.zoom=1,this.near=n!==void 0?n:.1,this.far=i!==void 0?i:2e3,this.focus=10,this.aspect=e!==void 0?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}Et.prototype=Object.assign(Object.create(Hn.prototype),{constructor:Et,isPerspectiveCamera:!0,copy:function(t,e){return Hn.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){var e=.5*this.getFilmHeight()/t;this.fov=it.RAD2DEG*2*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var t=Math.tan(it.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/t},getEffectiveFOV:function(){return it.RAD2DEG*2*Math.atan(Math.tan(it.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,r,a){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Math.tan(it.DEG2RAD*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i,a=this.view;if(this.view!==null&&this.view.enabled){var s=a.fullWidth,o=a.fullHeight;r+=a.offsetX*i/s,e-=a.offsetY*n/o,i*=a.width/s,n*=a.height/o}var l=this.filmOffset;l!==0&&(r+=t*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=Ee.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});function ao(t){Et.call(this),this.cameras=t||[]}ao.prototype=Object.assign(Object.create(Et.prototype),{constructor:ao,isArrayCamera:!0});var nf=new C,rf=new C;function Cd(t,e,n){nf.setFromMatrixPosition(e.matrixWorld),rf.setFromMatrixPosition(n.matrixWorld);var i=nf.distanceTo(rf),r=e.projectionMatrix.elements,a=n.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],u=(r[8]-1)/r[0],h=(a[8]+1)/a[0],f=s*u,d=s*h,m=i/(-u+h),g=m*-u;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(g),t.translateZ(m),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.getInverse(t.matrixWorld);var p=s+m,v=o+m,_=f-g,x=d+(i-g),y=l*o/v*p,M=c*o/v*p;t.projectionMatrix.makePerspective(_,x,y,M,p,v)}function Pd(t){var e=this,n=null,i=null,r=null,a=[],s=new Ye,o=new Ye,l=1,c="stage";typeof window!="undefined"&&"VRFrameData"in window&&(i=new window.VRFrameData,window.addEventListener("vrdisplaypresentchange",x,!1));var u=new Ye,h=new ct,f=new C,d=new Et;d.bounds=new mt(0,0,.5,1),d.layers.enable(1);var m=new Et;m.bounds=new mt(.5,0,.5,1),m.layers.enable(2);var g=new ao([d,m]);g.layers.enable(1),g.layers.enable(2);function p(){return n!==null&&n.isPresenting===!0}var v,_;function x(){if(p()){var b=n.getEyeParameters("left"),S=b.renderWidth*l,D=b.renderHeight*l;_=t.getPixelRatio(),v=t.getSize(),t.setDrawingBufferSize(S*2,D,1),L.start()}else e.enabled&&t.setDrawingBufferSize(v.width,v.height,_),L.stop()}var y=[];function M(b){for(var S=navigator.getGamepads&&navigator.getGamepads(),D=0,N=0,J=S.length;D<J;D++){var k=S[D];if(k&&(k.id==="Daydream Controller"||k.id==="Gear VR Controller"||k.id==="Oculus Go Controller"||k.id==="OpenVR Gamepad"||k.id.startsWith("Oculus Touch")||k.id.startsWith("Spatial Controller"))){if(N===b)return k;N++}}}function T(){for(var b=0;b<a.length;b++){var S=a[b],D=M(b);if(D!==void 0&&D.pose!==void 0){if(D.pose===null)return;var N=D.pose;N.hasPosition===!1&&S.position.set(.2,-.6,-.05),N.position!==null&&S.position.fromArray(N.position),N.orientation!==null&&S.quaternion.fromArray(N.orientation),S.matrix.compose(S.position,S.quaternion,S.scale),S.matrix.premultiply(s),S.matrix.decompose(S.position,S.quaternion,S.scale),S.matrixWorldNeedsUpdate=!0,S.visible=!0;var J=D.id==="Daydream Controller"?0:1;y[b]!==D.buttons[J].pressed&&(y[b]=D.buttons[J].pressed,y[b]===!0?S.dispatchEvent({type:"selectstart"}):(S.dispatchEvent({type:"selectend"}),S.dispatchEvent({type:"select"})))}else S.visible=!1}}this.enabled=!1,this.getController=function(b){var S=a[b];return S===void 0&&(S=new Ca,S.matrixAutoUpdate=!1,S.visible=!1,a[b]=S),S},this.getDevice=function(){return n},this.setDevice=function(b){b!==void 0&&(n=b),L.setContext(b)},this.setFramebufferScaleFactor=function(b){l=b},this.setFrameOfReferenceType=function(b){c=b},this.setPoseTarget=function(b){b!==void 0&&(r=b)},this.getCamera=function(b){var S=c==="stage"?1.6:0;if(n===null)return b.position.set(0,S,0),b;if(n.depthNear=b.near,n.depthFar=b.far,n.getFrameData(i),c==="stage"){var D=n.stageParameters;D?s.fromArray(D.sittingToStandingTransform):s.makeTranslation(0,S,0)}var N=i.pose,J=r!==null?r:b;if(J.matrix.copy(s),J.matrix.decompose(J.position,J.quaternion,J.scale),N.orientation!==null&&(h.fromArray(N.orientation),J.quaternion.multiply(h)),N.position!==null&&(h.setFromRotationMatrix(s),f.fromArray(N.position),f.applyQuaternion(h),J.position.add(f)),J.updateMatrixWorld(),n.isPresenting===!1)return b;d.near=b.near,m.near=b.near,d.far=b.far,m.far=b.far,d.matrixWorldInverse.fromArray(i.leftViewMatrix),m.matrixWorldInverse.fromArray(i.rightViewMatrix),o.getInverse(s),c==="stage"&&(d.matrixWorldInverse.multiply(o),m.matrixWorldInverse.multiply(o));var k=J.parent;k!==null&&(u.getInverse(k.matrixWorld),d.matrixWorldInverse.multiply(u),m.matrixWorldInverse.multiply(u)),d.matrixWorld.getInverse(d.matrixWorldInverse),m.matrixWorld.getInverse(m.matrixWorldInverse),d.projectionMatrix.fromArray(i.leftProjectionMatrix),m.projectionMatrix.fromArray(i.rightProjectionMatrix),Cd(g,d,m);var G=n.getLayers();if(G.length){var H=G[0];H.leftBounds!==null&&H.leftBounds.length===4&&d.bounds.fromArray(H.leftBounds),H.rightBounds!==null&&H.rightBounds.length===4&&m.bounds.fromArray(H.rightBounds)}return T(),g},this.getStandingMatrix=function(){return s},this.isPresenting=p;var L=new lu;this.setAnimationLoop=function(b){L.setAnimationLoop(b)},this.submitFrame=function(){p()&&n.submitFrame()},this.dispose=function(){typeof window!="undefined"&&window.removeEventListener("vrdisplaypresentchange",x)}}function jw(t){var e=t.context,n=null,i=null,r=1,a=null,s="stage",o=null,l=[],c=[];function u(){return i!==null&&a!==null}var h=new Et;h.layers.enable(1),h.viewport=new mt;var f=new Et;f.layers.enable(2),f.viewport=new mt;var d=new ao([h,f]);d.layers.enable(1),d.layers.enable(2),this.enabled=!1,this.getController=function(y){var M=l[y];return M===void 0&&(M=new Ca,M.matrixAutoUpdate=!1,M.visible=!1,l[y]=M),M},this.getDevice=function(){return n},this.setDevice=function(y){y!==void 0&&(n=y),y instanceof XRDevice&&e.setCompatibleXRDevice(y)};function m(y){var M=l[c.indexOf(y.inputSource)];M&&M.dispatchEvent({type:y.type})}function g(){t.setFramebuffer(null),x.stop()}this.setFramebufferScaleFactor=function(y){r=y},this.setFrameOfReferenceType=function(y){s=y},this.setSession=function(y){i=y,i!==null&&(i.addEventListener("select",m),i.addEventListener("selectstart",m),i.addEventListener("selectend",m),i.addEventListener("end",g),i.baseLayer=new XRWebGLLayer(i,e,{framebufferScaleFactor:r}),i.requestFrameOfReference(s).then(function(M){a=M,t.setFramebuffer(i.baseLayer.framebuffer),x.setContext(i),x.start()}),c=i.getInputSources(),i.addEventListener("inputsourceschange",function(){c=i.getInputSources(),console.log(c);for(var M=0;M<l.length;M++){var T=l[M];T.userData.inputSource=c[M]}}))};function p(y,M){M===null?y.matrixWorld.copy(y.matrix):y.matrixWorld.multiplyMatrices(M.matrixWorld,y.matrix),y.matrixWorldInverse.getInverse(y.matrixWorld)}this.getCamera=function(y){if(u()){var M=y.parent,T=d.cameras;p(d,M);for(var L=0;L<T.length;L++)p(T[L],M);y.matrixWorld.copy(d.matrixWorld);for(var b=y.children,L=0,S=b.length;L<S;L++)b[L].updateMatrixWorld(!0);return Cd(d,h,f),d}return y},this.isPresenting=u;var v=null;function _(y,M){if(o=M.getDevicePose(a),o!==null)for(var T=i.baseLayer,L=M.views,b=0;b<L.length;b++){var S=L[b],D=T.getViewport(S),N=o.getViewMatrix(S),J=d.cameras[b];J.matrix.fromArray(N).getInverse(J.matrix),J.projectionMatrix.fromArray(S.projectionMatrix),J.viewport.set(D.x,D.y,D.width,D.height),b===0&&d.matrix.copy(J.matrix)}for(var b=0;b<l.length;b++){var k=l[b],G=c[b];if(G){var H=M.getInputPose(G,a);if(H!==null){"targetRay"in H?k.matrix.elements=H.targetRay.transformMatrix:"pointerMatrix"in H&&(k.matrix.elements=H.pointerMatrix),k.matrix.decompose(k.position,k.rotation,k.scale),k.visible=!0;continue}}k.visible=!1}v&&v(y)}var x=new lu;x.setAnimationLoop(_),this.setAnimationLoop=function(y){v=y},this.dispose=function(){},this.getStandingMatrix=function(){return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."),new THREE.Matrix4},this.submitFrame=function(){}}function Rd(t){console.log("THREE.WebGLRenderer",fx),t=t||{};var e=t.canvas!==void 0?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=t.context!==void 0?t.context:null,i=t.alpha!==void 0?t.alpha:!1,r=t.depth!==void 0?t.depth:!0,a=t.stencil!==void 0?t.stencil:!0,s=t.antialias!==void 0?t.antialias:!1,o=t.premultipliedAlpha!==void 0?t.premultipliedAlpha:!0,l=t.preserveDrawingBuffer!==void 0?t.preserveDrawingBuffer:!1,c=t.powerPreference!==void 0?t.powerPreference:"default",u=null,h=null;this.domElement=e,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=ld,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var f=this,d=!1,m=null,g=null,p=null,v=-1,_={geometry:null,program:null,wireframe:!1},x=null,y=null,M=new mt,T=new mt,L=null,b=0,S=e.width,D=e.height,N=1,J=new mt(0,0,S,D),k=new mt(0,0,S,D),G=!1,H=new ou,z=new jM,Z=!1,w=!1,R=new Ye,V=new C;function F(){return g===null?N:1}var O;try{var ee={alpha:i,depth:r,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c};if(e.addEventListener("webglcontextlost",ce,!1),e.addEventListener("webglcontextrestored",ge,!1),O=n||e.getContext("webgl",ee)||e.getContext("experimental-webgl",ee),O===null)throw e.getContext("webgl")!==null?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");O.getShaderPrecisionFormat===void 0&&(O.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(E){console.error("THREE.WebGLRenderer: "+E.message)}var W,se,Y,re,ae,ue,X,ve,be,ye,te,Ve,Xe,ie,ke,Fe,$e;function Ke(){W=new XM(O),se=new WM(O,W,t),se.isWebGL2||(W.get("WEBGL_depth_texture"),W.get("OES_texture_float"),W.get("OES_texture_half_float"),W.get("OES_texture_half_float_linear"),W.get("OES_standard_derivatives"),W.get("OES_element_index_uint"),W.get("ANGLE_instanced_arrays")),W.get("OES_texture_float_linear"),$e=new Ww(O,W,se),Y=new Vw(O,W,$e,se),Y.scissor(T.copy(k).multiplyScalar(N)),Y.viewport(M.copy(J).multiplyScalar(N)),re=new $M,ae=new Ow,ue=new Hw(O,W,Y,ae,se,$e,re),X=new zM(O),ve=new qM(O,X,re),be=new QM(ve,re),ie=new JM(O),ye=new Iw(f,W,se),te=new zw,Ve=new kw,Xe=new VM(f,Y,be,o),ke=new HM(O,W,re,se),Fe=new YM(O,W,re,se),re.programs=ye.programs,f.context=O,f.capabilities=se,f.extensions=W,f.properties=ae,f.renderLists=te,f.state=Y,f.info=re}Ke();var B=null;typeof navigator!="undefined"&&(B="xr"in navigator?new jw(f):new Pd(f)),this.vr=B;var I=new Ld(f,be,se.maxTextureSize);this.shadowMap=I,this.getContext=function(){return O},this.getContextAttributes=function(){return O.getContextAttributes()},this.forceContextLoss=function(){var E=W.get("WEBGL_lose_context");E&&E.loseContext()},this.forceContextRestore=function(){var E=W.get("WEBGL_lose_context");E&&E.restoreContext()},this.getPixelRatio=function(){return N},this.setPixelRatio=function(E){E!==void 0&&(N=E,this.setSize(S,D,!1))},this.getSize=function(){return{width:S,height:D}},this.setSize=function(E,A,P){if(B.isPresenting()){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}S=E,D=A,e.width=E*N,e.height=A*N,P!==!1&&(e.style.width=E+"px",e.style.height=A+"px"),this.setViewport(0,0,E,A)},this.getDrawingBufferSize=function(){return{width:S*N,height:D*N}},this.setDrawingBufferSize=function(E,A,P){S=E,D=A,N=P,e.width=E*P,e.height=A*P,this.setViewport(0,0,E,A)},this.getCurrentViewport=function(){return M},this.setViewport=function(E,A,P,$){J.set(E,D-A-$,P,$),Y.viewport(M.copy(J).multiplyScalar(N))},this.setScissor=function(E,A,P,$){k.set(E,D-A-$,P,$),Y.scissor(T.copy(k).multiplyScalar(N))},this.setScissorTest=function(E){Y.setScissorTest(G=E)},this.getClearColor=function(){return Xe.getClearColor()},this.setClearColor=function(){Xe.setClearColor.apply(Xe,arguments)},this.getClearAlpha=function(){return Xe.getClearAlpha()},this.setClearAlpha=function(){Xe.setClearAlpha.apply(Xe,arguments)},this.clear=function(E,A,P){var $=0;(E===void 0||E)&&($|=16384),(A===void 0||A)&&($|=256),(P===void 0||P)&&($|=1024),O.clear($)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",ce,!1),e.removeEventListener("webglcontextrestored",ge,!1),te.dispose(),Ve.dispose(),ae.dispose(),be.dispose(),B.dispose(),xe.stop()};function ce(E){E.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),d=!0}function ge(){console.log("THREE.WebGLRenderer: Context Restored."),d=!1,Ke()}function de(E){var A=E.target;A.removeEventListener("dispose",de),q(A)}function q(E){j(E),ae.remove(E)}function j(E){var A=ae.get(E).program;E.program=void 0,A!==void 0&&ye.releaseProgram(A)}function oe(E,A){E.render(function(P){f.renderBufferImmediate(P,A)})}this.renderBufferImmediate=function(E,A){Y.initAttributes();var P=ae.get(E);E.hasPositions&&!P.position&&(P.position=O.createBuffer()),E.hasNormals&&!P.normal&&(P.normal=O.createBuffer()),E.hasUvs&&!P.uv&&(P.uv=O.createBuffer()),E.hasColors&&!P.color&&(P.color=O.createBuffer());var $=A.getAttributes();E.hasPositions&&(O.bindBuffer(34962,P.position),O.bufferData(34962,E.positionArray,35048),Y.enableAttribute($.position),O.vertexAttribPointer($.position,3,5126,!1,0,0)),E.hasNormals&&(O.bindBuffer(34962,P.normal),O.bufferData(34962,E.normalArray,35048),Y.enableAttribute($.normal),O.vertexAttribPointer($.normal,3,5126,!1,0,0)),E.hasUvs&&(O.bindBuffer(34962,P.uv),O.bufferData(34962,E.uvArray,35048),Y.enableAttribute($.uv),O.vertexAttribPointer($.uv,2,5126,!1,0,0)),E.hasColors&&(O.bindBuffer(34962,P.color),O.bufferData(34962,E.colorArray,35048),Y.enableAttribute($.color),O.vertexAttribPointer($.color,3,5126,!1,0,0)),Y.disableUnusedAttributes(),O.drawArrays(4,0,E.count),E.count=0},this.renderBufferDirect=function(E,A,P,$,fe,Te){var _e=fe.isMesh&&fe.normalMatrix.determinant()<0;Y.setMaterial($,_e);var me=ht(E,A,$,fe),De=!1;(_.geometry!==P.id||_.program!==me.id||_.wireframe!==($.wireframe===!0))&&(_.geometry=P.id,_.program=me.id,_.wireframe=$.wireframe===!0,De=!0),fe.morphTargetInfluences&&(ie.update(fe,P,$,me),De=!0);var Ne=P.index,Ie=P.attributes.position,et=1;$.wireframe===!0&&(Ne=ve.getWireframeAttribute(P),et=2);var ft,Qe=ke;Ne!==null&&(ft=X.get(Ne),Qe=Fe,Qe.setIndex(ft)),De&&(K($,me,P),Ne!==null&&O.bindBuffer(34963,ft.buffer));var ze=1/0;Ne!==null?ze=Ne.count:Ie!==void 0&&(ze=Ie.count);var We=P.drawRange.start*et,je=P.drawRange.count*et,Qt=Te!==null?Te.start*et:0,rt=Te!==null?Te.count*et:1/0,It=Math.max(We,Qt),Li=Math.min(ze,We+je,Qt+rt)-1,Zn=Math.max(0,Li-It+1);if(Zn!==0){if(fe.isMesh)if($.wireframe===!0)Y.setLineWidth($.wireframeLinewidth*F()),Qe.setMode(1);else switch(fe.drawMode){case dd:Qe.setMode(4);break;case p_:Qe.setMode(5);break;case m_:Qe.setMode(6);break}else if(fe.isLine){var Ci=$.linewidth;Ci===void 0&&(Ci=1),Y.setLineWidth(Ci*F()),fe.isLineSegments?Qe.setMode(1):fe.isLineLoop?Qe.setMode(2):Qe.setMode(3)}else fe.isPoints?Qe.setMode(0):fe.isSprite&&Qe.setMode(4);P&&P.isInstancedBufferGeometry?P.maxInstancedCount>0&&Qe.renderInstances(P,It,Zn):Qe.render(It,Zn)}};function K(E,A,P){if(P&&P.isInstancedBufferGeometry&!se.isWebGL2&&W.get("ANGLE_instanced_arrays")===null){console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}Y.initAttributes();var $=P.attributes,fe=A.getAttributes(),Te=E.defaultAttributeValues;for(var _e in fe){var me=fe[_e];if(me>=0){var De=$[_e];if(De!==void 0){var Ne=De.normalized,Ie=De.itemSize,et=X.get(De);if(et===void 0)continue;var ft=et.buffer,Qe=et.type,ze=et.bytesPerElement;if(De.isInterleavedBufferAttribute){var We=De.data,je=We.stride,Qt=De.offset;We&&We.isInstancedInterleavedBuffer?(Y.enableAttributeAndDivisor(me,We.meshPerAttribute),P.maxInstancedCount===void 0&&(P.maxInstancedCount=We.meshPerAttribute*We.count)):Y.enableAttribute(me),O.bindBuffer(34962,ft),O.vertexAttribPointer(me,Ie,Qe,Ne,je*ze,Qt*ze)}else De.isInstancedBufferAttribute?(Y.enableAttributeAndDivisor(me,De.meshPerAttribute),P.maxInstancedCount===void 0&&(P.maxInstancedCount=De.meshPerAttribute*De.count)):Y.enableAttribute(me),O.bindBuffer(34962,ft),O.vertexAttribPointer(me,Ie,Qe,Ne,0,0)}else if(Te!==void 0){var rt=Te[_e];if(rt!==void 0)switch(rt.length){case 2:O.vertexAttrib2fv(me,rt);break;case 3:O.vertexAttrib3fv(me,rt);break;case 4:O.vertexAttrib4fv(me,rt);break;default:O.vertexAttrib1fv(me,rt)}}}}Y.disableUnusedAttributes()}this.compile=function(E,A){h=Ve.get(E,A),h.init(),E.traverse(function(P){P.isLight&&(h.pushLight(P),P.castShadow&&h.pushShadow(P))}),h.setupLights(A),E.traverse(function(P){if(P.material)if(Array.isArray(P.material))for(var $=0;$<P.material.length;$++)qe(P.material[$],E.fog,P);else qe(P.material,E.fog,P)})};var Me=null;function pe(E){B.isPresenting()||Me&&Me(E)}var xe=new lu;xe.setAnimationLoop(pe),typeof window!="undefined"&&xe.setContext(window),this.setAnimationLoop=function(E){Me=E,B.setAnimationLoop(E),xe.start()},this.render=function(E,A,P,$){if(!(A&&A.isCamera)){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!d){_.geometry=null,_.program=null,_.wireframe=!1,v=-1,x=null,E.autoUpdate===!0&&E.updateMatrixWorld(),A.parent===null&&A.updateMatrixWorld(),B.enabled&&(A=B.getCamera(A)),h=Ve.get(E,A),h.init(),E.onBeforeRender(f,E,A,P),R.multiplyMatrices(A.projectionMatrix,A.matrixWorldInverse),H.setFromMatrix(R),w=this.localClippingEnabled,Z=z.init(this.clippingPlanes,w,A),u=te.get(E,A),u.init(),Le(E,A,f.sortObjects),f.sortObjects===!0&&u.sort(),Z&&z.beginShadows();var fe=h.state.shadowsArray;I.render(fe,E,A),h.setupLights(A),Z&&z.endShadows(),this.info.autoReset&&this.info.reset(),P===void 0&&(P=null),this.setRenderTarget(P),Xe.render(u,E,A,$);var Te=u.opaque,_e=u.transparent;if(E.overrideMaterial){var me=E.overrideMaterial;Te.length&&Se(Te,E,A,me),_e.length&&Se(_e,E,A,me)}else Te.length&&Se(Te,E,A),_e.length&&Se(_e,E,A);P&&ue.updateRenderTargetMipmap(P),Y.buffers.depth.setTest(!0),Y.buffers.depth.setMask(!0),Y.buffers.color.setMask(!0),Y.setPolygonOffset(!1),E.onAfterRender(f,E,A),B.enabled&&B.submitFrame(),u=null,h=null}};function Le(E,A,P){if(E.visible!==!1){var $=E.layers.test(A.layers);if($){if(E.isLight)h.pushLight(E),E.castShadow&&h.pushShadow(E);else if(E.isSprite){if(!E.frustumCulled||H.intersectsSprite(E)){P&&V.setFromMatrixPosition(E.matrixWorld).applyMatrix4(R);var fe=be.update(E),Te=E.material;u.push(E,fe,Te,V.z,null)}}else if(E.isImmediateRenderObject)P&&V.setFromMatrixPosition(E.matrixWorld).applyMatrix4(R),u.push(E,null,E.material,V.z,null);else if((E.isMesh||E.isLine||E.isPoints)&&(E.isSkinnedMesh&&E.skeleton.update(),!E.frustumCulled||H.intersectsObject(E))){P&&V.setFromMatrixPosition(E.matrixWorld).applyMatrix4(R);var fe=be.update(E),Te=E.material;if(Array.isArray(Te))for(var _e=fe.groups,me=0,De=_e.length;me<De;me++){var Ne=_e[me],Ie=Te[Ne.materialIndex];Ie&&Ie.visible&&u.push(E,fe,Ie,V.z,Ne)}else Te.visible&&u.push(E,fe,Te,V.z,null)}}for(var et=E.children,me=0,De=et.length;me<De;me++)Le(et[me],A,P)}}function Se(E,A,P,$){for(var fe=0,Te=E.length;fe<Te;fe++){var _e=E[fe],me=_e.object,De=_e.geometry,Ne=$===void 0?_e.material:$,Ie=_e.group;if(P.isArrayCamera){y=P;for(var et=P.cameras,ft=0,Qe=et.length;ft<Qe;ft++){var ze=et[ft];if(me.layers.test(ze.layers)){if("viewport"in ze)Y.viewport(M.copy(ze.viewport));else{var We=ze.bounds,je=We.x*S,Qt=We.y*D,rt=We.z*S,It=We.w*D;Y.viewport(M.set(je,Qt,rt,It).multiplyScalar(N))}h.setupLights(ze),Je(me,A,ze,De,Ne,Ie)}}}else y=null,Je(me,A,P,De,Ne,Ie)}}function Je(E,A,P,$,fe,Te){if(E.onBeforeRender(f,A,P,$,fe,Te),h=Ve.get(A,y||P),E.modelViewMatrix.multiplyMatrices(P.matrixWorldInverse,E.matrixWorld),E.normalMatrix.getNormalMatrix(E.modelViewMatrix),E.isImmediateRenderObject){Y.setMaterial(fe);var _e=ht(P,A.fog,fe,E);_.geometry=null,_.program=null,_.wireframe=!1,oe(E,_e)}else f.renderBufferDirect(P,A.fog,$,fe,E,Te);E.onAfterRender(f,A,P,$,fe,Te),h=Ve.get(A,y||P)}function qe(E,A,P){var $=ae.get(E),fe=h.state.lights,Te=h.state.shadowsArray,_e=$.lightsHash,me=fe.state.hash,De=ye.getParameters(E,fe.state,Te,A,z.numPlanes,z.numIntersection,P),Ne=ye.getProgramCode(E,De),Ie=$.program,et=!0;if(Ie===void 0)E.addEventListener("dispose",de);else if(Ie.code!==Ne)j(E);else if(_e.stateID!==me.stateID||_e.directionalLength!==me.directionalLength||_e.pointLength!==me.pointLength||_e.spotLength!==me.spotLength||_e.rectAreaLength!==me.rectAreaLength||_e.hemiLength!==me.hemiLength||_e.shadowsLength!==me.shadowsLength)_e.stateID=me.stateID,_e.directionalLength=me.directionalLength,_e.pointLength=me.pointLength,_e.spotLength=me.spotLength,_e.rectAreaLength=me.rectAreaLength,_e.hemiLength=me.hemiLength,_e.shadowsLength=me.shadowsLength,et=!1;else{if(De.shaderID!==void 0)return;et=!1}if(et){if(De.shaderID){var ft=ii[De.shaderID];$.shader={name:E.type,uniforms:Ea(ft.uniforms),vertexShader:ft.vertexShader,fragmentShader:ft.fragmentShader}}else $.shader={name:E.type,uniforms:E.uniforms,vertexShader:E.vertexShader,fragmentShader:E.fragmentShader};E.onBeforeCompile($.shader,f),Ne=ye.getProgramCode(E,De),Ie=ye.acquireProgram(E,$.shader,De,Ne),$.program=Ie,E.program=Ie}var Qe=Ie.getAttributes();if(E.morphTargets){E.numSupportedMorphTargets=0;for(var ze=0;ze<f.maxMorphTargets;ze++)Qe["morphTarget"+ze]>=0&&E.numSupportedMorphTargets++}if(E.morphNormals){E.numSupportedMorphNormals=0;for(var ze=0;ze<f.maxMorphNormals;ze++)Qe["morphNormal"+ze]>=0&&E.numSupportedMorphNormals++}var We=$.shader.uniforms;(!E.isShaderMaterial&&!E.isRawShaderMaterial||E.clipping===!0)&&($.numClippingPlanes=z.numPlanes,$.numIntersection=z.numIntersection,We.clippingPlanes=z.uniform),$.fog=A,_e===void 0&&($.lightsHash=_e={}),_e.stateID=me.stateID,_e.directionalLength=me.directionalLength,_e.pointLength=me.pointLength,_e.spotLength=me.spotLength,_e.rectAreaLength=me.rectAreaLength,_e.hemiLength=me.hemiLength,_e.shadowsLength=me.shadowsLength,E.lights&&(We.ambientLightColor.value=fe.state.ambient,We.directionalLights.value=fe.state.directional,We.spotLights.value=fe.state.spot,We.rectAreaLights.value=fe.state.rectArea,We.pointLights.value=fe.state.point,We.hemisphereLights.value=fe.state.hemi,We.directionalShadowMap.value=fe.state.directionalShadowMap,We.directionalShadowMatrix.value=fe.state.directionalShadowMatrix,We.spotShadowMap.value=fe.state.spotShadowMap,We.spotShadowMatrix.value=fe.state.spotShadowMatrix,We.pointShadowMap.value=fe.state.pointShadowMap,We.pointShadowMatrix.value=fe.state.pointShadowMatrix);var je=$.program.getUniforms(),Qt=bi.seqWithValue(je.seq,We);$.uniformsList=Qt}function ht(E,A,P,$){b=0;var fe=ae.get(P),Te=h.state.lights,_e=fe.lightsHash,me=Te.state.hash;if(Z&&(w||E!==x)){var De=E===x&&P.id===v;z.setState(P.clippingPlanes,P.clipIntersection,P.clipShadows,E,fe,De)}P.needsUpdate===!1&&(fe.program===void 0||P.fog&&fe.fog!==A||P.lights&&(_e.stateID!==me.stateID||_e.directionalLength!==me.directionalLength||_e.pointLength!==me.pointLength||_e.spotLength!==me.spotLength||_e.rectAreaLength!==me.rectAreaLength||_e.hemiLength!==me.hemiLength||_e.shadowsLength!==me.shadowsLength)||fe.numClippingPlanes!==void 0&&(fe.numClippingPlanes!==z.numPlanes||fe.numIntersection!==z.numIntersection))&&(P.needsUpdate=!0),P.needsUpdate&&(qe(P,A,$),P.needsUpdate=!1);var Ne=!1,Ie=!1,et=!1,ft=fe.program,Qe=ft.getUniforms(),ze=fe.shader.uniforms;if(Y.useProgram(ft.program)&&(Ne=!0,Ie=!0,et=!0),P.id!==v&&(v=P.id,Ie=!0),Ne||x!==E){if(Qe.setValue(O,"projectionMatrix",E.projectionMatrix),se.logarithmicDepthBuffer&&Qe.setValue(O,"logDepthBufFC",2/(Math.log(E.far+1)/Math.LN2)),x!==E&&(x=E,Ie=!0,et=!0),P.isShaderMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.envMap){var We=Qe.map.cameraPosition;We!==void 0&&We.setValue(O,V.setFromMatrixPosition(E.matrixWorld))}(P.isMeshPhongMaterial||P.isMeshLambertMaterial||P.isMeshBasicMaterial||P.isMeshStandardMaterial||P.isShaderMaterial||P.skinning)&&Qe.setValue(O,"viewMatrix",E.matrixWorldInverse)}if(P.skinning){Qe.setOptional(O,$,"bindMatrix"),Qe.setOptional(O,$,"bindMatrixInverse");var je=$.skeleton;if(je){var Qt=je.bones;if(se.floatVertexTextures){if(je.boneTexture===void 0){var rt=Math.sqrt(Qt.length*4);rt=it.ceilPowerOfTwo(rt),rt=Math.max(rt,4);var It=new Float32Array(rt*rt*4);It.set(je.boneMatrices);var Li=new Or(It,rt,rt,Si,Ma);Li.needsUpdate=!0,je.boneMatrices=It,je.boneTexture=Li,je.boneTextureSize=rt}Qe.setValue(O,"boneTexture",je.boneTexture),Qe.setValue(O,"boneTextureSize",je.boneTextureSize)}else Qe.setOptional(O,je,"boneMatrices")}}return Ie&&(Qe.setValue(O,"toneMappingExposure",f.toneMappingExposure),Qe.setValue(O,"toneMappingWhitePoint",f.toneMappingWhitePoint),P.lights&&Jo(ze,et),A&&P.fog&&ot(ze,A),P.isMeshBasicMaterial?Q(ze,P):P.isMeshLambertMaterial?(Q(ze,P),bt(ze,P)):P.isMeshPhongMaterial?(Q(ze,P),P.isMeshToonMaterial?$n(ze,P):xt(ze,P)):P.isMeshStandardMaterial?(Q(ze,P),P.isMeshPhysicalMaterial?An(ze,P):pt(ze,P)):P.isMeshMatcapMaterial?(Q(ze,P),Jt(ze,P)):P.isMeshDepthMaterial?(Q(ze,P),ps(ze,P)):P.isMeshDistanceMaterial?(Q(ze,P),$o(ze,P)):P.isMeshNormalMaterial?(Q(ze,P),Zo(ze,P)):P.isLineBasicMaterial?(he(ze,P),P.isLineDashedMaterial&&we(ze,P)):P.isPointsMaterial?Pe(ze,P):P.isSpriteMaterial?Be(ze,P):P.isShadowMaterial&&(ze.color.value=P.color,ze.opacity.value=P.opacity),ze.ltc_1!==void 0&&(ze.ltc_1.value=Ue.LTC_1),ze.ltc_2!==void 0&&(ze.ltc_2.value=Ue.LTC_2),bi.upload(O,fe.uniformsList,ze,f)),P.isShaderMaterial&&P.uniformsNeedUpdate===!0&&(bi.upload(O,fe.uniformsList,ze,f),P.uniformsNeedUpdate=!1),P.isSpriteMaterial&&Qe.setValue(O,"center",$.center),Qe.setValue(O,"modelViewMatrix",$.modelViewMatrix),Qe.setValue(O,"normalMatrix",$.normalMatrix),Qe.setValue(O,"modelMatrix",$.matrixWorld),ft}function Q(E,A){E.opacity.value=A.opacity,A.color&&(E.diffuse.value=A.color),A.emissive&&E.emissive.value.copy(A.emissive).multiplyScalar(A.emissiveIntensity),A.map&&(E.map.value=A.map),A.alphaMap&&(E.alphaMap.value=A.alphaMap),A.specularMap&&(E.specularMap.value=A.specularMap),A.envMap&&(E.envMap.value=A.envMap,E.flipEnvMap.value=A.envMap.isCubeTexture?-1:1,E.reflectivity.value=A.reflectivity,E.refractionRatio.value=A.refractionRatio,E.maxMipLevel.value=ae.get(A.envMap).__maxMipLevel),A.lightMap&&(E.lightMap.value=A.lightMap,E.lightMapIntensity.value=A.lightMapIntensity),A.aoMap&&(E.aoMap.value=A.aoMap,E.aoMapIntensity.value=A.aoMapIntensity);var P;A.map?P=A.map:A.specularMap?P=A.specularMap:A.displacementMap?P=A.displacementMap:A.normalMap?P=A.normalMap:A.bumpMap?P=A.bumpMap:A.roughnessMap?P=A.roughnessMap:A.metalnessMap?P=A.metalnessMap:A.alphaMap?P=A.alphaMap:A.emissiveMap&&(P=A.emissiveMap),P!==void 0&&(P.isWebGLRenderTarget&&(P=P.texture),P.matrixAutoUpdate===!0&&P.updateMatrix(),E.uvTransform.value.copy(P.matrix))}function he(E,A){E.diffuse.value=A.color,E.opacity.value=A.opacity}function we(E,A){E.dashSize.value=A.dashSize,E.totalSize.value=A.dashSize+A.gapSize,E.scale.value=A.scale}function Pe(E,A){E.diffuse.value=A.color,E.opacity.value=A.opacity,E.size.value=A.size*N,E.scale.value=D*.5,E.map.value=A.map,A.map!==null&&(A.map.matrixAutoUpdate===!0&&A.map.updateMatrix(),E.uvTransform.value.copy(A.map.matrix))}function Be(E,A){E.diffuse.value=A.color,E.opacity.value=A.opacity,E.rotation.value=A.rotation,E.map.value=A.map,A.map!==null&&(A.map.matrixAutoUpdate===!0&&A.map.updateMatrix(),E.uvTransform.value.copy(A.map.matrix))}function ot(E,A){E.fogColor.value=A.color,A.isFog?(E.fogNear.value=A.near,E.fogFar.value=A.far):A.isFogExp2&&(E.fogDensity.value=A.density)}function bt(E,A){A.emissiveMap&&(E.emissiveMap.value=A.emissiveMap)}function xt(E,A){E.specular.value=A.specular,E.shininess.value=Math.max(A.shininess,1e-4),A.emissiveMap&&(E.emissiveMap.value=A.emissiveMap),A.bumpMap&&(E.bumpMap.value=A.bumpMap,E.bumpScale.value=A.bumpScale,A.side===Vt&&(E.bumpScale.value*=-1)),A.normalMap&&(E.normalMap.value=A.normalMap,E.normalScale.value.copy(A.normalScale),A.side===Vt&&E.normalScale.value.negate()),A.displacementMap&&(E.displacementMap.value=A.displacementMap,E.displacementScale.value=A.displacementScale,E.displacementBias.value=A.displacementBias)}function $n(E,A){xt(E,A),A.gradientMap&&(E.gradientMap.value=A.gradientMap)}function pt(E,A){E.roughness.value=A.roughness,E.metalness.value=A.metalness,A.roughnessMap&&(E.roughnessMap.value=A.roughnessMap),A.metalnessMap&&(E.metalnessMap.value=A.metalnessMap),A.emissiveMap&&(E.emissiveMap.value=A.emissiveMap),A.bumpMap&&(E.bumpMap.value=A.bumpMap,E.bumpScale.value=A.bumpScale,A.side===Vt&&(E.bumpScale.value*=-1)),A.normalMap&&(E.normalMap.value=A.normalMap,E.normalScale.value.copy(A.normalScale),A.side===Vt&&E.normalScale.value.negate()),A.displacementMap&&(E.displacementMap.value=A.displacementMap,E.displacementScale.value=A.displacementScale,E.displacementBias.value=A.displacementBias),A.envMap&&(E.envMapIntensity.value=A.envMapIntensity)}function An(E,A){pt(E,A),E.reflectivity.value=A.reflectivity,E.clearCoat.value=A.clearCoat,E.clearCoatRoughness.value=A.clearCoatRoughness}function Jt(E,A){A.matcap&&(E.matcap.value=A.matcap),A.bumpMap&&(E.bumpMap.value=A.bumpMap,E.bumpScale.value=A.bumpScale,A.side===Vt&&(E.bumpScale.value*=-1)),A.normalMap&&(E.normalMap.value=A.normalMap,E.normalScale.value.copy(A.normalScale),A.side===Vt&&E.normalScale.value.negate()),A.displacementMap&&(E.displacementMap.value=A.displacementMap,E.displacementScale.value=A.displacementScale,E.displacementBias.value=A.displacementBias)}function ps(E,A){A.displacementMap&&(E.displacementMap.value=A.displacementMap,E.displacementScale.value=A.displacementScale,E.displacementBias.value=A.displacementBias)}function $o(E,A){A.displacementMap&&(E.displacementMap.value=A.displacementMap,E.displacementScale.value=A.displacementScale,E.displacementBias.value=A.displacementBias),E.referencePosition.value.copy(A.referencePosition),E.nearDistance.value=A.nearDistance,E.farDistance.value=A.farDistance}function Zo(E,A){A.bumpMap&&(E.bumpMap.value=A.bumpMap,E.bumpScale.value=A.bumpScale,A.side===Vt&&(E.bumpScale.value*=-1)),A.normalMap&&(E.normalMap.value=A.normalMap,E.normalScale.value.copy(A.normalScale),A.side===Vt&&E.normalScale.value.negate()),A.displacementMap&&(E.displacementMap.value=A.displacementMap,E.displacementScale.value=A.displacementScale,E.displacementBias.value=A.displacementBias)}function Jo(E,A){E.ambientLightColor.needsUpdate=A,E.directionalLights.needsUpdate=A,E.pointLights.needsUpdate=A,E.spotLights.needsUpdate=A,E.rectAreaLights.needsUpdate=A,E.hemisphereLights.needsUpdate=A}function U(){var E=b;return E>=se.maxTextures&&console.warn("THREE.WebGLRenderer: Trying to use "+E+" texture units while this GPU supports only "+se.maxTextures),b+=1,E}this.allocTextureUnit=U,this.setTexture2D=function(){var E=!1;return function(P,$){P&&P.isWebGLRenderTarget&&(E||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),E=!0),P=P.texture),ue.setTexture2D(P,$)}}(),this.setTexture3D=function(){return function(A,P){ue.setTexture3D(A,P)}}(),this.setTexture=function(){var E=!1;return function(P,$){E||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),E=!0),ue.setTexture2D(P,$)}}(),this.setTextureCube=function(){var E=!1;return function(P,$){P&&P.isWebGLRenderTargetCube&&(E||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),E=!0),P=P.texture),P&&P.isCubeTexture||Array.isArray(P.image)&&P.image.length===6?ue.setTextureCube(P,$):ue.setTextureCubeDynamic(P,$)}}(),this.setFramebuffer=function(E){m=E},this.getRenderTarget=function(){return g},this.setRenderTarget=function(E){g=E,E&&ae.get(E).__webglFramebuffer===void 0&&ue.setupRenderTarget(E);var A=m,P=!1;if(E){var $=ae.get(E).__webglFramebuffer;E.isWebGLRenderTargetCube?(A=$[E.activeCubeFace],P=!0):A=$,M.copy(E.viewport),T.copy(E.scissor),L=E.scissorTest}else M.copy(J).multiplyScalar(N),T.copy(k).multiplyScalar(N),L=G;if(p!==A&&(O.bindFramebuffer(36160,A),p=A),Y.viewport(M),Y.scissor(T),Y.setScissorTest(L),P){var fe=ae.get(E.texture);O.framebufferTexture2D(36160,36064,34069+E.activeCubeFace,fe.__webglTexture,E.activeMipMapLevel)}},this.readRenderTargetPixels=function(E,A,P,$,fe,Te){if(!(E&&E.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}var _e=ae.get(E).__webglFramebuffer;if(_e){var me=!1;_e!==p&&(O.bindFramebuffer(36160,_e),me=!0);try{var De=E.texture,Ne=De.format,Ie=De.type;if(Ne!==Si&&$e.convert(Ne)!==O.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(Ie!==au&&$e.convert(Ie)!==O.getParameter(35738)&&!(Ie===Ma&&(se.isWebGL2||W.get("OES_texture_float")||W.get("WEBGL_color_buffer_float")))&&!(Ie===su&&(se.isWebGL2?W.get("EXT_color_buffer_float"):W.get("EXT_color_buffer_half_float")))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}O.checkFramebufferStatus(36160)===36053?A>=0&&A<=E.width-$&&P>=0&&P<=E.height-fe&&O.readPixels(A,P,$,fe,$e.convert(Ne),$e.convert(Ie),Te):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{me&&O.bindFramebuffer(36160,p)}}},this.copyFramebufferToTexture=function(E,A,P){var $=A.image.width,fe=A.image.height,Te=$e.convert(A.format);this.setTexture2D(A,0),O.copyTexImage2D(3553,P||0,Te,E.x,E.y,$,fe,0)},this.copyTextureToTexture=function(E,A,P,$){var fe=A.image.width,Te=A.image.height,_e=$e.convert(P.format),me=$e.convert(P.type);this.setTexture2D(P,0),A.isDataTexture?O.texSubImage2D(3553,$||0,E.x,E.y,fe,Te,_e,me,A.image.data):O.texSubImage2D(3553,$||0,E.x,E.y,_e,me,A.image)}}function Pa(t,e){this.name="",this.color=new Ge(t),this.density=e!==void 0?e:25e-5}Pa.prototype.isFogExp2=!0;Pa.prototype.clone=function(){return new Pa(this.color,this.density)};Pa.prototype.toJSON=function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}};function Ra(t,e,n){this.name="",this.color=new Ge(t),this.near=e!==void 0?e:1,this.far=n!==void 0?n:1e3}Ra.prototype.isFog=!0;Ra.prototype.clone=function(){return new Ra(this.color,this.near,this.far)};Ra.prototype.toJSON=function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}};function pc(){Ee.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}pc.prototype=Object.assign(Object.create(Ee.prototype),{constructor:pc,copy:function(t,e){return Ee.prototype.copy.call(this,t,e),t.background!==null&&(this.background=t.background.clone()),t.fog!==null&&(this.fog=t.fog.clone()),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=Ee.prototype.toJSON.call(this,t);return this.background!==null&&(e.object.background=this.background.toJSON(t)),this.fog!==null&&(e.object.fog=this.fog.toJSON()),e}});function Fr(t,e){this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(Fr.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(Fr.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");return this.count=t!==void 0?t.length/this.stride:0,this.array=t,this},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.dynamic=t.dynamic,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(var i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e){return e===void 0&&(e=0),this.array.set(t,e),this},clone:function(){return new this.constructor().copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}});function so(t,e,n,i){this.data=t,this.itemSize=e,this.offset=n,this.normalized=i===!0}Object.defineProperties(so.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}});Object.assign(so.prototype,{isInterleavedBufferAttribute:!0,setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this}});function Zi(t){nt.call(this),this.type="SpriteMaterial",this.color=new Ge(16777215),this.map=null,this.rotation=0,this.sizeAttenuation=!0,this.lights=!1,this.transparent=!0,this.setValues(t)}Zi.prototype=Object.create(nt.prototype);Zi.prototype.constructor=Zi;Zi.prototype.isSpriteMaterial=!0;Zi.prototype.copy=function(t){return nt.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};var gr;function mc(t){if(Ee.call(this),this.type="Sprite",gr===void 0){gr=new Re;var e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Fr(e,5);gr.setIndex([0,1,2,0,2,3]),gr.addAttribute("position",new so(n,3,0,!1)),gr.addAttribute("uv",new so(n,2,3,!1))}this.geometry=gr,this.material=t!==void 0?t:new Zi,this.center=new le(.5,.5)}mc.prototype=Object.assign(Object.create(Ee.prototype),{constructor:mc,isSprite:!0,raycast:function(){var t=new C,e=new C,n=new C,i=new le,r=new le,a=new Ye,s=new C,o=new C,l=new C,c=new le,u=new le,h=new le;function f(d,m,g,p,v,_){i.subVectors(d,g).addScalar(.5).multiply(p),v!==void 0?(r.x=_*i.x-v*i.y,r.y=v*i.x+_*i.y):r.copy(i),d.copy(m),d.x+=r.x,d.y+=r.y,d.applyMatrix4(a)}return function(m,g){e.setFromMatrixScale(this.matrixWorld),a.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld),n.setFromMatrixPosition(this.modelViewMatrix);var p=this.material.rotation,v,_;p!==0&&(_=Math.cos(p),v=Math.sin(p));var x=this.center;f(s.set(-.5,-.5,0),n,x,e,v,_),f(o.set(.5,-.5,0),n,x,e,v,_),f(l.set(.5,.5,0),n,x,e,v,_),c.set(0,0),u.set(1,0),h.set(1,1);var y=m.ray.intersectTriangle(s,o,l,!1,t);if(!(y===null&&(f(o.set(-.5,.5,0),n,x,e,v,_),u.set(0,1),y=m.ray.intersectTriangle(s,l,o,!1,t),y===null))){var M=m.ray.origin.distanceTo(t);M<m.near||M>m.far||g.push({distance:M,point:t.clone(),uv:jt.getUV(t,s,o,l,c,u,h,new le),face:null,object:this})}}}(),clone:function(){return new this.constructor(this.material).copy(this)},copy:function(t){return Ee.prototype.copy.call(this,t),t.center!==void 0&&this.center.copy(t.center),this}});function oo(){Ee.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}oo.prototype=Object.assign(Object.create(Ee.prototype),{constructor:oo,copy:function(t){Ee.prototype.copy.call(this,t,!1);for(var e=t.levels,n=0,i=e.length;n<i;n++){var r=e[n];this.addLevel(r.object.clone(),r.distance)}return this},addLevel:function(t,e){e===void 0&&(e=0),e=Math.abs(e);for(var n=this.levels,i=0;i<n.length&&!(e<n[i].distance);i++);n.splice(i,0,{distance:e,object:t}),this.add(t)},getObjectForDistance:function(t){for(var e=this.levels,n=1,i=e.length;n<i&&!(t<e[n].distance);n++);return e[n-1].object},raycast:function(){var t=new C;return function(n,i){t.setFromMatrixPosition(this.matrixWorld);var r=n.ray.origin.distanceTo(t);this.getObjectForDistance(r).raycast(n,i)}}(),update:function(){var t=new C,e=new C;return function(i){var r=this.levels;if(r.length>1){t.setFromMatrixPosition(i.matrixWorld),e.setFromMatrixPosition(this.matrixWorld);var a=t.distanceTo(e);r[0].object.visible=!0;for(var s=1,o=r.length;s<o&&a>=r[s].distance;s++)r[s-1].object.visible=!1,r[s].object.visible=!0;for(;s<o;s++)r[s].object.visible=!1}}}(),toJSON:function(t){var e=Ee.prototype.toJSON.call(this,t);e.object.levels=[];for(var n=this.levels,i=0,r=n.length;i<r;i++){var a=n[i];e.object.levels.push({object:a.object.uuid,distance:a.distance})}return e}});function lo(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Oe.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Ye,this.bindMatrixInverse=new Ye}lo.prototype=Object.assign(Object.create(Oe.prototype),{constructor:lo,isSkinnedMesh:!0,bind:function(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){for(var t=new mt,e=this.geometry.attributes.skinWeight,n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);var r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){Oe.prototype.updateMatrixWorld.call(this,t),this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function gc(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(this.bones.length*16),e===void 0)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Ye)}}Object.assign(gc.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var n=new Ye;this.bones[t]&&n.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(n)}},pose:function(){var t,e,n;for(e=0,n=this.bones.length;e<n;e++)t=this.bones[e],t&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,n=this.bones.length;e<n;e++)t=this.bones[e],t&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},update:function(){var t=new Ye,e=new Ye;return function(){for(var i=this.bones,r=this.boneInverses,a=this.boneMatrices,s=this.boneTexture,o=0,l=i.length;o<l;o++){var c=i[o]?i[o].matrixWorld:e;t.multiplyMatrices(c,r[o]),t.toArray(a,o*16)}s!==void 0&&(s.needsUpdate=!0)}}(),clone:function(){return new gc(this.bones,this.boneInverses)},getBoneByName:function(t){for(var e=0,n=this.bones.length;e<n;e++){var i=this.bones[e];if(i.name===t)return i}}});function af(){Ee.call(this),this.type="Bone"}af.prototype=Object.assign(Object.create(Ee.prototype),{constructor:af,isBone:!0});function yt(t){nt.call(this),this.type="LineBasicMaterial",this.color=new Ge(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(t)}yt.prototype=Object.create(nt.prototype);yt.prototype.constructor=yt;yt.prototype.isLineBasicMaterial=!0;yt.prototype.copy=function(t){return nt.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this};function tt(t,e,n){n===1&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),Ee.call(this),this.type="Line",this.geometry=t!==void 0?t:new Re,this.material=e!==void 0?e:new yt({color:Math.random()*16777215})}tt.prototype=Object.assign(Object.create(Ee.prototype),{constructor:tt,isLine:!0,computeLineDistances:function(){var t=new C,e=new C;return function(){var i=this.geometry;if(i.isBufferGeometry)if(i.index===null){for(var r=i.attributes.position,a=[0],s=1,o=r.count;s<o;s++)t.fromBufferAttribute(r,s-1),e.fromBufferAttribute(r,s),a[s]=a[s-1],a[s]+=t.distanceTo(e);i.addAttribute("lineDistance",new Ae(a,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(i.isGeometry){var l=i.vertices,a=i.lineDistances;a[0]=0;for(var s=1,o=l.length;s<o;s++)a[s]=a[s-1],a[s]+=l[s-1].distanceTo(l[s])}return this}}(),raycast:function(){var t=new Ye,e=new Qr,n=new Fn;return function(r,a){var s=r.linePrecision,o=this.geometry,l=this.matrixWorld;if(o.boundingSphere===null&&o.computeBoundingSphere(),n.copy(o.boundingSphere),n.applyMatrix4(l),n.radius+=s,r.ray.intersectsSphere(n)!==!1){t.getInverse(l),e.copy(r.ray).applyMatrix4(t);var c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new C,f=new C,d=new C,m=new C,g=this&&this.isLineSegments?2:1;if(o.isBufferGeometry){var p=o.index,v=o.attributes,_=v.position.array;if(p!==null)for(var x=p.array,y=0,M=x.length-1;y<M;y+=g){var T=x[y],L=x[y+1];h.fromArray(_,T*3),f.fromArray(_,L*3);var b=e.distanceSqToSegment(h,f,m,d);if(!(b>u)){m.applyMatrix4(this.matrixWorld);var S=r.ray.origin.distanceTo(m);S<r.near||S>r.far||a.push({distance:S,point:d.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else for(var y=0,M=_.length/3-1;y<M;y+=g){h.fromArray(_,3*y),f.fromArray(_,3*y+3);var b=e.distanceSqToSegment(h,f,m,d);if(!(b>u)){m.applyMatrix4(this.matrixWorld);var S=r.ray.origin.distanceTo(m);S<r.near||S>r.far||a.push({distance:S,point:d.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}else if(o.isGeometry)for(var D=o.vertices,N=D.length,y=0;y<N-1;y+=g){var b=e.distanceSqToSegment(D[y],D[y+1],m,d);if(!(b>u)){m.applyMatrix4(this.matrixWorld);var S=r.ray.origin.distanceTo(m);S<r.near||S>r.far||a.push({distance:S,point:d.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}}}(),copy:function(t){return Ee.prototype.copy.call(this,t),this.geometry.copy(t.geometry),this.material.copy(t.material),this},clone:function(){return new this.constructor().copy(this)}});function Mt(t,e){tt.call(this,t,e),this.type="LineSegments"}Mt.prototype=Object.assign(Object.create(tt.prototype),{constructor:Mt,isLineSegments:!0,computeLineDistances:function(){var t=new C,e=new C;return function(){var i=this.geometry;if(i.isBufferGeometry)if(i.index===null){for(var r=i.attributes.position,a=[],s=0,o=r.count;s<o;s+=2)t.fromBufferAttribute(r,s),e.fromBufferAttribute(r,s+1),a[s]=s===0?0:a[s-1],a[s+1]=a[s]+t.distanceTo(e);i.addAttribute("lineDistance",new Ae(a,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(i.isGeometry)for(var l=i.vertices,a=i.lineDistances,s=0,o=l.length;s<o;s+=2)t.copy(l[s]),e.copy(l[s+1]),a[s]=s===0?0:a[s-1],a[s+1]=a[s]+t.distanceTo(e);return this}}()});function vc(t,e){tt.call(this,t,e),this.type="LineLoop"}vc.prototype=Object.assign(Object.create(tt.prototype),{constructor:vc,isLineLoop:!0});function Ji(t){nt.call(this),this.type="PointsMaterial",this.color=new Ge(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.lights=!1,this.setValues(t)}Ji.prototype=Object.create(nt.prototype);Ji.prototype.constructor=Ji;Ji.prototype.isPointsMaterial=!0;Ji.prototype.copy=function(t){return nt.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};function yc(t,e){Ee.call(this),this.type="Points",this.geometry=t!==void 0?t:new Re,this.material=e!==void 0?e:new Ji({color:Math.random()*16777215})}yc.prototype=Object.assign(Object.create(Ee.prototype),{constructor:yc,isPoints:!0,raycast:function(){var t=new Ye,e=new Qr,n=new Fn;return function(r,a){var s=this,o=this.geometry,l=this.matrixWorld,c=r.params.Points.threshold;if(o.boundingSphere===null&&o.computeBoundingSphere(),n.copy(o.boundingSphere),n.applyMatrix4(l),n.radius+=c,r.ray.intersectsSphere(n)===!1)return;t.getInverse(l),e.copy(r.ray).applyMatrix4(t);var u=c/((this.scale.x+this.scale.y+this.scale.z)/3),h=u*u,f=new C,d=new C;function m(b,S){var D=e.distanceSqToPoint(b);if(D<h){e.closestPointToPoint(b,d),d.applyMatrix4(l);var N=r.ray.origin.distanceTo(d);if(N<r.near||N>r.far)return;a.push({distance:N,distanceToRay:Math.sqrt(D),point:d.clone(),index:S,face:null,object:s})}}if(o.isBufferGeometry){var g=o.index,p=o.attributes,v=p.position.array;if(g!==null)for(var _=g.array,x=0,y=_.length;x<y;x++){var M=_[x];f.fromArray(v,M*3),m(f,M)}else for(var x=0,T=v.length/3;x<T;x++)f.fromArray(v,x*3),m(f,x)}else for(var L=o.vertices,x=0,T=L.length;x<T;x++)m(L[x],x)}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function sf(t,e,n,i,r,a,s,o,l){vt.call(this,t,e,n,i,r,a,s,o,l),this.format=s!==void 0?s:Rr,this.minFilter=a!==void 0?a:Yt,this.magFilter=r!==void 0?r:Yt,this.generateMipmaps=!1}sf.prototype=Object.assign(Object.create(vt.prototype),{constructor:sf,isVideoTexture:!0,update:function(){var t=this.image;t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function Da(t,e,n,i,r,a,s,o,l,c,u,h){vt.call(this,null,a,s,o,l,c,i,r,u,h),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}Da.prototype=Object.create(vt.prototype);Da.prototype.constructor=Da;Da.prototype.isCompressedTexture=!0;function co(t,e,n,i,r,a,s,o,l){vt.call(this,t,e,n,i,r,a,s,o,l),this.needsUpdate=!0}co.prototype=Object.create(vt.prototype);co.prototype.constructor=co;co.prototype.isCanvasTexture=!0;function uo(t,e,n,i,r,a,s,o,l,c){if(c=c!==void 0?c:Er,c!==Er&&c!==wa)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&c===Er&&(n=Js),n===void 0&&c===wa&&(n=Qs),vt.call(this,null,i,r,a,s,o,c,n,l),this.image={width:t,height:e},this.magFilter=s!==void 0?s:en,this.minFilter=o!==void 0?o:en,this.flipY=!1,this.generateMipmaps=!1}uo.prototype=Object.create(vt.prototype);uo.prototype.constructor=uo;uo.prototype.isDepthTexture=!0;function ho(t){Re.call(this),this.type="WireframeGeometry";var e=[],n,i,r,a,s,o=[0,0],l={},c,u,h,f,d=["a","b","c"],m;if(t&&t.isGeometry){var g=t.faces;for(n=0,r=g.length;n<r;n++){var p=g[n];for(i=0;i<3;i++)u=p[d[i]],h=p[d[(i+1)%3]],o[0]=Math.min(u,h),o[1]=Math.max(u,h),f=o[0]+","+o[1],l[f]===void 0&&(l[f]={index1:o[0],index2:o[1]})}for(f in l)c=l[f],m=t.vertices[c.index1],e.push(m.x,m.y,m.z),m=t.vertices[c.index2],e.push(m.x,m.y,m.z)}else if(t&&t.isBufferGeometry){var v,_,x,y,M,T,L,b;if(m=new C,t.index!==null){for(v=t.attributes.position,_=t.index,x=t.groups,x.length===0&&(x=[{start:0,count:_.count,materialIndex:0}]),a=0,s=x.length;a<s;++a)for(y=x[a],M=y.start,T=y.count,n=M,r=M+T;n<r;n+=3)for(i=0;i<3;i++)u=_.getX(n+i),h=_.getX(n+(i+1)%3),o[0]=Math.min(u,h),o[1]=Math.max(u,h),f=o[0]+","+o[1],l[f]===void 0&&(l[f]={index1:o[0],index2:o[1]});for(f in l)c=l[f],m.fromBufferAttribute(v,c.index1),e.push(m.x,m.y,m.z),m.fromBufferAttribute(v,c.index2),e.push(m.x,m.y,m.z)}else for(v=t.attributes.position,n=0,r=v.count/3;n<r;n++)for(i=0;i<3;i++)L=3*n+i,m.fromBufferAttribute(v,L),e.push(m.x,m.y,m.z),b=3*n+(i+1)%3,m.fromBufferAttribute(v,b),e.push(m.x,m.y,m.z)}this.addAttribute("position",new Ae(e,3))}ho.prototype=Object.create(Re.prototype);ho.prototype.constructor=ho;function fo(t,e,n){Ze.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n},this.fromBufferGeometry(new Ia(t,e,n)),this.mergeVertices()}fo.prototype=Object.create(Ze.prototype);fo.prototype.constructor=fo;function Ia(t,e,n){Re.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:n};var i=[],r=[],a=[],s=[],o=1e-5,l=new C,c=new C,u=new C,h=new C,f=new C,d,m;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var g=e+1;for(d=0;d<=n;d++){var p=d/n;for(m=0;m<=e;m++){var v=m/e;t(v,p,c),r.push(c.x,c.y,c.z),v-o>=0?(t(v-o,p,u),h.subVectors(c,u)):(t(v+o,p,u),h.subVectors(u,c)),p-o>=0?(t(v,p-o,u),f.subVectors(c,u)):(t(v,p+o,u),f.subVectors(u,c)),l.crossVectors(h,f).normalize(),a.push(l.x,l.y,l.z),s.push(v,p)}}for(d=0;d<n;d++)for(m=0;m<e;m++){var _=d*g+m,x=d*g+m+1,y=(d+1)*g+m+1,M=(d+1)*g+m;i.push(_,x,M),i.push(x,y,M)}this.setIndex(i),this.addAttribute("position",new Ae(r,3)),this.addAttribute("normal",new Ae(a,3)),this.addAttribute("uv",new Ae(s,2))}Ia.prototype=Object.create(Re.prototype);Ia.prototype.constructor=Ia;function po(t,e,n,i){Ze.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i},this.fromBufferGeometry(new mn(t,e,n,i)),this.mergeVertices()}po.prototype=Object.create(Ze.prototype);po.prototype.constructor=po;function mn(t,e,n,i){Re.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i},n=n||1,i=i||0;var r=[],a=[];s(i),l(n),c(),this.addAttribute("position",new Ae(r,3)),this.addAttribute("normal",new Ae(r.slice(),3)),this.addAttribute("uv",new Ae(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function s(v){for(var _=new C,x=new C,y=new C,M=0;M<e.length;M+=3)f(e[M+0],_),f(e[M+1],x),f(e[M+2],y),o(_,x,y,v)}function o(v,_,x,y){var M=Math.pow(2,y),T=[],L,b;for(L=0;L<=M;L++){T[L]=[];var S=v.clone().lerp(x,L/M),D=_.clone().lerp(x,L/M),N=M-L;for(b=0;b<=N;b++)b===0&&L===M?T[L][b]=S:T[L][b]=S.clone().lerp(D,b/N)}for(L=0;L<M;L++)for(b=0;b<2*(M-L)-1;b++){var J=Math.floor(b/2);b%2===0?(h(T[L][J+1]),h(T[L+1][J]),h(T[L][J])):(h(T[L][J+1]),h(T[L+1][J+1]),h(T[L+1][J]))}}function l(v){for(var _=new C,x=0;x<r.length;x+=3)_.x=r[x+0],_.y=r[x+1],_.z=r[x+2],_.normalize().multiplyScalar(v),r[x+0]=_.x,r[x+1]=_.y,r[x+2]=_.z}function c(){for(var v=new C,_=0;_<r.length;_+=3){v.x=r[_+0],v.y=r[_+1],v.z=r[_+2];var x=g(v)/2/Math.PI+.5,y=p(v)/Math.PI+.5;a.push(x,1-y)}d(),u()}function u(){for(var v=0;v<a.length;v+=6){var _=a[v+0],x=a[v+2],y=a[v+4],M=Math.max(_,x,y),T=Math.min(_,x,y);M>.9&&T<.1&&(_<.2&&(a[v+0]+=1),x<.2&&(a[v+2]+=1),y<.2&&(a[v+4]+=1))}}function h(v){r.push(v.x,v.y,v.z)}function f(v,_){var x=v*3;_.x=t[x+0],_.y=t[x+1],_.z=t[x+2]}function d(){for(var v=new C,_=new C,x=new C,y=new C,M=new le,T=new le,L=new le,b=0,S=0;b<r.length;b+=9,S+=6){v.set(r[b+0],r[b+1],r[b+2]),_.set(r[b+3],r[b+4],r[b+5]),x.set(r[b+6],r[b+7],r[b+8]),M.set(a[S+0],a[S+1]),T.set(a[S+2],a[S+3]),L.set(a[S+4],a[S+5]),y.copy(v).add(_).add(x).divideScalar(3);var D=g(y);m(M,S+0,v,D),m(T,S+2,_,D),m(L,S+4,x,D)}}function m(v,_,x,y){y<0&&v.x===1&&(a[_]=v.x-1),x.x===0&&x.z===0&&(a[_]=y/2/Math.PI+.5)}function g(v){return Math.atan2(v.z,-v.x)}function p(v){return Math.atan2(-v.y,Math.sqrt(v.x*v.x+v.z*v.z))}}mn.prototype=Object.create(Re.prototype);mn.prototype.constructor=mn;function mo(t,e){Ze.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Oa(t,e)),this.mergeVertices()}mo.prototype=Object.create(Ze.prototype);mo.prototype.constructor=mo;function Oa(t,e){var n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];mn.call(this,n,i,t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}Oa.prototype=Object.create(mn.prototype);Oa.prototype.constructor=Oa;function go(t,e){Ze.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new un(t,e)),this.mergeVertices()}go.prototype=Object.create(Ze.prototype);go.prototype.constructor=go;function un(t,e){var n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];mn.call(this,n,i,t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}un.prototype=Object.create(mn.prototype);un.prototype.constructor=un;function vo(t,e){Ze.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Fa(t,e)),this.mergeVertices()}vo.prototype=Object.create(Ze.prototype);vo.prototype.constructor=vo;function Fa(t,e){var n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];mn.call(this,i,r,t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}Fa.prototype=Object.create(mn.prototype);Fa.prototype.constructor=Fa;function yo(t,e){Ze.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Na(t,e)),this.mergeVertices()}yo.prototype=Object.create(Ze.prototype);yo.prototype.constructor=yo;function Na(t,e){var n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];mn.call(this,r,a,t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}Na.prototype=Object.create(mn.prototype);Na.prototype.constructor=Na;function xo(t,e,n,i,r,a){Ze.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r},a!==void 0&&console.warn("THREE.TubeGeometry: taper has been removed.");var s=new za(t,e,n,i,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals,this.fromBufferGeometry(s),this.mergeVertices()}xo.prototype=Object.create(Ze.prototype);xo.prototype.constructor=xo;function za(t,e,n,i,r){Re.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r},e=e||64,n=n||1,i=i||8,r=r||!1;var a=t.computeFrenetFrames(e,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;var s=new C,o=new C,l=new le,c=new C,u,h,f=[],d=[],m=[],g=[];p(),this.setIndex(g),this.addAttribute("position",new Ae(f,3)),this.addAttribute("normal",new Ae(d,3)),this.addAttribute("uv",new Ae(m,2));function p(){for(u=0;u<e;u++)v(u);v(r===!1?e:0),x(),_()}function v(y){c=t.getPointAt(y/e,c);var M=a.normals[y],T=a.binormals[y];for(h=0;h<=i;h++){var L=h/i*Math.PI*2,b=Math.sin(L),S=-Math.cos(L);o.x=S*M.x+b*T.x,o.y=S*M.y+b*T.y,o.z=S*M.z+b*T.z,o.normalize(),d.push(o.x,o.y,o.z),s.x=c.x+n*o.x,s.y=c.y+n*o.y,s.z=c.z+n*o.z,f.push(s.x,s.y,s.z)}}function _(){for(h=1;h<=e;h++)for(u=1;u<=i;u++){var y=(i+1)*(h-1)+(u-1),M=(i+1)*h+(u-1),T=(i+1)*h+u,L=(i+1)*(h-1)+u;g.push(y,M,L),g.push(M,T,L)}}function x(){for(u=0;u<=e;u++)for(h=0;h<=i;h++)l.x=u/e,l.y=h/i,m.push(l.x,l.y)}}za.prototype=Object.create(Re.prototype);za.prototype.constructor=za;function _o(t,e,n,i,r,a,s){Ze.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:r,q:a},s!==void 0&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new Ua(t,e,n,i,r,a)),this.mergeVertices()}_o.prototype=Object.create(Ze.prototype);_o.prototype.constructor=_o;function Ua(t,e,n,i,r,a){Re.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:r,q:a},t=t||1,e=e||.4,n=Math.floor(n)||64,i=Math.floor(i)||8,r=r||2,a=a||3;var s=[],o=[],l=[],c=[],u,h,f=new C,d=new C,m=new C,g=new C,p=new C,v=new C,_=new C;for(u=0;u<=n;++u){var x=u/n*r*Math.PI*2;for(N(x,r,a,t,m),N(x+.01,r,a,t,g),v.subVectors(g,m),_.addVectors(g,m),p.crossVectors(v,_),_.crossVectors(p,v),p.normalize(),_.normalize(),h=0;h<=i;++h){var y=h/i*Math.PI*2,M=-e*Math.cos(y),T=e*Math.sin(y);f.x=m.x+(M*_.x+T*p.x),f.y=m.y+(M*_.y+T*p.y),f.z=m.z+(M*_.z+T*p.z),o.push(f.x,f.y,f.z),d.subVectors(f,m).normalize(),l.push(d.x,d.y,d.z),c.push(u/n),c.push(h/i)}}for(h=1;h<=n;h++)for(u=1;u<=i;u++){var L=(i+1)*(h-1)+(u-1),b=(i+1)*h+(u-1),S=(i+1)*h+u,D=(i+1)*(h-1)+u;s.push(L,b,D),s.push(b,S,D)}this.setIndex(s),this.addAttribute("position",new Ae(o,3)),this.addAttribute("normal",new Ae(l,3)),this.addAttribute("uv",new Ae(c,2));function N(J,k,G,H,z){var Z=Math.cos(J),w=Math.sin(J),R=G/k*J,V=Math.cos(R);z.x=H*(2+V)*.5*Z,z.y=H*(2+V)*w*.5,z.z=H*Math.sin(R)*.5}}Ua.prototype=Object.create(Re.prototype);Ua.prototype.constructor=Ua;function bo(t,e,n,i,r){Ze.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:r},this.fromBufferGeometry(new ai(t,e,n,i,r)),this.mergeVertices()}bo.prototype=Object.create(Ze.prototype);bo.prototype.constructor=bo;function ai(t,e,n,i,r){Re.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:r},t=t||1,e=e||.4,n=Math.floor(n)||8,i=Math.floor(i)||6,r=r||Math.PI*2;var a=[],s=[],o=[],l=[],c=new C,u=new C,h=new C,f,d;for(f=0;f<=n;f++)for(d=0;d<=i;d++){var m=d/i*r,g=f/n*Math.PI*2;u.x=(t+e*Math.cos(g))*Math.cos(m),u.y=(t+e*Math.cos(g))*Math.sin(m),u.z=e*Math.sin(g),s.push(u.x,u.y,u.z),c.x=t*Math.cos(m),c.y=t*Math.sin(m),h.subVectors(u,c).normalize(),o.push(h.x,h.y,h.z),l.push(d/i),l.push(f/n)}for(f=1;f<=n;f++)for(d=1;d<=i;d++){var p=(i+1)*f+d-1,v=(i+1)*(f-1)+d-1,_=(i+1)*(f-1)+d,x=(i+1)*f+d;a.push(p,v,x),a.push(v,_,x)}this.setIndex(a),this.addAttribute("position",new Ae(s,3)),this.addAttribute("normal",new Ae(o,3)),this.addAttribute("uv",new Ae(l,2))}ai.prototype=Object.create(Re.prototype);ai.prototype.constructor=ai;var Xw={triangulate:function(t,e,n){n=n||2;var i=e&&e.length,r=i?e[0]*n:t.length,a=Dd(t,0,r,n,!0),s=[];if(!a)return s;var o,l,c,u,h,f,d;if(i&&(a=Jw(t,e,a,n)),t.length>80*n){o=c=t[0],l=u=t[1];for(var m=n;m<r;m+=n)h=t[m],f=t[m+1],h<o&&(o=h),f<l&&(l=f),h>c&&(c=h),f>u&&(u=f);d=Math.max(c-o,u-l),d=d!==0?1/d:0}return Ga(a,s,n,o,l,d),s}};function Dd(t,e,n,i,r){var a,s;if(r===o1(t,e,n,i)>0)for(a=e;a<n;a+=i)s=of(a,t[a],t[a+1],s);else for(a=n-i;a>=e;a-=i)s=of(a,t[a],t[a+1],s);return s&&Bi(s,s.next)&&(Va(s),s=s.next),s}function Ba(t,e){if(!t)return t;e||(e=t);var n=t,i;do if(i=!1,!n.steiner&&(Bi(n,n.next)||Xt(n.prev,n,n.next)===0)){if(Va(n),n=e=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==e);return e}function Ga(t,e,n,i,r,a,s){if(!!t){!s&&a&&t1(t,i,r,a);for(var o=t,l,c;t.prev!==t.next;){if(l=t.prev,c=t.next,a?Yw(t,i,r,a):qw(t)){e.push(l.i/n),e.push(t.i/n),e.push(c.i/n),Va(t),t=c.next,o=c.next;continue}if(t=c,t===o){s?s===1?(t=$w(t,e,n),Ga(t,e,n,i,r,a,2)):s===2&&Zw(t,e,n,i,r,a):Ga(Ba(t),e,n,i,r,a,1);break}}}}function qw(t){var e=t.prev,n=t,i=t.next;if(Xt(e,n,i)>=0)return!1;for(var r=t.next.next;r!==t.prev;){if(Mo(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&Xt(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Yw(t,e,n,i){var r=t.prev,a=t,s=t.next;if(Xt(r,a,s)>=0)return!1;for(var o=r.x<a.x?r.x<s.x?r.x:s.x:a.x<s.x?a.x:s.x,l=r.y<a.y?r.y<s.y?r.y:s.y:a.y<s.y?a.y:s.y,c=r.x>a.x?r.x>s.x?r.x:s.x:a.x>s.x?a.x:s.x,u=r.y>a.y?r.y>s.y?r.y:s.y:a.y>s.y?a.y:s.y,h=xc(o,l,e,n,i),f=xc(c,u,e,n,i),d=t.nextZ;d&&d.z<=f;){if(d!==t.prev&&d!==t.next&&Mo(r.x,r.y,a.x,a.y,s.x,s.y,d.x,d.y)&&Xt(d.prev,d,d.next)>=0)return!1;d=d.nextZ}for(d=t.prevZ;d&&d.z>=h;){if(d!==t.prev&&d!==t.next&&Mo(r.x,r.y,a.x,a.y,s.x,s.y,d.x,d.y)&&Xt(d.prev,d,d.next)>=0)return!1;d=d.prevZ}return!0}function $w(t,e,n){var i=t;do{var r=i.prev,a=i.next.next;!Bi(r,a)&&Id(r,i,i.next,a)&&ka(r,a)&&ka(a,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(a.i/n),Va(i),Va(i.next),i=t=a),i=i.next}while(i!==t);return i}function Zw(t,e,n,i,r,a){var s=t;do{for(var o=s.next.next;o!==s.prev;){if(s.i!==o.i&&r1(s,o)){var l=Od(s,o);s=Ba(s,s.next),l=Ba(l,l.next),Ga(s,e,n,i,r,a),Ga(l,e,n,i,r,a);return}o=o.next}s=s.next}while(s!==t)}function Jw(t,e,n,i){var r=[],a,s,o,l,c;for(a=0,s=e.length;a<s;a++)o=e[a]*i,l=a<s-1?e[a+1]*i:t.length,c=Dd(t,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(i1(c));for(r.sort(Qw),a=0;a<r.length;a++)Kw(r[a],n),n=Ba(n,n.next);return n}function Qw(t,e){return t.x-e.x}function Kw(t,e){if(e=e1(t,e),e){var n=Od(e,t);Ba(n,n.next)}}function e1(t,e){var n=e,i=t.x,r=t.y,a=-1/0,s;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){var o=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(o<=i&&o>a){if(a=o,o===i){if(r===n.y)return n;if(r===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!s)return null;if(i===a)return s.prev;var l=s,c=s.x,u=s.y,h=1/0,f;for(n=s.next;n!==l;)i>=n.x&&n.x>=c&&i!==n.x&&Mo(r<u?i:a,r,c,u,r<u?a:i,r,n.x,n.y)&&(f=Math.abs(r-n.y)/(i-n.x),(f<h||f===h&&n.x>s.x)&&ka(n,t)&&(s=n,h=f)),n=n.next;return s}function t1(t,e,n,i){var r=t;do r.z===null&&(r.z=xc(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,n1(r)}function n1(t){var e,n,i,r,a,s,o,l,c=1;do{for(n=t,t=null,a=null,s=0;n;){for(s++,i=n,o=0,e=0;e<c&&(o++,i=i.nextZ,!!i);e++);for(l=c;o>0||l>0&&i;)o!==0&&(l===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),a?a.nextZ=r:t=r,r.prevZ=a,a=r;n=i}a.nextZ=null,c*=2}while(s>1);return t}function xc(t,e,n,i,r){return t=32767*(t-n)*r,e=32767*(e-i)*r,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t|e<<1}function i1(t){var e=t,n=t;do e.x<n.x&&(n=e),e=e.next;while(e!==t);return n}function Mo(t,e,n,i,r,a,s,o){return(r-s)*(e-o)-(t-s)*(a-o)>=0&&(t-s)*(i-o)-(n-s)*(e-o)>=0&&(n-s)*(a-o)-(r-s)*(i-o)>=0}function r1(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!a1(t,e)&&ka(t,e)&&ka(e,t)&&s1(t,e)}function Xt(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Bi(t,e){return t.x===e.x&&t.y===e.y}function Id(t,e,n,i){return Bi(t,e)&&Bi(n,i)||Bi(t,i)&&Bi(n,e)?!0:Xt(t,e,n)>0!=Xt(t,e,i)>0&&Xt(n,i,t)>0!=Xt(n,i,e)>0}function a1(t,e){var n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Id(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function ka(t,e){return Xt(t.prev,t,t.next)<0?Xt(t,e,t.next)>=0&&Xt(t,t.prev,e)>=0:Xt(t,e,t.prev)<0||Xt(t,t.next,e)<0}function s1(t,e){var n=t,i=!1,r=(t.x+e.x)/2,a=(t.y+e.y)/2;do n.y>a!=n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==t);return i}function Od(t,e){var n=new _c(t.i,t.x,t.y),i=new _c(e.i,e.x,e.y),r=t.next,a=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function of(t,e,n,i){var r=new _c(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Va(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function _c(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function o1(t,e,n,i){for(var r=0,a=e,s=n-i;a<n;a+=i)r+=(t[s]-t[a])*(t[a+1]+t[s+1]),s=a;return r}var Mi={area:function(t){for(var e=t.length,n=0,i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return n*.5},isClockWise:function(t){return Mi.area(t)<0},triangulateShape:function(t,e){var n=[],i=[],r=[];lf(t),cf(n,t);var a=t.length;e.forEach(lf);for(var s=0;s<e.length;s++)i.push(a),a+=e[s].length,cf(n,e[s]);for(var o=Xw.triangulate(n,i),s=0;s<o.length;s+=3)r.push(o.slice(s,s+3));return r}};function lf(t){var e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function cf(t,e){for(var n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}function Nr(t,e){Ze.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new ci(t,e)),this.mergeVertices()}Nr.prototype=Object.create(Ze.prototype);Nr.prototype.constructor=Nr;Nr.prototype.toJSON=function(){var t=Ze.prototype.toJSON.call(this),e=this.parameters.shapes,n=this.parameters.options;return Fd(e,n,t)};function ci(t,e){Re.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];for(var n=this,i=[],r=[],a=0,s=t.length;a<s;a++){var o=t[a];l(o)}this.addAttribute("position",new Ae(i,3)),this.addAttribute("uv",new Ae(r,2)),this.computeVertexNormals();function l(c){var u=[],h=e.curveSegments!==void 0?e.curveSegments:12,f=e.steps!==void 0?e.steps:1,d=e.depth!==void 0?e.depth:100,m=e.bevelEnabled!==void 0?e.bevelEnabled:!0,g=e.bevelThickness!==void 0?e.bevelThickness:6,p=e.bevelSize!==void 0?e.bevelSize:g-2,v=e.bevelSegments!==void 0?e.bevelSegments:3,_=e.extrudePath,x=e.UVGenerator!==void 0?e.UVGenerator:l1;e.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),d=e.amount);var y,M=!1,T,L,b,S;_&&(y=_.getSpacedPoints(f),M=!0,m=!1,T=_.computeFrenetFrames(f,!1),L=new C,b=new C,S=new C),m||(v=0,g=0,p=0);var D,N,J,k=c.extractPoints(h),G=k.shape,H=k.holes,z=!Mi.isClockWise(G);if(z)for(G=G.reverse(),N=0,J=H.length;N<J;N++)D=H[N],Mi.isClockWise(D)&&(H[N]=D.reverse());var Z=Mi.triangulateShape(G,H),w=G;for(N=0,J=H.length;N<J;N++)D=H[N],G=G.concat(D);function R(de,q,j){return q||console.error("THREE.ExtrudeGeometry: vec does not exist"),q.clone().multiplyScalar(j).add(de)}var V,F,O,ee,W,se=G.length,Y,re=Z.length;function ae(de,q,j){var oe,K,Me,pe=de.x-q.x,xe=de.y-q.y,Le=j.x-de.x,Se=j.y-de.y,Je=pe*pe+xe*xe,qe=pe*Se-xe*Le;if(Math.abs(qe)>Number.EPSILON){var ht=Math.sqrt(Je),Q=Math.sqrt(Le*Le+Se*Se),he=q.x-xe/ht,we=q.y+pe/ht,Pe=j.x-Se/Q,Be=j.y+Le/Q,ot=((Pe-he)*Se-(Be-we)*Le)/(pe*Se-xe*Le);oe=he+pe*ot-de.x,K=we+xe*ot-de.y;var bt=oe*oe+K*K;if(bt<=2)return new le(oe,K);Me=Math.sqrt(bt/2)}else{var xt=!1;pe>Number.EPSILON?Le>Number.EPSILON&&(xt=!0):pe<-Number.EPSILON?Le<-Number.EPSILON&&(xt=!0):Math.sign(xe)===Math.sign(Se)&&(xt=!0),xt?(oe=-xe,K=pe,Me=Math.sqrt(Je)):(oe=pe,K=xe,Me=Math.sqrt(Je/2))}return new le(oe/Me,K/Me)}for(var ue=[],X=0,ve=w.length,be=ve-1,ye=X+1;X<ve;X++,be++,ye++)be===ve&&(be=0),ye===ve&&(ye=0),ue[X]=ae(w[X],w[be],w[ye]);var te=[],Ve,Xe=ue.concat();for(N=0,J=H.length;N<J;N++){for(D=H[N],Ve=[],X=0,ve=D.length,be=ve-1,ye=X+1;X<ve;X++,be++,ye++)be===ve&&(be=0),ye===ve&&(ye=0),Ve[X]=ae(D[X],D[be],D[ye]);te.push(Ve),Xe=Xe.concat(Ve)}for(V=0;V<v;V++){for(O=V/v,ee=g*Math.cos(O*Math.PI/2),F=p*Math.sin(O*Math.PI/2),X=0,ve=w.length;X<ve;X++)W=R(w[X],ue[X],F),Ke(W.x,W.y,-ee);for(N=0,J=H.length;N<J;N++)for(D=H[N],Ve=te[N],X=0,ve=D.length;X<ve;X++)W=R(D[X],Ve[X],F),Ke(W.x,W.y,-ee)}for(F=p,X=0;X<se;X++)W=m?R(G[X],Xe[X],F):G[X],M?(b.copy(T.normals[0]).multiplyScalar(W.x),L.copy(T.binormals[0]).multiplyScalar(W.y),S.copy(y[0]).add(b).add(L),Ke(S.x,S.y,S.z)):Ke(W.x,W.y,0);var ie;for(ie=1;ie<=f;ie++)for(X=0;X<se;X++)W=m?R(G[X],Xe[X],F):G[X],M?(b.copy(T.normals[ie]).multiplyScalar(W.x),L.copy(T.binormals[ie]).multiplyScalar(W.y),S.copy(y[ie]).add(b).add(L),Ke(S.x,S.y,S.z)):Ke(W.x,W.y,d/f*ie);for(V=v-1;V>=0;V--){for(O=V/v,ee=g*Math.cos(O*Math.PI/2),F=p*Math.sin(O*Math.PI/2),X=0,ve=w.length;X<ve;X++)W=R(w[X],ue[X],F),Ke(W.x,W.y,d+ee);for(N=0,J=H.length;N<J;N++)for(D=H[N],Ve=te[N],X=0,ve=D.length;X<ve;X++)W=R(D[X],Ve[X],F),M?Ke(W.x,W.y+y[f-1].y,y[f-1].x+ee):Ke(W.x,W.y,d+ee)}ke(),Fe();function ke(){var de=i.length/3;if(m){var q=0,j=se*q;for(X=0;X<re;X++)Y=Z[X],B(Y[2]+j,Y[1]+j,Y[0]+j);for(q=f+v*2,j=se*q,X=0;X<re;X++)Y=Z[X],B(Y[0]+j,Y[1]+j,Y[2]+j)}else{for(X=0;X<re;X++)Y=Z[X],B(Y[2],Y[1],Y[0]);for(X=0;X<re;X++)Y=Z[X],B(Y[0]+se*f,Y[1]+se*f,Y[2]+se*f)}n.addGroup(de,i.length/3-de,0)}function Fe(){var de=i.length/3,q=0;for($e(w,q),q+=w.length,N=0,J=H.length;N<J;N++)D=H[N],$e(D,q),q+=D.length;n.addGroup(de,i.length/3-de,1)}function $e(de,q){var j,oe;for(X=de.length;--X>=0;){j=X,oe=X-1,oe<0&&(oe=de.length-1);var K=0,Me=f+v*2;for(K=0;K<Me;K++){var pe=se*K,xe=se*(K+1),Le=q+j+pe,Se=q+oe+pe,Je=q+oe+xe,qe=q+j+xe;I(Le,Se,Je,qe)}}}function Ke(de,q,j){u.push(de),u.push(q),u.push(j)}function B(de,q,j){ce(de),ce(q),ce(j);var oe=i.length/3,K=x.generateTopUV(n,i,oe-3,oe-2,oe-1);ge(K[0]),ge(K[1]),ge(K[2])}function I(de,q,j,oe){ce(de),ce(q),ce(oe),ce(q),ce(j),ce(oe);var K=i.length/3,Me=x.generateSideWallUV(n,i,K-6,K-3,K-2,K-1);ge(Me[0]),ge(Me[1]),ge(Me[3]),ge(Me[1]),ge(Me[2]),ge(Me[3])}function ce(de){i.push(u[de*3+0]),i.push(u[de*3+1]),i.push(u[de*3+2])}function ge(de){r.push(de.x),r.push(de.y)}}}ci.prototype=Object.create(Re.prototype);ci.prototype.constructor=ci;ci.prototype.toJSON=function(){var t=Re.prototype.toJSON.call(this),e=this.parameters.shapes,n=this.parameters.options;return Fd(e,n,t)};var l1={generateTopUV:function(t,e,n,i,r){var a=e[n*3],s=e[n*3+1],o=e[i*3],l=e[i*3+1],c=e[r*3],u=e[r*3+1];return[new le(a,s),new le(o,l),new le(c,u)]},generateSideWallUV:function(t,e,n,i,r,a){var s=e[n*3],o=e[n*3+1],l=e[n*3+2],c=e[i*3],u=e[i*3+1],h=e[i*3+2],f=e[r*3],d=e[r*3+1],m=e[r*3+2],g=e[a*3],p=e[a*3+1],v=e[a*3+2];return Math.abs(o-u)<.01?[new le(s,1-l),new le(c,1-h),new le(f,1-m),new le(g,1-v)]:[new le(o,1-l),new le(u,1-h),new le(d,1-m),new le(p,1-v)]}};function Fd(t,e,n){if(n.shapes=[],Array.isArray(t))for(var i=0,r=t.length;i<r;i++){var a=t[i];n.shapes.push(a.uuid)}else n.shapes.push(t.uuid);return e.extrudePath!==void 0&&(n.options.extrudePath=e.extrudePath.toJSON()),n}function wo(t,e){Ze.call(this),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new Ha(t,e)),this.mergeVertices()}wo.prototype=Object.create(Ze.prototype);wo.prototype.constructor=wo;function Ha(t,e){e=e||{};var n=e.font;if(!(n&&n.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Ze;var i=n.generateShapes(t,e.size);e.depth=e.height!==void 0?e.height:50,e.bevelThickness===void 0&&(e.bevelThickness=10),e.bevelSize===void 0&&(e.bevelSize=8),e.bevelEnabled===void 0&&(e.bevelEnabled=!1),ci.call(this,i,e),this.type="TextBufferGeometry"}Ha.prototype=Object.create(ci.prototype);Ha.prototype.constructor=Ha;function So(t,e,n,i,r,a,s){Ze.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:s},this.fromBufferGeometry(new Qi(t,e,n,i,r,a,s)),this.mergeVertices()}So.prototype=Object.create(Ze.prototype);So.prototype.constructor=So;function Qi(t,e,n,i,r,a,s){Re.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:s},t=t||1,e=Math.max(3,Math.floor(e)||8),n=Math.max(2,Math.floor(n)||6),i=i!==void 0?i:0,r=r!==void 0?r:Math.PI*2,a=a!==void 0?a:0,s=s!==void 0?s:Math.PI;var o=a+s,l,c,u=0,h=[],f=new C,d=new C,m=[],g=[],p=[],v=[];for(c=0;c<=n;c++){var _=[],x=c/n;for(l=0;l<=e;l++){var y=l/e;f.x=-t*Math.cos(i+y*r)*Math.sin(a+x*s),f.y=t*Math.cos(a+x*s),f.z=t*Math.sin(i+y*r)*Math.sin(a+x*s),g.push(f.x,f.y,f.z),d.set(f.x,f.y,f.z).normalize(),p.push(d.x,d.y,d.z),v.push(y,1-x),_.push(u++)}h.push(_)}for(c=0;c<n;c++)for(l=0;l<e;l++){var M=h[c][l+1],T=h[c][l],L=h[c+1][l],b=h[c+1][l+1];(c!==0||a>0)&&m.push(M,T,b),(c!==n-1||o<Math.PI)&&m.push(T,L,b)}this.setIndex(m),this.addAttribute("position",new Ae(g,3)),this.addAttribute("normal",new Ae(p,3)),this.addAttribute("uv",new Ae(v,2))}Qi.prototype=Object.create(Re.prototype);Qi.prototype.constructor=Qi;function Eo(t,e,n,i,r,a){Ze.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},this.fromBufferGeometry(new Wa(t,e,n,i,r,a)),this.mergeVertices()}Eo.prototype=Object.create(Ze.prototype);Eo.prototype.constructor=Eo;function Wa(t,e,n,i,r,a){Re.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},t=t||.5,e=e||1,r=r!==void 0?r:0,a=a!==void 0?a:Math.PI*2,n=n!==void 0?Math.max(3,n):8,i=i!==void 0?Math.max(1,i):1;var s=[],o=[],l=[],c=[],u,h=t,f=(e-t)/i,d=new C,m=new le,g,p;for(g=0;g<=i;g++){for(p=0;p<=n;p++)u=r+p/n*a,d.x=h*Math.cos(u),d.y=h*Math.sin(u),o.push(d.x,d.y,d.z),l.push(0,0,1),m.x=(d.x/e+1)/2,m.y=(d.y/e+1)/2,c.push(m.x,m.y);h+=f}for(g=0;g<i;g++){var v=g*(n+1);for(p=0;p<n;p++){u=p+v;var _=u,x=u+n+1,y=u+n+2,M=u+1;s.push(_,x,M),s.push(x,y,M)}}this.setIndex(s),this.addAttribute("position",new Ae(o,3)),this.addAttribute("normal",new Ae(l,3)),this.addAttribute("uv",new Ae(c,2))}Wa.prototype=Object.create(Re.prototype);Wa.prototype.constructor=Wa;function To(t,e,n,i){Ze.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},this.fromBufferGeometry(new ja(t,e,n,i)),this.mergeVertices()}To.prototype=Object.create(Ze.prototype);To.prototype.constructor=To;function ja(t,e,n,i){Re.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e)||12,n=n||0,i=i||Math.PI*2,i=it.clamp(i,0,Math.PI*2);var r=[],a=[],s=[],o,l=1/e,c=new C,u=new le,h,f;for(h=0;h<=e;h++){var d=n+h*l*i,m=Math.sin(d),g=Math.cos(d);for(f=0;f<=t.length-1;f++)c.x=t[f].x*m,c.y=t[f].y,c.z=t[f].x*g,a.push(c.x,c.y,c.z),u.x=h/e,u.y=f/(t.length-1),s.push(u.x,u.y)}for(h=0;h<e;h++)for(f=0;f<t.length-1;f++){o=f+h*t.length;var p=o,v=o+t.length,_=o+t.length+1,x=o+1;r.push(p,v,x),r.push(v,_,x)}if(this.setIndex(r),this.addAttribute("position",new Ae(a,3)),this.addAttribute("uv",new Ae(s,2)),this.computeVertexNormals(),i===Math.PI*2){var y=this.attributes.normal.array,M=new C,T=new C,L=new C;for(o=e*t.length*3,h=0,f=0;h<t.length;h++,f+=3)M.x=y[f+0],M.y=y[f+1],M.z=y[f+2],T.x=y[o+f+0],T.y=y[o+f+1],T.z=y[o+f+2],L.addVectors(M,T).normalize(),y[f+0]=y[o+f+0]=L.x,y[f+1]=y[o+f+1]=L.y,y[f+2]=y[o+f+2]=L.z}}ja.prototype=Object.create(Re.prototype);ja.prototype.constructor=ja;function zr(t,e){Ze.call(this),this.type="ShapeGeometry",typeof e=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new Ur(t,e)),this.mergeVertices()}zr.prototype=Object.create(Ze.prototype);zr.prototype.constructor=zr;zr.prototype.toJSON=function(){var t=Ze.prototype.toJSON.call(this),e=this.parameters.shapes;return Nd(e,t)};function Ur(t,e){Re.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;var n=[],i=[],r=[],a=[],s=0,o=0;if(Array.isArray(t)===!1)c(t);else for(var l=0;l<t.length;l++)c(t[l]),this.addGroup(s,o,l),s+=o,o=0;this.setIndex(n),this.addAttribute("position",new Ae(i,3)),this.addAttribute("normal",new Ae(r,3)),this.addAttribute("uv",new Ae(a,2));function c(u){var h,f,d,m=i.length/3,g=u.extractPoints(e),p=g.shape,v=g.holes;for(Mi.isClockWise(p)===!1&&(p=p.reverse()),h=0,f=v.length;h<f;h++)d=v[h],Mi.isClockWise(d)===!0&&(v[h]=d.reverse());var _=Mi.triangulateShape(p,v);for(h=0,f=v.length;h<f;h++)d=v[h],p=p.concat(d);for(h=0,f=p.length;h<f;h++){var x=p[h];i.push(x.x,x.y,0),r.push(0,0,1),a.push(x.x,x.y)}for(h=0,f=_.length;h<f;h++){var y=_[h],M=y[0]+m,T=y[1]+m,L=y[2]+m;n.push(M,T,L),o+=3}}}Ur.prototype=Object.create(Re.prototype);Ur.prototype.constructor=Ur;Ur.prototype.toJSON=function(){var t=Re.prototype.toJSON.call(this),e=this.parameters.shapes;return Nd(e,t)};function Nd(t,e){if(e.shapes=[],Array.isArray(t))for(var n=0,i=t.length;n<i;n++){var r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}function Ao(t,e){Re.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=e!==void 0?e:1;var n=[],i=Math.cos(it.DEG2RAD*e),r=[0,0],a={},s,o,l,c=["a","b","c"],u;t.isBufferGeometry?(u=new Ze,u.fromBufferGeometry(t)):u=t.clone(),u.mergeVertices(),u.computeFaceNormals();for(var h=u.vertices,f=u.faces,d=0,m=f.length;d<m;d++)for(var g=f[d],p=0;p<3;p++)s=g[c[p]],o=g[c[(p+1)%3]],r[0]=Math.min(s,o),r[1]=Math.max(s,o),l=r[0]+","+r[1],a[l]===void 0?a[l]={index1:r[0],index2:r[1],face1:d,face2:void 0}:a[l].face2=d;for(l in a){var v=a[l];if(v.face2===void 0||f[v.face1].normal.dot(f[v.face2].normal)<=i){var _=h[v.index1];n.push(_.x,_.y,_.z),_=h[v.index2],n.push(_.x,_.y,_.z)}}this.addAttribute("position",new Ae(n,3))}Ao.prototype=Object.create(Re.prototype);Ao.prototype.constructor=Ao;function Br(t,e,n,i,r,a,s,o){Ze.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:s,thetaLength:o},this.fromBufferGeometry(new Ct(t,e,n,i,r,a,s,o)),this.mergeVertices()}Br.prototype=Object.create(Ze.prototype);Br.prototype.constructor=Br;function Ct(t,e,n,i,r,a,s,o){Re.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:s,thetaLength:o};var l=this;t=t!==void 0?t:1,e=e!==void 0?e:1,n=n||1,i=Math.floor(i)||8,r=Math.floor(r)||1,a=a!==void 0?a:!1,s=s!==void 0?s:0,o=o!==void 0?o:Math.PI*2;var c=[],u=[],h=[],f=[],d=0,m=[],g=n/2,p=0;v(),a===!1&&(t>0&&_(!0),e>0&&_(!1)),this.setIndex(c),this.addAttribute("position",new Ae(u,3)),this.addAttribute("normal",new Ae(h,3)),this.addAttribute("uv",new Ae(f,2));function v(){var x,y,M=new C,T=new C,L=0,b=(e-t)/n;for(y=0;y<=r;y++){var S=[],D=y/r,N=D*(e-t)+t;for(x=0;x<=i;x++){var J=x/i,k=J*o+s,G=Math.sin(k),H=Math.cos(k);T.x=N*G,T.y=-D*n+g,T.z=N*H,u.push(T.x,T.y,T.z),M.set(G,b,H).normalize(),h.push(M.x,M.y,M.z),f.push(J,1-D),S.push(d++)}m.push(S)}for(x=0;x<i;x++)for(y=0;y<r;y++){var z=m[y][x],Z=m[y+1][x],w=m[y+1][x+1],R=m[y][x+1];c.push(z,Z,R),c.push(Z,w,R),L+=6}l.addGroup(p,L,0),p+=L}function _(x){var y,M,T,L=new le,b=new C,S=0,D=x===!0?t:e,N=x===!0?1:-1;for(M=d,y=1;y<=i;y++)u.push(0,g*N,0),h.push(0,N,0),f.push(.5,.5),d++;for(T=d,y=0;y<=i;y++){var J=y/i,k=J*o+s,G=Math.cos(k),H=Math.sin(k);b.x=D*H,b.y=g*N,b.z=D*G,u.push(b.x,b.y,b.z),h.push(0,N,0),L.x=G*.5+.5,L.y=H*.5*N+.5,f.push(L.x,L.y),d++}for(y=0;y<i;y++){var z=M+y,Z=T+y;x===!0?c.push(Z,Z+1,z):c.push(Z+1,Z,z),S+=3}l.addGroup(p,S,x===!0?1:2),p+=S}}Ct.prototype=Object.create(Re.prototype);Ct.prototype.constructor=Ct;function Lo(t,e,n,i,r,a,s){Br.call(this,0,t,e,n,i,r,a,s),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:s}}Lo.prototype=Object.create(Br.prototype);Lo.prototype.constructor=Lo;function Co(t,e,n,i,r,a,s){Ct.call(this,0,t,e,n,i,r,a,s),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:s}}Co.prototype=Object.create(Ct.prototype);Co.prototype.constructor=Co;function Po(t,e,n,i){Ze.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},this.fromBufferGeometry(new Xa(t,e,n,i)),this.mergeVertices()}Po.prototype=Object.create(Ze.prototype);Po.prototype.constructor=Po;function Xa(t,e,n,i){Re.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},t=t||1,e=e!==void 0?Math.max(3,e):8,n=n!==void 0?n:0,i=i!==void 0?i:Math.PI*2;var r=[],a=[],s=[],o=[],l,c,u=new C,h=new le;for(a.push(0,0,0),s.push(0,0,1),o.push(.5,.5),c=0,l=3;c<=e;c++,l+=3){var f=n+c/e*i;u.x=t*Math.cos(f),u.y=t*Math.sin(f),a.push(u.x,u.y,u.z),s.push(0,0,1),h.x=(a[l]/t+1)/2,h.y=(a[l+1]/t+1)/2,o.push(h.x,h.y)}for(l=1;l<=e;l++)r.push(l,l+1,0);this.setIndex(r),this.addAttribute("position",new Ae(a,3)),this.addAttribute("normal",new Ae(s,3)),this.addAttribute("uv",new Ae(o,2))}Xa.prototype=Object.create(Re.prototype);Xa.prototype.constructor=Xa;var Kt=Object.freeze({WireframeGeometry:ho,ParametricGeometry:fo,ParametricBufferGeometry:Ia,TetrahedronGeometry:mo,TetrahedronBufferGeometry:Oa,OctahedronGeometry:go,OctahedronBufferGeometry:un,IcosahedronGeometry:vo,IcosahedronBufferGeometry:Fa,DodecahedronGeometry:yo,DodecahedronBufferGeometry:Na,PolyhedronGeometry:po,PolyhedronBufferGeometry:mn,TubeGeometry:xo,TubeBufferGeometry:za,TorusKnotGeometry:_o,TorusKnotBufferGeometry:Ua,TorusGeometry:bo,TorusBufferGeometry:ai,TextGeometry:wo,TextBufferGeometry:Ha,SphereGeometry:So,SphereBufferGeometry:Qi,RingGeometry:Eo,RingBufferGeometry:Wa,PlaneGeometry:ro,PlaneBufferGeometry:dn,LatheGeometry:To,LatheBufferGeometry:ja,ShapeGeometry:zr,ShapeBufferGeometry:Ur,ExtrudeGeometry:Nr,ExtrudeBufferGeometry:ci,EdgesGeometry:Ao,ConeGeometry:Lo,ConeBufferGeometry:Co,CylinderGeometry:Br,CylinderBufferGeometry:Ct,CircleGeometry:Po,CircleBufferGeometry:Xa,BoxGeometry:io,BoxBufferGeometry:cn});function Gr(t){nt.call(this),this.type="ShadowMaterial",this.color=new Ge(0),this.transparent=!0,this.setValues(t)}Gr.prototype=Object.create(nt.prototype);Gr.prototype.constructor=Gr;Gr.prototype.isShadowMaterial=!0;Gr.prototype.copy=function(t){return nt.prototype.copy.call(this,t),this.color.copy(t.color),this};function qa(t){En.call(this,t),this.type="RawShaderMaterial"}qa.prototype=Object.create(En.prototype);qa.prototype.constructor=qa;qa.prototype.isRawShaderMaterial=!0;function ui(t){nt.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ge(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qo,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}ui.prototype=Object.create(nt.prototype);ui.prototype.constructor=ui;ui.prototype.isMeshStandardMaterial=!0;ui.prototype.copy=function(t){return nt.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function kr(t){ui.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(t)}kr.prototype=Object.create(ui.prototype);kr.prototype.constructor=kr;kr.prototype.isMeshPhysicalMaterial=!0;kr.prototype.copy=function(t){return ui.prototype.copy.call(this,t),this.defines={PHYSICAL:""},this.reflectivity=t.reflectivity,this.clearCoat=t.clearCoat,this.clearCoatRoughness=t.clearCoatRoughness,this};function Wn(t){nt.call(this),this.type="MeshPhongMaterial",this.color=new Ge(16777215),this.specular=new Ge(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qo,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=jo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Wn.prototype=Object.create(nt.prototype);Wn.prototype.constructor=Wn;Wn.prototype.isMeshPhongMaterial=!0;Wn.prototype.copy=function(t){return nt.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Vr(t){Wn.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(t)}Vr.prototype=Object.create(Wn.prototype);Vr.prototype.constructor=Vr;Vr.prototype.isMeshToonMaterial=!0;Vr.prototype.copy=function(t){return Wn.prototype.copy.call(this,t),this.gradientMap=t.gradientMap,this};function Hr(t){nt.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qo,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Hr.prototype=Object.create(nt.prototype);Hr.prototype.constructor=Hr;Hr.prototype.isMeshNormalMaterial=!0;Hr.prototype.copy=function(t){return nt.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Wr(t){nt.call(this),this.type="MeshLambertMaterial",this.color=new Ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=jo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Wr.prototype=Object.create(nt.prototype);Wr.prototype.constructor=Wr;Wr.prototype.isMeshLambertMaterial=!0;Wr.prototype.copy=function(t){return nt.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function jr(t){nt.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ge(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qo,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.lights=!1,this.setValues(t)}jr.prototype=Object.create(nt.prototype);jr.prototype.constructor=jr;jr.prototype.isMeshMatcapMaterial=!0;jr.prototype.copy=function(t){return nt.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Xr(t){yt.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}Xr.prototype=Object.create(yt.prototype);Xr.prototype.constructor=Xr;Xr.prototype.isLineDashedMaterial=!0;Xr.prototype.copy=function(t){return yt.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var c1=Object.freeze({ShadowMaterial:Gr,SpriteMaterial:Zi,RawShaderMaterial:qa,ShaderMaterial:En,PointsMaterial:Ji,MeshPhysicalMaterial:kr,MeshStandardMaterial:ui,MeshPhongMaterial:Wn,MeshToonMaterial:Vr,MeshNormalMaterial:Hr,MeshLambertMaterial:Wr,MeshDepthMaterial:Yi,MeshDistanceMaterial:$i,MeshBasicMaterial:nn,MeshMatcapMaterial:jr,LineDashedMaterial:Xr,LineBasicMaterial:yt,Material:nt}),qt={arraySlice:function(t,e,n){return qt.isTypedArray(t)?new t.constructor(t.subarray(e,n!==void 0?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:typeof e.BYTES_PER_ELEMENT=="number"?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(a,s){return t[a]-t[s]}for(var n=t.length,i=new Array(n),r=0;r!==n;++r)i[r]=r;return i.sort(e),i},sortedArray:function(t,e,n){for(var i=t.length,r=new t.constructor(i),a=0,s=0;s!==i;++a)for(var o=n[a]*e,l=0;l!==e;++l)r[s++]=t[o+l];return r},flattenJSON:function(t,e,n,i){for(var r=1,a=t[0];a!==void 0&&a[i]===void 0;)a=t[r++];if(a!==void 0){var s=a[i];if(s!==void 0)if(Array.isArray(s))do s=a[i],s!==void 0&&(e.push(a.time),n.push.apply(n,s)),a=t[r++];while(a!==void 0);else if(s.toArray!==void 0)do s=a[i],s!==void 0&&(e.push(a.time),s.toArray(n,n.length)),a=t[r++];while(a!==void 0);else do s=a[i],s!==void 0&&(e.push(a.time),n.push(s)),a=t[r++];while(a!==void 0)}}};function Sn(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}Object.assign(Sn.prototype,{evaluate:function(t){var e=this.parameterPositions,n=this._cachedIndex,i=e[n],r=e[n-1];e:{t:{var a;n:{i:if(!(t<i)){for(var s=n+2;;){if(i===void 0){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,r)}if(n===s)break;if(r=i,i=e[++n],t<i)break t}a=e.length;break n}if(!(t>=r)){var o=e[1];t<o&&(n=2,r=o);for(var s=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===s)break;if(i=r,r=e[--n-1],t>=r)break t}a=n,n=0;break n}break e}for(;n<a;){var l=n+a>>>1;t<e[l]?a=l:n=l+1}if(i=e[n],r=e[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(i===void 0)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,r,t)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i,a=0;a!==i;++a)e[a]=n[r+a];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});//!\ DECLARE ALIAS AFTER assign prototype !
Object.assign(Sn.prototype,{beforeStart_:Sn.prototype.copySampleValue_,afterEnd_:Sn.prototype.copySampleValue_});function bc(t,e,n,i){Sn.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}bc.prototype=Object.assign(Object.create(Sn.prototype),{constructor:bc,DefaultSettings_:{endingStart:Dr,endingEnd:Dr},intervalChanged_:function(t,e,n){var i=this.parameterPositions,r=t-2,a=t+1,s=i[r],o=i[a];if(s===void 0)switch(this.getSettings_().endingStart){case _r:r=t,s=2*e-n;break;case eo:r=i.length-2,s=e+i[r]-i[r+1];break;default:r=t,s=n}if(o===void 0)switch(this.getSettings_().endingEnd){case _r:a=t,o=2*n-e;break;case eo:a=1,o=n+i[1]-i[0];break;default:a=t-1,o=e}var l=(n-e)*.5,c=this.valueSize;this._weightPrev=l/(e-s),this._weightNext=l/(o-n),this._offsetPrev=r*c,this._offsetNext=a*c},interpolate_:function(t,e,n,i){for(var r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,l=o-s,c=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,f=this._weightNext,d=(n-e)/(i-e),m=d*d,g=m*d,p=-h*g+2*h*m-h*d,v=(1+h)*g+(-1.5-2*h)*m+(-.5+h)*d+1,_=(-1-f)*g+(1.5+f)*m+.5*d,x=f*g-f*m,y=0;y!==s;++y)r[y]=p*a[c+y]+v*a[l+y]+_*a[o+y]+x*a[u+y];return r}});function Ro(t,e,n,i){Sn.call(this,t,e,n,i)}Ro.prototype=Object.assign(Object.create(Sn.prototype),{constructor:Ro,interpolate_:function(t,e,n,i){for(var r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,l=o-s,c=(n-e)/(i-e),u=1-c,h=0;h!==s;++h)r[h]=a[l+h]*u+a[o+h]*c;return r}});function Mc(t,e,n,i){Sn.call(this,t,e,n,i)}Mc.prototype=Object.assign(Object.create(Sn.prototype),{constructor:Mc,interpolate_:function(t){return this.copySampleValue_(t-1)}});function Ut(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=qt.convertArray(e,this.TimeBufferType),this.values=qt.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}Object.assign(Ut,{toJSON:function(t){var e=t.constructor,n;if(e.toJSON!==void 0)n=e.toJSON(t);else{n={name:t.name,times:qt.convertArray(t.times,Array),values:qt.convertArray(t.values,Array)};var i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}});Object.assign(Ut.prototype,{constructor:Ut,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:qs,InterpolantFactoryMethodDiscrete:function(t){return new Mc(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new Ro(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new bc(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e;switch(t){case Ks:e=this.InterpolantFactoryMethodDiscrete;break;case qs:e=this.InterpolantFactoryMethodLinear;break;case Bl:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ks;case this.InterpolantFactoryMethodLinear:return qs;case this.InterpolantFactoryMethodSmooth:return Bl}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(t!==0)for(var e=this.times,n=0,i=e.length;n!==i;++n)e[n]+=t;return this},scale:function(t){if(t!==1)for(var e=this.times,n=0,i=e.length;n!==i;++n)e[n]*=t;return this},trim:function(t,e){for(var n=this.times,i=n.length,r=0,a=i-1;r!==i&&n[r]<t;)++r;for(;a!==-1&&n[a]>e;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);var s=this.getValueSize();this.times=qt.arraySlice(n,r,a),this.values=qt.arraySlice(this.values,r*s,a*s)}return this},validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);var n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);for(var a=null,s=0;s!==r;s++){var o=n[s];if(typeof o=="number"&&isNaN(o)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,s,o),t=!1;break}if(a!==null&&a>o){console.error("THREE.KeyframeTrack: Out of order keys.",this,s,o,a),t=!1;break}a=o}if(i!==void 0&&qt.isTypedArray(i))for(var s=0,l=i.length;s!==l;++s){var c=i[s];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,s,c),t=!1;break}}return t},optimize:function(){for(var t=this.times,e=this.values,n=this.getValueSize(),i=this.getInterpolation()===Bl,r=1,a=t.length-1,s=1;s<a;++s){var o=!1,l=t[s],c=t[s+1];if(l!==c&&(s!==1||l!==l[0]))if(i)o=!0;else for(var u=s*n,h=u-n,f=u+n,d=0;d!==n;++d){var m=e[u+d];if(m!==e[h+d]||m!==e[f+d]){o=!0;break}}if(o){if(s!==r){t[r]=t[s];for(var g=s*n,p=r*n,d=0;d!==n;++d)e[p+d]=e[g+d]}++r}}if(a>0){t[r]=t[a];for(var g=a*n,p=r*n,d=0;d!==n;++d)e[p+d]=e[g+d];++r}return r!==t.length&&(this.times=qt.arraySlice(t,0,r),this.values=qt.arraySlice(e,0,r*n)),this}});function wc(t,e,n){Ut.call(this,t,e,n)}wc.prototype=Object.assign(Object.create(Ut.prototype),{constructor:wc,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:Ks,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function Sc(t,e,n,i){Ut.call(this,t,e,n,i)}Sc.prototype=Object.assign(Object.create(Ut.prototype),{constructor:Sc,ValueTypeName:"color"});function Ya(t,e,n,i){Ut.call(this,t,e,n,i)}Ya.prototype=Object.assign(Object.create(Ut.prototype),{constructor:Ya,ValueTypeName:"number"});function Ec(t,e,n,i){Sn.call(this,t,e,n,i)}Ec.prototype=Object.assign(Object.create(Sn.prototype),{constructor:Ec,interpolate_:function(t,e,n,i){for(var r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,l=(n-e)/(i-e),c=o+s;o!==c;o+=4)ct.slerpFlat(r,0,a,o-s,a,o,l);return r}});function Do(t,e,n,i){Ut.call(this,t,e,n,i)}Do.prototype=Object.assign(Object.create(Ut.prototype),{constructor:Do,ValueTypeName:"quaternion",DefaultInterpolation:qs,InterpolantFactoryMethodLinear:function(t){return new Ec(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0});function Tc(t,e,n,i){Ut.call(this,t,e,n,i)}Tc.prototype=Object.assign(Object.create(Ut.prototype),{constructor:Tc,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:Ks,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function $a(t,e,n,i){Ut.call(this,t,e,n,i)}$a.prototype=Object.assign(Object.create(Ut.prototype),{constructor:$a,ValueTypeName:"vector"});function Bn(t,e,n){this.name=t,this.tracks=n,this.duration=e!==void 0?e:-1,this.uuid=it.generateUUID(),this.duration<0&&this.resetDuration()}function u1(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ya;case"vector":case"vector2":case"vector3":case"vector4":return $a;case"color":return Sc;case"quaternion":return Do;case"bool":case"boolean":return wc;case"string":return Tc}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}function h1(t){if(t.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var e=u1(t.type);if(t.times===void 0){var n=[],i=[];qt.flattenJSON(t.keys,n,i,"value"),t.times=n,t.values=i}return e.parse!==void 0?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}Object.assign(Bn,{parse:function(t){for(var e=[],n=t.tracks,i=1/(t.fps||1),r=0,a=n.length;r!==a;++r)e.push(h1(n[r]).scale(i));return new Bn(t.name,t.duration,e)},toJSON:function(t){for(var e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid},r=0,a=n.length;r!==a;++r)e.push(Ut.toJSON(n[r]));return i},CreateFromMorphTargetSequence:function(t,e,n,i){for(var r=e.length,a=[],s=0;s<r;s++){var o=[],l=[];o.push((s+r-1)%r,s,(s+1)%r),l.push(0,1,0);var c=qt.getKeyframeOrder(o);o=qt.sortedArray(o,1,c),l=qt.sortedArray(l,1,c),!i&&o[0]===0&&(o.push(r),l.push(l[0])),a.push(new Ya(".morphTargetInfluences["+e[s].name+"]",o,l).scale(1/n))}return new Bn(t,-1,a)},findByName:function(t,e){var n=t;if(!Array.isArray(t)){var i=t;n=i.geometry&&i.geometry.animations||i.animations}for(var r=0;r<n.length;r++)if(n[r].name===e)return n[r];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){for(var i={},r=/^([\w-]*?)([\d]+)$/,a=0,s=t.length;a<s;a++){var o=t[a],l=o.name.match(r);if(l&&l.length>1){var c=l[1],u=i[c];u||(i[c]=u=[]),u.push(o)}}var h=[];for(var c in i)h.push(Bn.CreateFromMorphTargetSequence(c,i[c],e,n));return h},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var n=function(x,y,M,T,L){if(M.length!==0){var b=[],S=[];qt.flattenJSON(M,b,S,T),b.length!==0&&L.push(new x(y,b,S))}},i=[],r=t.name||"default",a=t.length||-1,s=t.fps||30,o=t.hierarchy||[],l=0;l<o.length;l++){var c=o[l].keys;if(!(!c||c.length===0))if(c[0].morphTargets){for(var u={},h=0;h<c.length;h++)if(c[h].morphTargets)for(var f=0;f<c[h].morphTargets.length;f++)u[c[h].morphTargets[f]]=-1;for(var d in u){for(var m=[],g=[],f=0;f!==c[h].morphTargets.length;++f){var p=c[h];m.push(p.time),g.push(p.morphTarget===d?1:0)}i.push(new Ya(".morphTargetInfluence["+d+"]",m,g))}a=u.length*(s||1)}else{var v=".bones["+e[l].name+"]";n($a,v+".position",c,"pos",i),n(Do,v+".quaternion",c,"rot",i),n($a,v+".scale",c,"scl",i)}}if(i.length===0)return null;var _=new Bn(r,a,i);return _}});Object.assign(Bn.prototype,{resetDuration:function(){for(var t=this.tracks,e=0,n=0,i=t.length;n!==i;++n){var r=this.tracks[n];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){for(var t=!0,e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}});var qr={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function zd(t,e,n){var i=this,r=!1,a=0,s=0,o=void 0;this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(l){s++,r===!1&&i.onStart!==void 0&&i.onStart(l,a,s),r=!0},this.itemEnd=function(l){a++,i.onProgress!==void 0&&i.onProgress(l,a,s),a===s&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(l){i.onError!==void 0&&i.onError(l)},this.resolveURL=function(l){return o?o(l):l},this.setURLModifier=function(l){return o=l,this}}var yn=new zd,Rn={};function di(t){this.manager=t!==void 0?t:yn}Object.assign(di.prototype,{load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,a=qr.get(t);if(a!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;if(Rn[t]!==void 0){Rn[t].push({onLoad:e,onProgress:n,onError:i});return}var s=/^data:(.*?)(;base64)?,(.*)$/,o=t.match(s);if(o){var l=o[1],c=!!o[2],u=o[3];u=decodeURIComponent(u),c&&(u=atob(u));try{var h,f=(this.responseType||"").toLowerCase();switch(f){case"arraybuffer":case"blob":for(var d=new Uint8Array(u.length),m=0;m<u.length;m++)d[m]=u.charCodeAt(m);f==="blob"?h=new Blob([d.buffer],{type:l}):h=d.buffer;break;case"document":var g=new DOMParser;h=g.parseFromString(u,l);break;case"json":h=JSON.parse(u);break;default:h=u;break}setTimeout(function(){e&&e(h),r.manager.itemEnd(t)},0)}catch(_){setTimeout(function(){i&&i(_),r.manager.itemError(t),r.manager.itemEnd(t)},0)}}else{Rn[t]=[],Rn[t].push({onLoad:e,onProgress:n,onError:i});var p=new XMLHttpRequest;p.open("GET",t,!0),p.addEventListener("load",function(_){var x=this.response;qr.add(t,x);var y=Rn[t];if(delete Rn[t],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received.");for(var M=0,T=y.length;M<T;M++){var L=y[M];L.onLoad&&L.onLoad(x)}r.manager.itemEnd(t)}else{for(var M=0,T=y.length;M<T;M++){var L=y[M];L.onError&&L.onError(_)}r.manager.itemError(t),r.manager.itemEnd(t)}},!1),p.addEventListener("progress",function(_){for(var x=Rn[t],y=0,M=x.length;y<M;y++){var T=x[y];T.onProgress&&T.onProgress(_)}},!1),p.addEventListener("error",function(_){var x=Rn[t];delete Rn[t];for(var y=0,M=x.length;y<M;y++){var T=x[y];T.onError&&T.onError(_)}r.manager.itemError(t),r.manager.itemEnd(t)},!1),p.addEventListener("abort",function(_){var x=Rn[t];delete Rn[t];for(var y=0,M=x.length;y<M;y++){var T=x[y];T.onError&&T.onError(_)}r.manager.itemError(t),r.manager.itemEnd(t)},!1),this.responseType!==void 0&&(p.responseType=this.responseType),this.withCredentials!==void 0&&(p.withCredentials=this.withCredentials),p.overrideMimeType&&p.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(var v in this.requestHeader)p.setRequestHeader(v,this.requestHeader[v]);p.send(null)}return r.manager.itemStart(t),p},setPath:function(t){return this.path=t,this},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});function f1(t){this.manager=t!==void 0?t:yn}Object.assign(f1.prototype,{load:function(t,e,n,i){var r=this,a=new di(r.manager);a.setPath(r.path),a.load(t,function(s){e(r.parse(JSON.parse(s)))},n,i)},parse:function(t,e){for(var n=[],i=0;i<t.length;i++){var r=Bn.parse(t[i]);n.push(r)}e(n)},setPath:function(t){return this.path=t,this}});function d1(t){this.manager=t!==void 0?t:yn,this._parser=null}Object.assign(d1.prototype,{load:function(t,e,n,i){var r=this,a=[],s=new Da;s.image=a;var o=new di(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer");function l(f){o.load(t[f],function(d){var m=r._parser(d,!0);a[f]={width:m.width,height:m.height,format:m.format,mipmaps:m.mipmaps},c+=1,c===6&&(m.mipmapCount===1&&(s.minFilter=Yt),s.format=m.format,s.needsUpdate=!0,e&&e(s))},n,i)}if(Array.isArray(t))for(var c=0,u=0,h=t.length;u<h;++u)l(u);else o.load(t,function(f){var d=r._parser(f,!0);if(d.isCubemap)for(var m=d.mipmaps.length/d.mipmapCount,g=0;g<m;g++){a[g]={mipmaps:[]};for(var p=0;p<d.mipmapCount;p++)a[g].mipmaps.push(d.mipmaps[g*d.mipmapCount+p]),a[g].format=d.format,a[g].width=d.width,a[g].height=d.height}else s.image.width=d.width,s.image.height=d.height,s.mipmaps=d.mipmaps;d.mipmapCount===1&&(s.minFilter=Yt),s.format=d.format,s.needsUpdate=!0,e&&e(s)},n,i);return s},setPath:function(t){return this.path=t,this}});function p1(t){this.manager=t!==void 0?t:yn,this._parser=null}Object.assign(p1.prototype,{load:function(t,e,n,i){var r=this,a=new Or,s=new di(this.manager);return s.setResponseType("arraybuffer"),s.setPath(this.path),s.load(t,function(o){var l=r._parser(o);!l||(l.image!==void 0?a.image=l.image:l.data!==void 0&&(a.image.width=l.width,a.image.height=l.height,a.image.data=l.data),a.wrapS=l.wrapS!==void 0?l.wrapS:Mn,a.wrapT=l.wrapT!==void 0?l.wrapT:Mn,a.magFilter=l.magFilter!==void 0?l.magFilter:Yt,a.minFilter=l.minFilter!==void 0?l.minFilter:Xo,a.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.format!==void 0&&(a.format=l.format),l.type!==void 0&&(a.type=l.type),l.mipmaps!==void 0&&(a.mipmaps=l.mipmaps),l.mipmapCount===1&&(a.minFilter=Yt),a.needsUpdate=!0,e&&e(a,l))},n,i),a},setPath:function(t){return this.path=t,this}});function Yo(t){this.manager=t!==void 0?t:yn}Object.assign(Yo.prototype,{crossOrigin:"anonymous",load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,a=qr.get(t);if(a!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;var s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),qr.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(c){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),i&&i(c),r.manager.itemError(t),r.manager.itemEnd(t)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),t.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(s.crossOrigin=this.crossOrigin),r.manager.itemStart(t),s.src=t,s},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}});function Ud(t){this.manager=t!==void 0?t:yn}Object.assign(Ud.prototype,{crossOrigin:"anonymous",load:function(t,e,n,i){var r=new Ei,a=new Yo(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);var s=0;function o(c){a.load(t[c],function(u){r.images[c]=u,s++,s===6&&(r.needsUpdate=!0,e&&e(r))},void 0,i)}for(var l=0;l<t.length;++l)o(l);return r},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}});function cu(t){this.manager=t!==void 0?t:yn}Object.assign(cu.prototype,{crossOrigin:"anonymous",load:function(t,e,n,i){var r=new vt,a=new Yo(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,function(s){r.image=s;var o=t.search(/\.jpe?g($|\?)/i)>0||t.search(/^data\:image\/jpeg/)===0;r.format=o?Rr:Si,r.needsUpdate=!0,e!==void 0&&e(r)},n,i),r},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}});function He(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(He.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){var n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t){t===void 0&&(t=5);for(var e=[],n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t){t===void 0&&(t=5);for(var e=[],n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(t===void 0&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e=[],n,i=this.getPoint(0),r,a=0;for(e.push(0),r=1;r<=t;r++)n=this.getPoint(r/t),a+=n.distanceTo(i),e.push(a),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){var n=this.getLengths(),i=0,r=n.length,a;e?a=e:a=t*n[r-1];for(var s=0,o=r-1,l;s<=o;)if(i=Math.floor(s+(o-s)/2),l=n[i]-a,l<0)s=i+1;else if(l>0)o=i-1;else{o=i;break}if(i=o,n[i]===a)return i/(r-1);var c=n[i],u=n[i+1],h=u-c,f=(a-c)/h,d=(i+f)/(r-1);return d},getTangent:function(t){var e=1e-4,n=t-e,i=t+e;n<0&&(n=0),i>1&&(i=1);var r=this.getPoint(n),a=this.getPoint(i),s=a.clone().sub(r);return s.normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},computeFrenetFrames:function(t,e){var n=new C,i=[],r=[],a=[],s=new C,o=new Ye,l,c,u;for(l=0;l<=t;l++)c=l/t,i[l]=this.getTangentAt(c),i[l].normalize();r[0]=new C,a[0]=new C;var h=Number.MAX_VALUE,f=Math.abs(i[0].x),d=Math.abs(i[0].y),m=Math.abs(i[0].z);for(f<=h&&(h=f,n.set(1,0,0)),d<=h&&(h=d,n.set(0,1,0)),m<=h&&n.set(0,0,1),s.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],s),a[0].crossVectors(i[0],r[0]),l=1;l<=t;l++)r[l]=r[l-1].clone(),a[l]=a[l-1].clone(),s.crossVectors(i[l-1],i[l]),s.length()>Number.EPSILON&&(s.normalize(),u=Math.acos(it.clamp(i[l-1].dot(i[l]),-1,1)),r[l].applyMatrix4(o.makeRotationAxis(s,u))),a[l].crossVectors(i[l],r[l]);if(e===!0)for(u=Math.acos(it.clamp(r[0].dot(r[t]),-1,1)),u/=t,i[0].dot(s.crossVectors(r[0],r[t]))>0&&(u=-u),l=1;l<=t;l++)r[l].applyMatrix4(o.makeRotationAxis(i[l],u*l)),a[l].crossVectors(i[l],r[l]);return{tangents:i,normals:r,binormals:a}},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){var t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}});function Tn(t,e,n,i,r,a,s,o){He.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=a||2*Math.PI,this.aClockwise=s||!1,this.aRotation=o||0}Tn.prototype=Object.create(He.prototype);Tn.prototype.constructor=Tn;Tn.prototype.isEllipseCurve=!0;Tn.prototype.getPoint=function(t,e){for(var n=e||new le,i=Math.PI*2,r=this.aEndAngle-this.aStartAngle,a=Math.abs(r)<Number.EPSILON;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(a?r=0:r=i),this.aClockwise===!0&&!a&&(r===i?r=-i:r=r-i);var s=this.aStartAngle+t*r,o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(this.aRotation!==0){var c=Math.cos(this.aRotation),u=Math.sin(this.aRotation),h=o-this.aX,f=l-this.aY;o=h*c-f*u+this.aX,l=h*u+f*c+this.aY}return n.set(o,l)};Tn.prototype.copy=function(t){return He.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this};Tn.prototype.toJSON=function(){var t=He.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t};Tn.prototype.fromJSON=function(t){return He.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this};function Za(t,e,n,i,r,a){Tn.call(this,t,e,n,n,i,r,a),this.type="ArcCurve"}Za.prototype=Object.create(Tn.prototype);Za.prototype.constructor=Za;Za.prototype.isArcCurve=!0;function uu(){var t=0,e=0,n=0,i=0;function r(a,s,o,l){t=a,e=o,n=-3*a+3*s-2*o-l,i=2*a-2*s+o+l}return{initCatmullRom:function(a,s,o,l,c){r(s,o,c*(o-a),c*(l-s))},initNonuniformCatmullRom:function(a,s,o,l,c,u,h){var f=(s-a)/c-(o-a)/(c+u)+(o-s)/u,d=(o-s)/u-(l-s)/(u+h)+(l-o)/h;f*=u,d*=u,r(s,o,f,d)},calc:function(a){var s=a*a,o=s*a;return t+e*a+n*s+i*o}}}var Bs=new C,kl=new uu,Vl=new uu,Hl=new uu;function gn(t,e,n,i){He.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=n||"centripetal",this.tension=i||.5}gn.prototype=Object.create(He.prototype);gn.prototype.constructor=gn;gn.prototype.isCatmullRomCurve3=!0;gn.prototype.getPoint=function(t,e){var n=e||new C,i=this.points,r=i.length,a=(r-(this.closed?0:1))*t,s=Math.floor(a),o=a-s;this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/r)+1)*r:o===0&&s===r-1&&(s=r-2,o=1);var l,c,u,h;if(this.closed||s>0?l=i[(s-1)%r]:(Bs.subVectors(i[0],i[1]).add(i[0]),l=Bs),c=i[s%r],u=i[(s+1)%r],this.closed||s+2<r?h=i[(s+2)%r]:(Bs.subVectors(i[r-1],i[r-2]).add(i[r-1]),h=Bs),this.curveType==="centripetal"||this.curveType==="chordal"){var f=this.curveType==="chordal"?.5:.25,d=Math.pow(l.distanceToSquared(c),f),m=Math.pow(c.distanceToSquared(u),f),g=Math.pow(u.distanceToSquared(h),f);m<1e-4&&(m=1),d<1e-4&&(d=m),g<1e-4&&(g=m),kl.initNonuniformCatmullRom(l.x,c.x,u.x,h.x,d,m,g),Vl.initNonuniformCatmullRom(l.y,c.y,u.y,h.y,d,m,g),Hl.initNonuniformCatmullRom(l.z,c.z,u.z,h.z,d,m,g)}else this.curveType==="catmullrom"&&(kl.initCatmullRom(l.x,c.x,u.x,h.x,this.tension),Vl.initCatmullRom(l.y,c.y,u.y,h.y,this.tension),Hl.initCatmullRom(l.z,c.z,u.z,h.z,this.tension));return n.set(kl.calc(o),Vl.calc(o),Hl.calc(o)),n};gn.prototype.copy=function(t){He.prototype.copy.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this};gn.prototype.toJSON=function(){var t=He.prototype.toJSON.call(this);t.points=[];for(var e=0,n=this.points.length;e<n;e++){var i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t};gn.prototype.fromJSON=function(t){He.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var i=t.points[e];this.points.push(new C().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this};function uf(t,e,n,i,r){var a=(i-e)*.5,s=(r-n)*.5,o=t*t,l=t*o;return(2*n-2*i+a+s)*l+(-3*n+3*i-2*a-s)*o+a*t+n}function m1(t,e){var n=1-t;return n*n*e}function g1(t,e){return 2*(1-t)*t*e}function v1(t,e){return t*t*e}function ga(t,e,n,i){return m1(t,e)+g1(t,n)+v1(t,i)}function y1(t,e){var n=1-t;return n*n*n*e}function x1(t,e){var n=1-t;return 3*n*n*t*e}function _1(t,e){return 3*(1-t)*t*t*e}function b1(t,e){return t*t*t*e}function va(t,e,n,i,r){return y1(t,e)+x1(t,n)+_1(t,i)+b1(t,r)}function jn(t,e,n,i){He.call(this),this.type="CubicBezierCurve",this.v0=t||new le,this.v1=e||new le,this.v2=n||new le,this.v3=i||new le}jn.prototype=Object.create(He.prototype);jn.prototype.constructor=jn;jn.prototype.isCubicBezierCurve=!0;jn.prototype.getPoint=function(t,e){var n=e||new le,i=this.v0,r=this.v1,a=this.v2,s=this.v3;return n.set(va(t,i.x,r.x,a.x,s.x),va(t,i.y,r.y,a.y,s.y)),n};jn.prototype.copy=function(t){return He.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this};jn.prototype.toJSON=function(){var t=He.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t};jn.prototype.fromJSON=function(t){return He.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};function hi(t,e,n,i){He.call(this),this.type="CubicBezierCurve3",this.v0=t||new C,this.v1=e||new C,this.v2=n||new C,this.v3=i||new C}hi.prototype=Object.create(He.prototype);hi.prototype.constructor=hi;hi.prototype.isCubicBezierCurve3=!0;hi.prototype.getPoint=function(t,e){var n=e||new C,i=this.v0,r=this.v1,a=this.v2,s=this.v3;return n.set(va(t,i.x,r.x,a.x,s.x),va(t,i.y,r.y,a.y,s.y),va(t,i.z,r.z,a.z,s.z)),n};hi.prototype.copy=function(t){return He.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this};hi.prototype.toJSON=function(){var t=He.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t};hi.prototype.fromJSON=function(t){return He.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};function vn(t,e){He.call(this),this.type="LineCurve",this.v1=t||new le,this.v2=e||new le}vn.prototype=Object.create(He.prototype);vn.prototype.constructor=vn;vn.prototype.isLineCurve=!0;vn.prototype.getPoint=function(t,e){var n=e||new le;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n};vn.prototype.getPointAt=function(t,e){return this.getPoint(t,e)};vn.prototype.getTangent=function(){var t=this.v2.clone().sub(this.v1);return t.normalize()};vn.prototype.copy=function(t){return He.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this};vn.prototype.toJSON=function(){var t=He.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};vn.prototype.fromJSON=function(t){return He.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function Xn(t,e){He.call(this),this.type="LineCurve3",this.v1=t||new C,this.v2=e||new C}Xn.prototype=Object.create(He.prototype);Xn.prototype.constructor=Xn;Xn.prototype.isLineCurve3=!0;Xn.prototype.getPoint=function(t,e){var n=e||new C;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n};Xn.prototype.getPointAt=function(t,e){return this.getPoint(t,e)};Xn.prototype.copy=function(t){return He.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this};Xn.prototype.toJSON=function(){var t=He.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};Xn.prototype.fromJSON=function(t){return He.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function qn(t,e,n){He.call(this),this.type="QuadraticBezierCurve",this.v0=t||new le,this.v1=e||new le,this.v2=n||new le}qn.prototype=Object.create(He.prototype);qn.prototype.constructor=qn;qn.prototype.isQuadraticBezierCurve=!0;qn.prototype.getPoint=function(t,e){var n=e||new le,i=this.v0,r=this.v1,a=this.v2;return n.set(ga(t,i.x,r.x,a.x),ga(t,i.y,r.y,a.y)),n};qn.prototype.copy=function(t){return He.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this};qn.prototype.toJSON=function(){var t=He.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};qn.prototype.fromJSON=function(t){return He.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function fi(t,e,n){He.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new C,this.v1=e||new C,this.v2=n||new C}fi.prototype=Object.create(He.prototype);fi.prototype.constructor=fi;fi.prototype.isQuadraticBezierCurve3=!0;fi.prototype.getPoint=function(t,e){var n=e||new C,i=this.v0,r=this.v1,a=this.v2;return n.set(ga(t,i.x,r.x,a.x),ga(t,i.y,r.y,a.y),ga(t,i.z,r.z,a.z)),n};fi.prototype.copy=function(t){return He.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this};fi.prototype.toJSON=function(){var t=He.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};fi.prototype.fromJSON=function(t){return He.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function Yn(t){He.call(this),this.type="SplineCurve",this.points=t||[]}Yn.prototype=Object.create(He.prototype);Yn.prototype.constructor=Yn;Yn.prototype.isSplineCurve=!0;Yn.prototype.getPoint=function(t,e){var n=e||new le,i=this.points,r=(i.length-1)*t,a=Math.floor(r),s=r-a,o=i[a===0?a:a-1],l=i[a],c=i[a>i.length-2?i.length-1:a+1],u=i[a>i.length-3?i.length-1:a+2];return n.set(uf(s,o.x,l.x,c.x,u.x),uf(s,o.y,l.y,c.y,u.y)),n};Yn.prototype.copy=function(t){He.prototype.copy.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var i=t.points[e];this.points.push(i.clone())}return this};Yn.prototype.toJSON=function(){var t=He.prototype.toJSON.call(this);t.points=[];for(var e=0,n=this.points.length;e<n;e++){var i=this.points[e];t.points.push(i.toArray())}return t};Yn.prototype.fromJSON=function(t){He.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var i=t.points[e];this.points.push(new le().fromArray(i))}return this};var Bd=Object.freeze({ArcCurve:Za,CatmullRomCurve3:gn,CubicBezierCurve:jn,CubicBezierCurve3:hi,EllipseCurve:Tn,LineCurve:vn,LineCurve3:Xn,QuadraticBezierCurve:qn,QuadraticBezierCurve3:fi,SplineCurve:Yn});function xi(){He.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}xi.prototype=Object.assign(Object.create(He.prototype),{constructor:xi,add:function(t){this.curves.push(t)},closePath:function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new vn(e,t))},getPoint:function(t){for(var e=t*this.getLength(),n=this.getCurveLengths(),i=0;i<n.length;){if(n[i]>=e){var r=n[i]-e,a=this.curves[i],s=a.getLength(),o=s===0?0:1-r/s;return a.getPointAt(o)}i++}return null},getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){t===void 0&&(t=40);for(var e=[],n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;for(var e=[],n,i=0,r=this.curves;i<r.length;i++)for(var a=r[i],s=a&&a.isEllipseCurve?t*2:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?t*a.points.length:t,o=a.getPoints(s),l=0;l<o.length;l++){var c=o[l];n&&n.equals(c)||(e.push(c),n=c)}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(t){He.prototype.copy.call(this,t),this.curves=[];for(var e=0,n=t.curves.length;e<n;e++){var i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){var t=He.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(var e=0,n=this.curves.length;e<n;e++){var i=this.curves[e];t.curves.push(i.toJSON())}return t},fromJSON:function(t){He.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(var e=0,n=t.curves.length;e<n;e++){var i=t.curves[e];this.curves.push(new Bd[i.type]().fromJSON(i))}return this}});function Gn(t){xi.call(this),this.type="Path",this.currentPoint=new le,t&&this.setFromPoints(t)}Gn.prototype=Object.assign(Object.create(xi.prototype),{constructor:Gn,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y)},moveTo:function(t,e){this.currentPoint.set(t,e)},lineTo:function(t,e){var n=new vn(this.currentPoint.clone(),new le(t,e));this.curves.push(n),this.currentPoint.set(t,e)},quadraticCurveTo:function(t,e,n,i){var r=new qn(this.currentPoint.clone(),new le(t,e),new le(n,i));this.curves.push(r),this.currentPoint.set(n,i)},bezierCurveTo:function(t,e,n,i,r,a){var s=new jn(this.currentPoint.clone(),new le(t,e),new le(n,i),new le(r,a));this.curves.push(s),this.currentPoint.set(r,a)},splineThru:function(t){var e=[this.currentPoint.clone()].concat(t),n=new Yn(e);this.curves.push(n),this.currentPoint.copy(t[t.length-1])},arc:function(t,e,n,i,r,a){var s=this.currentPoint.x,o=this.currentPoint.y;this.absarc(t+s,e+o,n,i,r,a)},absarc:function(t,e,n,i,r,a){this.absellipse(t,e,n,n,i,r,a)},ellipse:function(t,e,n,i,r,a,s,o){var l=this.currentPoint.x,c=this.currentPoint.y;this.absellipse(t+l,e+c,n,i,r,a,s,o)},absellipse:function(t,e,n,i,r,a,s,o){var l=new Tn(t,e,n,i,r,a,s,o);if(this.curves.length>0){var c=l.getPoint(0);c.equals(this.currentPoint)||this.lineTo(c.x,c.y)}this.curves.push(l);var u=l.getPoint(1);this.currentPoint.copy(u)},copy:function(t){return xi.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){var t=xi.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return xi.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}});function Vi(t){Gn.call(this,t),this.uuid=it.generateUUID(),this.type="Shape",this.holes=[]}Vi.prototype=Object.assign(Object.create(Gn.prototype),{constructor:Vi,getPointsHoles:function(t){for(var e=[],n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){Gn.prototype.copy.call(this,t),this.holes=[];for(var e=0,n=t.holes.length;e<n;e++){var i=t.holes[e];this.holes.push(i.clone())}return this},toJSON:function(){var t=Gn.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(var e=0,n=this.holes.length;e<n;e++){var i=this.holes[e];t.holes.push(i.toJSON())}return t},fromJSON:function(t){Gn.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(var e=0,n=t.holes.length;e<n;e++){var i=t.holes[e];this.holes.push(new Gn().fromJSON(i))}return this}});function Tt(t,e){Ee.call(this),this.type="Light",this.color=new Ge(t),this.intensity=e!==void 0?e:1,this.receiveShadow=void 0}Tt.prototype=Object.assign(Object.create(Ee.prototype),{constructor:Tt,isLight:!0,copy:function(t){return Ee.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){var e=Ee.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}});function Ac(t,e,n){Tt.call(this,t,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(Ee.DefaultUp),this.updateMatrix(),this.groundColor=new Ge(e)}Ac.prototype=Object.assign(Object.create(Tt.prototype),{constructor:Ac,isHemisphereLight:!0,copy:function(t){return Tt.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}});function ea(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new le(512,512),this.map=null,this.matrix=new Ye}Object.assign(ea.prototype,{copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){var t={};return this.bias!==0&&(t.bias=this.bias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}});function Lc(){ea.call(this,new Et(50,1,.5,500))}Lc.prototype=Object.assign(Object.create(ea.prototype),{constructor:Lc,isSpotLightShadow:!0,update:function(t){var e=this.camera,n=it.RAD2DEG*2*t.angle,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;(n!==e.fov||i!==e.aspect||r!==e.far)&&(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix())}});function Cc(t,e,n,i,r,a){Tt.call(this,t,e),this.type="SpotLight",this.position.copy(Ee.DefaultUp),this.updateMatrix(),this.target=new Ee,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(s){this.intensity=s/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=a!==void 0?a:1,this.shadow=new Lc}Cc.prototype=Object.assign(Object.create(Tt.prototype),{constructor:Cc,isSpotLight:!0,copy:function(t){return Tt.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}});function Pc(t,e,n,i){Tt.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=i!==void 0?i:1,this.shadow=new ea(new Et(90,1,.5,500))}Pc.prototype=Object.assign(Object.create(Tt.prototype),{constructor:Pc,isPointLight:!0,copy:function(t){return Tt.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}});function Ja(t,e,n,i,r,a){Hn.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t!==void 0?t:-1,this.right=e!==void 0?e:1,this.top=n!==void 0?n:1,this.bottom=i!==void 0?i:-1,this.near=r!==void 0?r:.1,this.far=a!==void 0?a:2e3,this.updateProjectionMatrix()}Ja.prototype=Object.assign(Object.create(Hn.prototype),{constructor:Ja,isOrthographicCamera:!0,copy:function(t,e){return Hn.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2,r=n-t,a=n+t,s=i+e,o=i-e;if(this.view!==null&&this.view.enabled){var l=this.zoom/(this.view.width/this.view.fullWidth),c=this.zoom/(this.view.height/this.view.fullHeight),u=(this.right-this.left)/this.view.width,h=(this.top-this.bottom)/this.view.height;r+=u*(this.view.offsetX/l),a=r+u*(this.view.width/l),s-=h*(this.view.offsetY/c),o=s-h*(this.view.height/c)}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=Ee.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}});function Rc(){ea.call(this,new Ja(-5,5,5,-5,.5,500))}Rc.prototype=Object.assign(Object.create(ea.prototype),{constructor:Rc});function Dc(t,e){Tt.call(this,t,e),this.type="DirectionalLight",this.position.copy(Ee.DefaultUp),this.updateMatrix(),this.target=new Ee,this.shadow=new Rc}Dc.prototype=Object.assign(Object.create(Tt.prototype),{constructor:Dc,isDirectionalLight:!0,copy:function(t){return Tt.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}});function Ic(t,e){Tt.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}Ic.prototype=Object.assign(Object.create(Tt.prototype),{constructor:Ic,isAmbientLight:!0});function Oc(t,e,n,i){Tt.call(this,t,e),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=i!==void 0?i:10}Oc.prototype=Object.assign(Object.create(Tt.prototype),{constructor:Oc,isRectAreaLight:!0,copy:function(t){return Tt.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){var e=Tt.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});function hu(t){this.manager=t!==void 0?t:yn,this.textures={}}Object.assign(hu.prototype,{load:function(t,e,n,i){var r=this,a=new di(r.manager);a.setPath(r.path),a.load(t,function(s){e(r.parse(JSON.parse(s)))},n,i)},parse:function(t){var e=this.textures;function n(l){return e[l]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",l),e[l]}var i=new c1[t.type];if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular.setHex(t.specular),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearCoat!==void 0&&(i.clearCoat=t.clearCoat),t.clearCoatRoughness!==void 0&&(i.clearCoatRoughness=t.clearCoatRoughness),t.vertexColors!==void 0&&(i.vertexColors=t.vertexColors),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==1&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.skinning!==void 0&&(i.skinning=t.skinning),t.morphTargets!==void 0&&(i.morphTargets=t.morphTargets),t.dithering!==void 0&&(i.dithering=t.dithering),t.visible!==void 0&&(i.visible=t.visible),t.userData!==void 0&&(i.userData=t.userData),t.uniforms!==void 0)for(var r in t.uniforms){var a=t.uniforms[r];switch(i.uniforms[r]={},a.type){case"t":i.uniforms[r].value=n(a.value);break;case"c":i.uniforms[r].value=new Ge().setHex(a.value);break;case"v2":i.uniforms[r].value=new le().fromArray(a.value);break;case"v3":i.uniforms[r].value=new C().fromArray(a.value);break;case"v4":i.uniforms[r].value=new mt().fromArray(a.value);break;case"m4":i.uniforms[r].value=new Ye().fromArray(a.value);break;default:i.uniforms[r].value=a.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.extensions!==void 0)for(var s in t.extensions)i.extensions[s]=t.extensions[s];if(t.shading!==void 0&&(i.flatShading=t.shading===1),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap),i.transparent=!0),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){var o=t.normalScale;Array.isArray(o)===!1&&(o=[o,o]),i.normalScale=new le().fromArray(o)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),i},setPath:function(t){return this.path=t,this},setTextures:function(t){return this.textures=t,this}});var Gd={decodeText:function(t){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(t);for(var e="",n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);return decodeURIComponent(escape(e))},extractUrlBase:function(t){var e=t.lastIndexOf("/");return e===-1?"./":t.substr(0,e+1)}};function kd(t){this.manager=t!==void 0?t:yn}Object.assign(kd.prototype,{load:function(t,e,n,i){var r=this,a=new di(r.manager);a.setPath(r.path),a.load(t,function(s){e(r.parse(JSON.parse(s)))},n,i)},parse:function(t){var e=new Re,n=t.data.index;if(n!==void 0){var i=new hf[n.type](n.array);e.setIndex(new st(i,1))}var r=t.data.attributes;for(var a in r){var s=r[a],i=new hf[s.type](s.array);e.addAttribute(a,new st(i,s.itemSize,s.normalized))}var o=t.data.groups||t.data.drawcalls||t.data.offsets;if(o!==void 0)for(var l=0,c=o.length;l!==c;++l){var u=o[l];e.addGroup(u.start,u.count,u.materialIndex)}var h=t.data.boundingSphere;if(h!==void 0){var f=new C;h.center!==void 0&&f.fromArray(h.center),e.boundingSphere=new Fn(f,h.radius)}return t.name&&(e.name=t.name),t.userData&&(e.userData=t.userData),e},setPath:function(t){return this.path=t,this}});var hf={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray!="undefined"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Vd(t){this.manager=t!==void 0?t:yn,this.resourcePath=""}Object.assign(Vd.prototype,{crossOrigin:"anonymous",load:function(t,e,n,i){var r=this,a=this.path===void 0?Gd.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||a;var s=new di(r.manager);s.setPath(this.path),s.load(t,function(o){var l=null;try{l=JSON.parse(o)}catch(u){i!==void 0&&i(u),console.error("THREE:ObjectLoader: Can't parse "+t+".",u.message);return}var c=l.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+t);return}r.parse(l,e)},n,i)},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setCrossOrigin:function(t){return this.crossOrigin=t,this},parse:function(t,e){var n=this.parseShape(t.shapes),i=this.parseGeometries(t.geometries,n),r=this.parseImages(t.images,function(){e!==void 0&&e(o)}),a=this.parseTextures(t.textures,r),s=this.parseMaterials(t.materials,a),o=this.parseObject(t.object,i,s);return t.animations&&(o.animations=this.parseAnimations(t.animations)),(t.images===void 0||t.images.length===0)&&e!==void 0&&e(o),o},parseShape:function(t){var e={};if(t!==void 0)for(var n=0,i=t.length;n<i;n++){var r=new Vi().fromJSON(t[n]);e[r.uuid]=r}return e},parseGeometries:function(t,e){var n={};if(t!==void 0)for(var i=new kd,r=0,a=t.length;r<a;r++){var s,o=t[r];switch(o.type){case"PlaneGeometry":case"PlaneBufferGeometry":s=new Kt[o.type](o.width,o.height,o.widthSegments,o.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":s=new Kt[o.type](o.width,o.height,o.depth,o.widthSegments,o.heightSegments,o.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":s=new Kt[o.type](o.radius,o.segments,o.thetaStart,o.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":s=new Kt[o.type](o.radiusTop,o.radiusBottom,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":s=new Kt[o.type](o.radius,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":s=new Kt[o.type](o.radius,o.widthSegments,o.heightSegments,o.phiStart,o.phiLength,o.thetaStart,o.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":s=new Kt[o.type](o.radius,o.detail);break;case"RingGeometry":case"RingBufferGeometry":s=new Kt[o.type](o.innerRadius,o.outerRadius,o.thetaSegments,o.phiSegments,o.thetaStart,o.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":s=new Kt[o.type](o.radius,o.tube,o.radialSegments,o.tubularSegments,o.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":s=new Kt[o.type](o.radius,o.tube,o.tubularSegments,o.radialSegments,o.p,o.q);break;case"LatheGeometry":case"LatheBufferGeometry":s=new Kt[o.type](o.points,o.segments,o.phiStart,o.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":s=new Kt[o.type](o.vertices,o.indices,o.radius,o.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var h=[],l=0,c=o.shapes.length;l<c;l++){var u=e[o.shapes[l]];h.push(u)}s=new Kt[o.type](h,o.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":for(var h=[],l=0,c=o.shapes.length;l<c;l++){var u=e[o.shapes[l]];h.push(u)}var f=o.options.extrudePath;f!==void 0&&(o.options.extrudePath=new Bd[f.type]().fromJSON(f)),s=new Kt[o.type](h,o.options);break;case"BufferGeometry":s=i.parse(o);break;case"Geometry":if("THREE"in window&&"LegacyJSONLoader"in THREE){var d=new THREE.LegacyJSONLoader;s=d.parse(o,this.resourcePath).geometry}else console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+o.type+'"');continue}s.uuid=o.uuid,o.name!==void 0&&(s.name=o.name),s.isBufferGeometry===!0&&o.userData!==void 0&&(s.userData=o.userData),n[o.uuid]=s}return n},parseMaterials:function(t,e){var n={},i={};if(t!==void 0){var r=new hu;r.setTextures(e);for(var a=0,s=t.length;a<s;a++){var o=t[a];if(o.type==="MultiMaterial"){for(var l=[],c=0;c<o.materials.length;c++){var u=o.materials[c];n[u.uuid]===void 0&&(n[u.uuid]=r.parse(u)),l.push(n[u.uuid])}i[o.uuid]=l}else i[o.uuid]=r.parse(o),n[o.uuid]=i[o.uuid]}}return i},parseAnimations:function(t){for(var e=[],n=0;n<t.length;n++){var i=t[n],r=Bn.parse(i);i.uuid!==void 0&&(r.uuid=i.uuid),e.push(r)}return e},parseImages:function(t,e){var n=this,i={};function r(g){return n.manager.itemStart(g),s.load(g,function(){n.manager.itemEnd(g)},void 0,function(){n.manager.itemError(g),n.manager.itemEnd(g)})}if(t!==void 0&&t.length>0){var a=new zd(e),s=new Yo(a);s.setCrossOrigin(this.crossOrigin);for(var o=0,l=t.length;o<l;o++){var c=t[o],u=c.url;if(Array.isArray(u)){i[c.uuid]=[];for(var h=0,f=u.length;h<f;h++){var d=u[h],m=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(d)?d:n.resourcePath+d;i[c.uuid].push(r(m))}}else{var m=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)?c.url:n.resourcePath+c.url;i[c.uuid]=r(m)}}}return i},parseTextures:function(t,e){function n(l,c){return typeof l=="number"?l:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",l),c[l])}var i={};if(t!==void 0)for(var r=0,a=t.length;r<a;r++){var s=t[r];s.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),e[s.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",s.image);var o;Array.isArray(e[s.image])?o=new Ei(e[s.image]):o=new vt(e[s.image]),o.needsUpdate=!0,o.uuid=s.uuid,s.name!==void 0&&(o.name=s.name),s.mapping!==void 0&&(o.mapping=n(s.mapping,M1)),s.offset!==void 0&&o.offset.fromArray(s.offset),s.repeat!==void 0&&o.repeat.fromArray(s.repeat),s.center!==void 0&&o.center.fromArray(s.center),s.rotation!==void 0&&(o.rotation=s.rotation),s.wrap!==void 0&&(o.wrapS=n(s.wrap[0],ff),o.wrapT=n(s.wrap[1],ff)),s.format!==void 0&&(o.format=s.format),s.type!==void 0&&(o.type=s.type),s.encoding!==void 0&&(o.encoding=s.encoding),s.minFilter!==void 0&&(o.minFilter=n(s.minFilter,df)),s.magFilter!==void 0&&(o.magFilter=n(s.magFilter,df)),s.anisotropy!==void 0&&(o.anisotropy=s.anisotropy),s.flipY!==void 0&&(o.flipY=s.flipY),s.premultiplyAlpha!==void 0&&(o.premultiplyAlpha=s.premultiplyAlpha),s.unpackAlignment!==void 0&&(o.unpackAlignment=s.unpackAlignment),i[s.uuid]=o}return i},parseObject:function(t,e,n){var i;function r(m){return e[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),e[m]}function a(m){if(m!==void 0){if(Array.isArray(m)){for(var g=[],p=0,v=m.length;p<v;p++){var _=m[p];n[_]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",_),g.push(n[_])}return g}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}switch(t.type){case"Scene":i=new pc,t.background!==void 0&&Number.isInteger(t.background)&&(i.background=new Ge(t.background)),t.fog!==void 0&&(t.fog.type==="Fog"?i.fog=new Ra(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(i.fog=new Pa(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":i=new Et(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(i.focus=t.focus),t.zoom!==void 0&&(i.zoom=t.zoom),t.filmGauge!==void 0&&(i.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(i.filmOffset=t.filmOffset),t.view!==void 0&&(i.view=Object.assign({},t.view));break;case"OrthographicCamera":i=new Ja(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(i.zoom=t.zoom),t.view!==void 0&&(i.view=Object.assign({},t.view));break;case"AmbientLight":i=new Ic(t.color,t.intensity);break;case"DirectionalLight":i=new Dc(t.color,t.intensity);break;case"PointLight":i=new Pc(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":i=new Oc(t.color,t.intensity,t.width,t.height);break;case"SpotLight":i=new Cc(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":i=new Ac(t.color,t.groundColor,t.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var s=r(t.geometry),o=a(t.material);s.bones&&s.bones.length>0?i=new lo(s,o):i=new Oe(s,o);break;case"LOD":i=new oo;break;case"Line":i=new tt(r(t.geometry),a(t.material),t.mode);break;case"LineLoop":i=new vc(r(t.geometry),a(t.material));break;case"LineSegments":i=new Mt(r(t.geometry),a(t.material));break;case"PointCloud":case"Points":i=new yc(r(t.geometry),a(t.material));break;case"Sprite":i=new mc(a(t.material));break;case"Group":i=new Ca;break;default:i=new Ee}if(i.uuid=t.uuid,t.name!==void 0&&(i.name=t.name),t.matrix!==void 0?(i.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(i.matrixAutoUpdate=t.matrixAutoUpdate),i.matrixAutoUpdate&&i.matrix.decompose(i.position,i.quaternion,i.scale)):(t.position!==void 0&&i.position.fromArray(t.position),t.rotation!==void 0&&i.rotation.fromArray(t.rotation),t.quaternion!==void 0&&i.quaternion.fromArray(t.quaternion),t.scale!==void 0&&i.scale.fromArray(t.scale)),t.castShadow!==void 0&&(i.castShadow=t.castShadow),t.receiveShadow!==void 0&&(i.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.bias!==void 0&&(i.shadow.bias=t.shadow.bias),t.shadow.radius!==void 0&&(i.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&i.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(i.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(i.visible=t.visible),t.frustumCulled!==void 0&&(i.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(i.renderOrder=t.renderOrder),t.userData!==void 0&&(i.userData=t.userData),t.layers!==void 0&&(i.layers.mask=t.layers),t.children!==void 0)for(var l=t.children,c=0;c<l.length;c++)i.add(this.parseObject(l[c],e,n));if(t.type==="LOD")for(var u=t.levels,h=0;h<u.length;h++){var f=u[h],d=i.getObjectByProperty("uuid",f.object);d!==void 0&&i.addLevel(d,f.distance)}return i}});var M1={UVMapping:Kc,CubeReflectionMapping:eu,CubeRefractionMapping:ac,EquirectangularReflectionMapping:cd,EquirectangularRefractionMapping:sc,SphericalReflectionMapping:ud,CubeUVReflectionMapping:tu,CubeUVRefractionMapping:nu},ff={RepeatWrapping:yi,ClampToEdgeWrapping:Mn,MirroredRepeatWrapping:Pr},df={NearestFilter:en,NearestMipMapNearestFilter:iu,NearestMipMapLinearFilter:ru,LinearFilter:Yt,LinearMipMapNearestFilter:hd,LinearMipMapLinearFilter:Xo};function pf(t){typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.manager=t!==void 0?t:yn,this.options=void 0}pf.prototype={constructor:pf,setOptions:function(e){return this.options=e,this},load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,a=qr.get(t);if(a!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;fetch(t).then(function(s){return s.blob()}).then(function(s){return createImageBitmap(s,r.options)}).then(function(s){qr.add(t,s),e&&e(s),r.manager.itemEnd(t)}).catch(function(s){i&&i(s),r.manager.itemError(t),r.manager.itemEnd(t)})},setCrossOrigin:function(){return this},setPath:function(t){return this.path=t,this}};function Hd(){this.type="ShapePath",this.color=new Ge,this.subPaths=[],this.currentPath=null}Object.assign(Hd.prototype,{moveTo:function(t,e){this.currentPath=new Gn,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e)},lineTo:function(t,e){this.currentPath.lineTo(t,e)},quadraticCurveTo:function(t,e,n,i){this.currentPath.quadraticCurveTo(t,e,n,i)},bezierCurveTo:function(t,e,n,i,r,a){this.currentPath.bezierCurveTo(t,e,n,i,r,a)},splineThru:function(t){this.currentPath.splineThru(t)},toShapes:function(t,e){function n(H){for(var z=[],Z=0,w=H.length;Z<w;Z++){var R=H[Z],V=new Vi;V.curves=R.curves,z.push(V)}return z}function i(H,z){for(var Z=z.length,w=!1,R=Z-1,V=0;V<Z;R=V++){var F=z[R],O=z[V],ee=O.x-F.x,W=O.y-F.y;if(Math.abs(W)>Number.EPSILON){if(W<0&&(F=z[V],ee=-ee,O=z[R],W=-W),H.y<F.y||H.y>O.y)continue;if(H.y===F.y){if(H.x===F.x)return!0}else{var se=W*(H.x-F.x)-ee*(H.y-F.y);if(se===0)return!0;if(se<0)continue;w=!w}}else{if(H.y!==F.y)continue;if(O.x<=H.x&&H.x<=F.x||F.x<=H.x&&H.x<=O.x)return!0}}return w}var r=Mi.isClockWise,a=this.subPaths;if(a.length===0)return[];if(e===!0)return n(a);var s,o,l,c=[];if(a.length===1)return o=a[0],l=new Vi,l.curves=o.curves,c.push(l),c;var u=!r(a[0].getPoints());u=t?!u:u;var h=[],f=[],d=[],m=0,g;f[m]=void 0,d[m]=[];for(var p=0,v=a.length;p<v;p++)o=a[p],g=o.getPoints(),s=r(g),s=t?!s:s,s?(!u&&f[m]&&m++,f[m]={s:new Vi,p:g},f[m].s.curves=o.curves,u&&m++,d[m]=[]):d[m].push({h:o,p:g[0]});if(!f[0])return n(a);if(f.length>1){for(var _=!1,x=[],y=0,M=f.length;y<M;y++)h[y]=[];for(var y=0,M=f.length;y<M;y++)for(var T=d[y],L=0;L<T.length;L++){for(var b=T[L],S=!0,D=0;D<f.length;D++)i(b.p,f[D].p)&&(y!==D&&x.push({froms:y,tos:D,hole:L}),S?(S=!1,h[D].push(b)):_=!0);S&&h[y].push(b)}x.length>0&&(_||(d=h))}for(var N,p=0,J=f.length;p<J;p++){l=f[p].s,c.push(l),N=d[p];for(var k=0,G=N.length;k<G;k++)l.holes.push(N[k].h)}return c}});function Wd(t){this.type="Font",this.data=t}Object.assign(Wd.prototype,{isFont:!0,generateShapes:function(t,e){e===void 0&&(e=100);for(var n=[],i=w1(t,e,this.data),r=0,a=i.length;r<a;r++)Array.prototype.push.apply(n,i[r].toShapes());return n}});function w1(t,e,n){for(var i=Array.from?Array.from(t):String(t).split(""),r=e/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,s=[],o=0,l=0,c=0;c<i.length;c++){var u=i[c];if(u===`
`)o=0,l-=a;else{var h=S1(u,r,o,l,n);o+=h.offsetX,s.push(h.path)}}return s}function S1(t,e,n,i,r){var a=r.glyphs[t]||r.glyphs["?"];if(!!a){var s=new Hd,o,l,c,u,h,f,d,m;if(a.o)for(var g=a._cachedOutline||(a._cachedOutline=a.o.split(" ")),p=0,v=g.length;p<v;){var _=g[p++];switch(_){case"m":o=g[p++]*e+n,l=g[p++]*e+i,s.moveTo(o,l);break;case"l":o=g[p++]*e+n,l=g[p++]*e+i,s.lineTo(o,l);break;case"q":c=g[p++]*e+n,u=g[p++]*e+i,h=g[p++]*e+n,f=g[p++]*e+i,s.quadraticCurveTo(h,f,c,u);break;case"b":c=g[p++]*e+n,u=g[p++]*e+i,h=g[p++]*e+n,f=g[p++]*e+i,d=g[p++]*e+n,m=g[p++]*e+i,s.bezierCurveTo(h,f,d,m,c,u);break}}return{offsetX:a.ha*e,path:s}}}function E1(t){this.manager=t!==void 0?t:yn}Object.assign(E1.prototype,{load:function(t,e,n,i){var r=this,a=new di(this.manager);a.setPath(this.path),a.load(t,function(s){var o;try{o=JSON.parse(s)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),o=JSON.parse(s.substring(65,s.length-2))}var l=r.parse(o);e&&e(l)},n,i)},parse:function(t){return new Wd(t)},setPath:function(t){return this.path=t,this}});function Io(){}Io.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=this.handlers,n=0,i=e.length;n<i;n+=2){var r=e[n],a=e[n+1];if(r.test(t))return a}return null}};Object.assign(Io.prototype,{crossOrigin:"anonymous",onLoadStart:function(){},onLoadProgress:function(){},onLoadComplete:function(){},initMaterials:function(t,e,n){for(var i=[],r=0;r<t.length;++r)i[r]=this.createMaterial(t[r],e,n);return i},createMaterial:function(){var t={NoBlending:Xs,NormalBlending:Sr,AdditiveBlending:tc,SubtractiveBlending:nc,MultiplyBlending:ic,CustomBlending:ad},e=new Ge,n=new cu,i=new hu;return function(a,s,o){var l={};function c(d,m,g,p,v){var _=s+d,x=Io.Handlers.get(_),y;x!==null?y=x.load(_):(n.setCrossOrigin(o),y=n.load(_)),m!==void 0&&(y.repeat.fromArray(m),m[0]!==1&&(y.wrapS=yi),m[1]!==1&&(y.wrapT=yi)),g!==void 0&&y.offset.fromArray(g),p!==void 0&&(p[0]==="repeat"&&(y.wrapS=yi),p[0]==="mirror"&&(y.wrapS=Pr),p[1]==="repeat"&&(y.wrapT=yi),p[1]==="mirror"&&(y.wrapT=Pr)),v!==void 0&&(y.anisotropy=v);var M=it.generateUUID();return l[M]=y,M}var u={uuid:it.generateUUID(),type:"MeshLambertMaterial"};for(var h in a){var f=a[h];switch(h){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":u.name=f;break;case"blending":u.blending=t[f];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",h,"is no longer supported.");break;case"colorDiffuse":u.color=e.fromArray(f).getHex();break;case"colorSpecular":u.specular=e.fromArray(f).getHex();break;case"colorEmissive":u.emissive=e.fromArray(f).getHex();break;case"specularCoef":u.shininess=f;break;case"shading":f.toLowerCase()==="basic"&&(u.type="MeshBasicMaterial"),f.toLowerCase()==="phong"&&(u.type="MeshPhongMaterial"),f.toLowerCase()==="standard"&&(u.type="MeshStandardMaterial");break;case"mapDiffuse":u.map=c(f,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapEmissive":u.emissiveMap=c(f,a.mapEmissiveRepeat,a.mapEmissiveOffset,a.mapEmissiveWrap,a.mapEmissiveAnisotropy);break;case"mapEmissiveRepeat":case"mapEmissiveOffset":case"mapEmissiveWrap":case"mapEmissiveAnisotropy":break;case"mapLight":u.lightMap=c(f,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":u.aoMap=c(f,a.mapAORepeat,a.mapAOOffset,a.mapAOWrap,a.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":u.bumpMap=c(f,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);break;case"mapBumpScale":u.bumpScale=f;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":u.normalMap=c(f,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);break;case"mapNormalFactor":u.normalScale=f;break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":u.specularMap=c(f,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapMetalness":u.metalnessMap=c(f,a.mapMetalnessRepeat,a.mapMetalnessOffset,a.mapMetalnessWrap,a.mapMetalnessAnisotropy);break;case"mapMetalnessRepeat":case"mapMetalnessOffset":case"mapMetalnessWrap":case"mapMetalnessAnisotropy":break;case"mapRoughness":u.roughnessMap=c(f,a.mapRoughnessRepeat,a.mapRoughnessOffset,a.mapRoughnessWrap,a.mapRoughnessAnisotropy);break;case"mapRoughnessRepeat":case"mapRoughnessOffset":case"mapRoughnessWrap":case"mapRoughnessAnisotropy":break;case"mapAlpha":u.alphaMap=c(f,a.mapAlphaRepeat,a.mapAlphaOffset,a.mapAlphaWrap,a.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":u.side=Vt;break;case"doubleSided":u.side=er;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),u.opacity=f;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":u[h]=f;break;case"vertexColors":f===!0&&(u.vertexColors=Jr),f==="face"&&(u.vertexColors=rd);break;default:console.error("THREE.Loader.createMaterial: Unsupported",h,f);break}}return u.type==="MeshBasicMaterial"&&delete u.emissive,u.type!=="MeshPhongMaterial"&&delete u.specular,u.opacity<1&&(u.transparent=!0),i.setTextures(l),i.parse(u)}}()});var Gs,jd={getContext:function(){return Gs===void 0&&(Gs=new(window.AudioContext||window.webkitAudioContext)),Gs},setContext:function(t){Gs=t}};function Xd(t){this.manager=t!==void 0?t:yn}Object.assign(Xd.prototype,{load:function(t,e,n,i){var r=new di(this.manager);r.setResponseType("arraybuffer"),r.setPath(this.path),r.load(t,function(a){var s=a.slice(0),o=jd.getContext();o.decodeAudioData(s,function(l){e(l)})},n,i)},setPath:function(t){return this.path=t,this}});function T1(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Et,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Et,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}Object.assign(T1.prototype,{update:function(){var t,e,n,i,r,a,s,o,l=new Ye,c=new Ye;return function(h){var f=t!==this||e!==h.focus||n!==h.fov||i!==h.aspect*this.aspect||r!==h.near||a!==h.far||s!==h.zoom||o!==this.eyeSep;if(f){t=this,e=h.focus,n=h.fov,i=h.aspect*this.aspect,r=h.near,a=h.far,s=h.zoom;var d=h.projectionMatrix.clone();o=this.eyeSep/2;var m=o*r/e,g=r*Math.tan(it.DEG2RAD*n*.5)/s,p,v;c.elements[12]=-o,l.elements[12]=o,p=-g*i+m,v=g*i+m,d.elements[0]=2*r/(v-p),d.elements[8]=(v+p)/(v-p),this.cameraL.projectionMatrix.copy(d),p=-g*i-m,v=g*i-m,d.elements[0]=2*r/(v-p),d.elements[8]=(v+p)/(v-p),this.cameraR.projectionMatrix.copy(d)}this.cameraL.matrixWorld.copy(h.matrixWorld).multiply(c),this.cameraR.matrixWorld.copy(h.matrixWorld).multiply(l)}}()});function Oo(t,e,n,i){Ee.call(this),this.type="CubeCamera";var r=90,a=1,s=new Et(r,a,t,e);s.up.set(0,-1,0),s.lookAt(new C(1,0,0)),this.add(s);var o=new Et(r,a,t,e);o.up.set(0,-1,0),o.lookAt(new C(-1,0,0)),this.add(o);var l=new Et(r,a,t,e);l.up.set(0,0,1),l.lookAt(new C(0,1,0)),this.add(l);var c=new Et(r,a,t,e);c.up.set(0,0,-1),c.lookAt(new C(0,-1,0)),this.add(c);var u=new Et(r,a,t,e);u.up.set(0,-1,0),u.lookAt(new C(0,0,1)),this.add(u);var h=new Et(r,a,t,e);h.up.set(0,-1,0),h.lookAt(new C(0,0,-1)),this.add(h),i=i||{format:Rr,magFilter:Yt,minFilter:Yt},this.renderTarget=new Sa(n,n,i),this.renderTarget.texture.name="CubeCamera",this.update=function(f,d){this.parent===null&&this.updateMatrixWorld();var m=this.renderTarget,g=m.texture.generateMipmaps;m.texture.generateMipmaps=!1,m.activeCubeFace=0,f.render(d,s,m),m.activeCubeFace=1,f.render(d,o,m),m.activeCubeFace=2,f.render(d,l,m),m.activeCubeFace=3,f.render(d,c,m),m.activeCubeFace=4,f.render(d,u,m),m.texture.generateMipmaps=g,m.activeCubeFace=5,f.render(d,h,m),f.setRenderTarget(null)},this.clear=function(f,d,m,g){for(var p=this.renderTarget,v=0;v<6;v++)p.activeCubeFace=v,f.setRenderTarget(p),f.clear(d,m,g);f.setRenderTarget(null)}}Oo.prototype=Object.create(Ee.prototype);Oo.prototype.constructor=Oo;function qd(t){this.autoStart=t!==void 0?t:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign(qd.prototype,{start:function(){this.startTime=(typeof performance=="undefined"?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var e=(typeof performance=="undefined"?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}});function mf(){Ee.call(this),this.type="AudioListener",this.context=jd.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0}mf.prototype=Object.assign(Object.create(Ee.prototype),{constructor:mf,getInput:function(){return this.gain},removeFilter:function(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this},updateMatrixWorld:function(){var t=new C,e=new ct,n=new C,i=new C,r=new qd;return function(s){Ee.prototype.updateMatrixWorld.call(this,s);var o=this.context.listener,l=this.up;if(this.timeDelta=r.getDelta(),this.matrixWorld.decompose(t,e,n),i.set(0,0,-1).applyQuaternion(e),o.positionX){var c=this.context.currentTime+this.timeDelta;o.positionX.linearRampToValueAtTime(t.x,c),o.positionY.linearRampToValueAtTime(t.y,c),o.positionZ.linearRampToValueAtTime(t.z,c),o.forwardX.linearRampToValueAtTime(i.x,c),o.forwardY.linearRampToValueAtTime(i.y,c),o.forwardZ.linearRampToValueAtTime(i.z,c),o.upX.linearRampToValueAtTime(l.x,c),o.upY.linearRampToValueAtTime(l.y,c),o.upZ.linearRampToValueAtTime(l.z,c)}else o.setPosition(t.x,t.y,t.z),o.setOrientation(i.x,i.y,i.z,l.x,l.y,l.z)}}()});function Qa(t){Ee.call(this),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.startTime=0,this.offset=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]}Qa.prototype=Object.assign(Object.create(Ee.prototype),{constructor:Qa,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},setMediaElementSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}var t=this.context.createBufferSource();return t.buffer=this.buffer,t.detune.value=this.detune,t.loop=this.loop,t.onended=this.onEnded.bind(this),t.playbackRate.setValueAtTime(this.playbackRate,this.startTime),this.startTime=this.context.currentTime,t.start(this.startTime,this.offset),this.isPlaying=!0,this.source=t,this.connect()},pause:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this.source.stop(),this.source.onended=null,this.offset+=(this.context.currentTime-this.startTime)*this.playbackRate,this.isPlaying=!1),this},stop:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.source.stop(),this.source.onended=null,this.offset=0,this.isPlaying=!1,this},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),this.isPlaying===!0?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},setDetune:function(t){return this.detune=t,this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}});function gf(t){Qa.call(this,t),this.panner=this.context.createPanner(),this.panner.connect(this.gain)}gf.prototype=Object.assign(Object.create(Qa.prototype),{constructor:gf,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){return this.panner.refDistance=t,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){return this.panner.rolloffFactor=t,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){return this.panner.distanceModel=t,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){return this.panner.maxDistance=t,this},setDirectionalCone:function(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this},updateMatrixWorld:function(){var t=new C,e=new ct,n=new C,i=new C;return function(a){if(Ee.prototype.updateMatrixWorld.call(this,a),this.isPlaying!==!1){this.matrixWorld.decompose(t,e,n),i.set(0,0,1).applyQuaternion(e);var s=this.panner;if(s.positionX){var o=this.context.currentTime+this.listener.timeDelta;s.positionX.linearRampToValueAtTime(t.x,o),s.positionY.linearRampToValueAtTime(t.y,o),s.positionZ.linearRampToValueAtTime(t.z,o),s.orientationX.linearRampToValueAtTime(i.x,o),s.orientationY.linearRampToValueAtTime(i.y,o),s.orientationZ.linearRampToValueAtTime(i.z,o)}else s.setPosition(t.x,t.y,t.z),s.setOrientation(i.x,i.y,i.z)}}}()});function Yd(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e!==void 0?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}Object.assign(Yd.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var t=0,e=this.getFrequencyData(),n=0;n<e.length;n++)t+=e[n];return t/e.length}});function $d(t,e,n){this.binding=t,this.valueSize=n;var i=Float64Array,r;switch(e){case"quaternion":r=this._slerp;break;case"string":case"bool":i=Array,r=this._select;break;default:r=this._lerp}this.buffer=new i(n*4),this._mixBufferRegion=r,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}Object.assign($d.prototype,{accumulate:function(t,e){var n=this.buffer,i=this.valueSize,r=t*i+i,a=this.cumulativeWeight;if(a===0){for(var s=0;s!==i;++s)n[r+s]=n[s];a=e}else{a+=e;var o=e/a;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=a},apply:function(t){var e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,r<1){var s=e*3;this._mixBufferRegion(n,i,s,1-r,e)}for(var o=e,l=e+e;o!==l;++o)if(n[o]!==n[o+e]){a.setValue(n,i);break}},saveOriginalState:function(){var t=this.binding,e=this.buffer,n=this.valueSize,i=n*3;t.getValue(e,i);for(var r=n,a=i;r!==a;++r)e[r]=e[i+r%n];this.cumulativeWeight=0},restoreOriginalState:function(){var t=this.valueSize*3;this.binding.setValue(this.buffer,t)},_select:function(t,e,n,i,r){if(i>=.5)for(var a=0;a!==r;++a)t[e+a]=t[n+a]},_slerp:function(t,e,n,i){ct.slerpFlat(t,e,t,e,t,n,i)},_lerp:function(t,e,n,i,r){for(var a=1-i,s=0;s!==r;++s){var o=e+s;t[o]=t[o]*a+t[n+s]*i}}});var Wl="\\[\\]\\.:\\/";function Zd(t,e,n){var i=n||$t.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}Object.assign(Zd.prototype,{getValue:function(t,e){this.bind();var n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)},setValue:function(t,e){for(var n=this._bindings,i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}});function $t(t,e,n){this.path=e,this.parsedPath=n||$t.parseTrackName(e),this.node=$t.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign($t,{Composite:Zd,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new $t.Composite(t,e,n):new $t(t,e,n)},sanitizeNodeName:function(){var t=new RegExp("["+Wl+"]","g");return function(n){return n.replace(/\s/g,"_").replace(t,"")}}(),parseTrackName:function(){var t="[^"+Wl+"]",e="[^"+Wl.replace("\\.","")+"]",n=/((?:WC+[\/:])*)/.source.replace("WC",t),i=/(WCOD+)?/.source.replace("WCOD",e),r=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",t),a=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",t),s=new RegExp("^"+n+i+r+a+"$"),o=["material","materials","bones"];return function(c){var u=s.exec(c);if(!u)throw new Error("PropertyBinding: Cannot parse trackName: "+c);var h={nodeName:u[2],objectName:u[3],objectIndex:u[4],propertyName:u[5],propertyIndex:u[6]},f=h.nodeName&&h.nodeName.lastIndexOf(".");if(f!==void 0&&f!==-1){var d=h.nodeName.substring(f+1);o.indexOf(d)!==-1&&(h.nodeName=h.nodeName.substring(0,f),h.objectName=d)}if(h.propertyName===null||h.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+c);return h}}(),findNode:function(t,e){if(!e||e===""||e==="root"||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){var n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){var i=function(a){for(var s=0;s<a.length;s++){var o=a[s];if(o.name===e||o.uuid===e)return o;var l=i(o.children);if(l)return l}return null},r=i(t.children);if(r)return r}return null}});Object.assign($t.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,n){e[n]=this.node[this.propertyName]},function(e,n){for(var i=this.resolvedProperty,r=0,a=i.length;r!==a;++r)e[n++]=i[r]},function(e,n){e[n]=this.resolvedProperty[this.propertyIndex]},function(e,n){this.resolvedProperty.toArray(e,n)}],SetterByBindingTypeAndVersioning:[[function(e,n){this.targetObject[this.propertyName]=e[n]},function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.needsUpdate=!0},function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){for(var i=this.resolvedProperty,r=0,a=i.length;r!==a;++r)i[r]=e[n++]},function(e,n){for(var i=this.resolvedProperty,r=0,a=i.length;r!==a;++r)i[r]=e[n++];this.targetObject.needsUpdate=!0},function(e,n){for(var i=this.resolvedProperty,r=0,a=i.length;r!==a;++r)i[r]=e[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){this.resolvedProperty[this.propertyIndex]=e[n]},function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.needsUpdate=!0},function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){this.resolvedProperty.fromArray(e,n)},function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.needsUpdate=!0},function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,n){this.bind(),this.getValue(e,n)},setValue:function(e,n){this.bind(),this.setValue(e,n)},bind:function(){var t=this.node,e=this.parsedPath,n=e.objectName,i=e.propertyName,r=e.propertyIndex;if(t||(t=$t.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){var a=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(var s=0;s<t.length;s++)if(t[s].name===a){a=s;break}break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(a!==void 0){if(t[a]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[a]}}var o=t[i];if(o===void 0){var l=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",t);return}var c=this.Versioning.None;this.targetObject=t,t.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:t.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);var u=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}for(var s=0;s<this.node.geometry.morphAttributes.position.length;s++)if(t.geometry.morphAttributes.position[s].name===r){r=s;break}}else{if(!t.geometry.morphTargets){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);return}for(var s=0;s<this.node.geometry.morphTargets.length;s++)if(t.geometry.morphTargets[s].name===r){r=s;break}}}u=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(u=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}});//!\ DECLARE ALIAS AFTER assign prototype !
Object.assign($t.prototype,{_getValue_unbound:$t.prototype.getValue,_setValue_unbound:$t.prototype.setValue});function A1(){this.uuid=it.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var i=this;this.stats={objects:{get total(){return i._objects.length},get inUse(){return this.total-i.nCachedObjects_}},get bindingsPerObject(){return i._bindings.length}}}Object.assign(A1.prototype,{isAnimationObjectGroup:!0,add:function(){for(var t=this._objects,e=t.length,n=this.nCachedObjects_,i=this._indicesByUUID,r=this._paths,a=this._parsedPaths,s=this._bindings,o=s.length,l=void 0,c=0,u=arguments.length;c!==u;++c){var h=arguments[c],f=h.uuid,d=i[f];if(d===void 0){d=e++,i[f]=d,t.push(h);for(var m=0,g=o;m!==g;++m)s[m].push(new $t(h,r[m],a[m]))}else if(d<n){l=t[d];var p=--n,v=t[p];i[v.uuid]=d,t[d]=v,i[f]=p,t[p]=h;for(var m=0,g=o;m!==g;++m){var _=s[m],x=_[p],y=_[d];_[d]=x,y===void 0&&(y=new $t(h,r[m],a[m])),_[p]=y}}else t[d]!==l&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=n},remove:function(){for(var t=this._objects,e=this.nCachedObjects_,n=this._indicesByUUID,i=this._bindings,r=i.length,a=0,s=arguments.length;a!==s;++a){var o=arguments[a],l=o.uuid,c=n[l];if(c!==void 0&&c>=e){var u=e++,h=t[u];n[h.uuid]=c,t[c]=h,n[l]=u,t[u]=o;for(var f=0,d=r;f!==d;++f){var m=i[f],g=m[u],p=m[c];m[c]=g,m[u]=p}}}this.nCachedObjects_=e},uncache:function(){for(var t=this._objects,e=t.length,n=this.nCachedObjects_,i=this._indicesByUUID,r=this._bindings,a=r.length,s=0,o=arguments.length;s!==o;++s){var l=arguments[s],c=l.uuid,u=i[c];if(u!==void 0)if(delete i[c],u<n){var h=--n,f=t[h],d=--e,m=t[d];i[f.uuid]=u,t[u]=f,i[m.uuid]=h,t[h]=m,t.pop();for(var g=0,p=a;g!==p;++g){var v=r[g],_=v[h],x=v[d];v[u]=_,v[h]=x,v.pop()}}else{var d=--e,m=t[d];i[m.uuid]=u,t[u]=m,t.pop();for(var g=0,p=a;g!==p;++g){var v=r[g];v[u]=v[d],v.pop()}}}this.nCachedObjects_=n},subscribe_:function(t,e){var n=this._bindingsIndicesByPath,i=n[t],r=this._bindings;if(i!==void 0)return r[i];var a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,u=new Array(l);i=r.length,n[t]=i,a.push(t),s.push(e),r.push(u);for(var h=c,f=o.length;h!==f;++h){var d=o[h];u[h]=new $t(d,t,e)}return u},unsubscribe_:function(t){var e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){var i=this._paths,r=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s],l=t[s];e[l]=n,a[n]=o,a.pop(),r[n]=r[s],r.pop(),i[n]=i[s],i.pop()}}});function Jd(t,e,n){this._mixer=t,this._clip=e,this._localRoot=n||null;for(var i=e.tracks,r=i.length,a=new Array(r),s={endingStart:Dr,endingEnd:Dr},o=0;o!==r;++o){var l=i[o].createInterpolant(null);a[o]=l,l.settings=s}this._interpolantSettings=s,this._interpolants=a,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=f_,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}Object.assign(Jd.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){var i=this._clip.duration,r=t._clip.duration,a=r/i,s=i/r;t.warp(1,a,e),this.warp(s,1,e)}return this},crossFadeTo:function(t,e,n){return t.crossFadeFrom(this,e,n)},stopFading:function(){var t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,n){var i=this._mixer,r=i.time,a=this._timeScaleInterpolant,s=this.timeScale;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);var o=a.parameterPositions,l=a.sampleValues;return o[0]=r,o[1]=r+n,l[0]=t/s,l[1]=e/s,this},stopWarping:function(){var t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}var r=this._startTime;if(r!==null){var a=(t-r)*n;if(a<0||n===0)return;this._startTime=null,e=n*a}e*=this._updateTimeScale(t);var s=this._updateTime(e),o=this._updateWeight(t);if(o>0)for(var l=this._interpolants,c=this._propertyBindings,u=0,h=l.length;u!==h;++u)l[u].evaluate(s),c[u].accumulate(i,o)},_updateWeight:function(t){var e=0;if(this.enabled){e=this.weight;var n=this._weightInterpolant;if(n!==null){var i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){var e=0;if(!this.paused){e=this.timeScale;var n=this._timeScaleInterpolant;if(n!==null){var i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e},_updateTime:function(t){var e=this.time+t,n=this._clip.duration,i=this.loop,r=this._loopCount,a=i===d_;if(t===0)return r===-1?e:a&&(r&1)===1?n-e:e;if(i===h_){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(e>=n)e=n;else if(e<0)e=0;else break e;this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(r===-1&&(t>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),e>=n||e<0){var s=Math.floor(e/n);e-=n*s,r+=Math.abs(s);var o=this.repetitions-r;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=t>0?n:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(o===1){var l=t<0;this._setEndings(l,!l,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:s})}}if(a&&(r&1)===1)return this.time=e,n-e}return this.time=e,e},_setEndings:function(t,e,n){var i=this._interpolantSettings;n?(i.endingStart=_r,i.endingEnd=_r):(t?i.endingStart=this.zeroSlopeAtStart?_r:Dr:i.endingStart=eo,e?i.endingEnd=this.zeroSlopeAtEnd?_r:Dr:i.endingEnd=eo)},_scheduleFading:function(t,e,n){var i=this._mixer,r=i.time,a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);var s=a.parameterPositions,o=a.sampleValues;return s[0]=r,o[0]=e,s[1]=r+t,o[1]=n,this}});function vf(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}vf.prototype=Object.assign(Object.create(Zt.prototype),{constructor:vf,_bindAction:function(t,e){var n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,a=t._propertyBindings,s=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName,c=l[o];c===void 0&&(c={},l[o]=c);for(var u=0;u!==r;++u){var h=i[u],f=h.name,d=c[f];if(d!==void 0)a[u]=d;else{if(d=a[u],d!==void 0){d._cacheIndex===null&&(++d.referenceCount,this._addInactiveBinding(d,o,f));continue}var m=e&&e._propertyBindings[u].binding.parsedPath;d=new $d($t.create(n,f,m),h.ValueTypeName,h.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,o,f),a[u]=d}s[u].resultBuffer=d.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){var e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}for(var r=t._propertyBindings,a=0,s=r.length;a!==s;++a){var o=r[a];o.useCount++===0&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){for(var e=t._propertyBindings,n=0,i=e.length;n!==i;++n){var r=e[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){var e=t._cacheIndex;return e!==null&&e<this._nActiveActions},_addInactiveAction:function(t,e,n){var i=this._actions,r=this._actionsByClip,a=r[e];if(a===void 0)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=a;else{var s=a.knownActions;t._byClipCacheIndex=s.length,s.push(t)}t._cacheIndex=i.length,i.push(t),a.actionByRoot[n]=t},_removeInactiveAction:function(t){var e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;var r=t._clip.uuid,a=this._actionsByClip,s=a[r],o=s.knownActions,l=o[o.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),t._byClipCacheIndex=null;var u=s.actionByRoot,h=(t._localRoot||this._root).uuid;delete u[h],o.length===0&&delete a[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,n=0,i=e.length;n!==i;++n){var r=e[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}},_lendAction:function(t){var e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackAction:function(t){var e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_addInactiveBinding:function(t,e,n){var i=this._bindingsByRootAndName,r=i[e],a=this._bindings;r===void 0&&(r={},i[e]=r),r[n]=t,t._cacheIndex=a.length,a.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,s=a[i],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete s[r];e:{for(var c in s)break e;delete a[i]}},_lendBinding:function(t){var e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackBinding:function(t){var e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,n=t[e];return n===void 0&&(n=new Ro(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e){var n=e||this._root,i=n.uuid,r=typeof t=="string"?Bn.findByName(n,t):t,a=r!==null?r.uuid:t,s=this._actionsByClip[a],o=null;if(s!==void 0){var l=s.actionByRoot[i];if(l!==void 0)return l;o=s.knownActions[0],r===null&&(r=o._clip)}if(r===null)return null;var c=new Jd(this,r,e);return this._bindAction(c,o),this._addInactiveAction(c,a,i),c},existingAction:function(t,e){var n=e||this._root,i=n.uuid,r=typeof t=="string"?Bn.findByName(n,t):t,a=r?r.uuid:t,s=this._actionsByClip[a];return s!==void 0&&s.actionByRoot[i]||null},stopAllAction:function(){var t=this._actions,e=this._nActiveActions,n=this._bindings,i=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var r=0;r!==e;++r)t[r].reset();for(var r=0;r!==i;++r)n[r].useCount=0;return this},update:function(t){t*=this.timeScale;for(var e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),a=this._accuIndex^=1,s=0;s!==n;++s){var o=e[s];o._update(i,t,r,a)}for(var l=this._bindings,c=this._nActiveBindings,s=0;s!==c;++s)l[s].apply(a);return this},getRoot:function(){return this._root},uncacheClip:function(t){var e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){for(var a=r.knownActions,s=0,o=a.length;s!==o;++s){var l=a[s];this._deactivateAction(l);var c=l._cacheIndex,u=e[e.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=c,e[c]=u,e.pop(),this._removeInactiveBindingsForAction(l)}delete i[n]}},uncacheRoot:function(t){var e=t.uuid,n=this._actionsByClip;for(var i in n){var r=n[i].actionByRoot,a=r[e];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}var s=this._bindingsByRootAndName,o=s[e];if(o!==void 0)for(var l in o){var c=o[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}},uncacheAction:function(t,e){var n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});function Fc(t){typeof t=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}Fc.prototype.clone=function(){return new Fc(this.value.clone===void 0?this.value:this.value.clone())};function yf(){Re.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}yf.prototype=Object.assign(Object.create(Re.prototype),{constructor:yf,isInstancedBufferGeometry:!0,copy:function(t){return Re.prototype.copy.call(this,t),this.maxInstancedCount=t.maxInstancedCount,this},clone:function(){return new this.constructor().copy(this)}});function xf(t,e,n){Fr.call(this,t,e),this.meshPerAttribute=n||1}xf.prototype=Object.assign(Object.create(Fr.prototype),{constructor:xf,isInstancedInterleavedBuffer:!0,copy:function(t){return Fr.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}});function _f(t,e,n,i){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),st.call(this,t,e,n),this.meshPerAttribute=i||1}_f.prototype=Object.assign(Object.create(st.prototype),{constructor:_f,isInstancedBufferAttribute:!0,copy:function(t){return st.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}});function fu(t,e,n,i){this.ray=new Qr(t,e),this.near=n||0,this.far=i||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function bf(t,e){return t.distance-e.distance}function Nc(t,e,n,i){if(t.visible!==!1&&(t.raycast(e,n),i===!0))for(var r=t.children,a=0,s=r.length;a<s;a++)Nc(r[a],e,n,!0)}Object.assign(fu.prototype,{linePrecision:1,set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize()):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e,n){var i=n||[];return Nc(t,this,i,e),i.sort(bf),i},intersectObjects:function(t,e,n){var i=n||[];if(Array.isArray(t)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(var r=0,a=t.length;r<a;r++)Nc(t[r],this,i,e);return i.sort(bf),i}});function Yr(t,e,n){return this.radius=t!==void 0?t:1,this.phi=e!==void 0?e:0,this.theta=n!==void 0?n:0,this}Object.assign(Yr.prototype,{set:function(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},makeSafe:function(){var t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(it.clamp(e/this.radius,-1,1))),this}});function L1(t,e,n){return this.radius=t!==void 0?t:1,this.theta=e!==void 0?e:0,this.y=n!==void 0?n:0,this}Object.assign(L1.prototype,{set:function(t,e,n){return this.radius=t,this.theta=e,this.y=n,this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}});function Qd(t,e){this.min=t!==void 0?t:new le(1/0,1/0),this.max=e!==void 0?e:new le(-1/0,-1/0)}Object.assign(Qd.prototype,{set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new le;return function(n,i){var r=t.copy(i).multiplyScalar(.5);return this.min.copy(n).sub(r),this.max.copy(n).add(r),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){return t===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new le),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return t===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new le),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return e===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new le),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return e===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new le),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new le;return function(n){var i=t.copy(n).clamp(this.min,this.max);return i.sub(n).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});function Kd(t,e){this.start=t!==void 0?t:new C,this.end=e!==void 0?e:new C}Object.assign(Kd.prototype,{set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){return t===void 0&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new C),t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return t===void 0&&(console.warn("THREE.Line3: .delta() target is now required"),t=new C),t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){return e===void 0&&(console.warn("THREE.Line3: .at() target is now required"),e=new C),this.delta(e).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var t=new C,e=new C;return function(i,r){t.subVectors(i,this.start),e.subVectors(this.end,this.start);var a=e.dot(e),s=e.dot(t),o=s/a;return r&&(o=it.clamp(o,0,1)),o}}(),closestPointToPoint:function(t,e,n){var i=this.closestPointToPointParameter(t,e);return n===void 0&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new C),this.delta(n).multiplyScalar(i).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}});function Fo(t){Ee.call(this),this.material=t,this.render=function(){}}Fo.prototype=Object.create(Ee.prototype);Fo.prototype.constructor=Fo;Fo.prototype.isImmediateRenderObject=!0;function No(t,e,n,i){this.object=t,this.size=e!==void 0?e:1;var r=n!==void 0?n:16711680,a=i!==void 0?i:1,s=0,o=this.object.geometry;o&&o.isGeometry?s=o.faces.length*3:o&&o.isBufferGeometry&&(s=o.attributes.normal.count);var l=new Re,c=new Ae(s*2*3,3);l.addAttribute("position",c),Mt.call(this,l,new yt({color:r,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}No.prototype=Object.create(Mt.prototype);No.prototype.constructor=No;No.prototype.update=function(){var t=new C,e=new C,n=new zt;return function(){var r=["a","b","c"];this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);var a=this.object.matrixWorld,s=this.geometry.attributes.position,o=this.object.geometry;if(o&&o.isGeometry)for(var l=o.vertices,c=o.faces,u=0,h=0,f=c.length;h<f;h++)for(var d=c[h],m=0,g=d.vertexNormals.length;m<g;m++){var p=l[d[r[m]]],v=d.vertexNormals[m];t.copy(p).applyMatrix4(a),e.copy(v).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),s.setXYZ(u,t.x,t.y,t.z),u=u+1,s.setXYZ(u,e.x,e.y,e.z),u=u+1}else if(o&&o.isBufferGeometry)for(var _=o.attributes.position,x=o.attributes.normal,u=0,m=0,g=_.count;m<g;m++)t.set(_.getX(m),_.getY(m),_.getZ(m)).applyMatrix4(a),e.set(x.getX(m),x.getY(m),x.getZ(m)),e.applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),s.setXYZ(u,t.x,t.y,t.z),u=u+1,s.setXYZ(u,e.x,e.y,e.z),u=u+1;s.needsUpdate=!0}}();function Ka(t,e){Ee.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;for(var n=new Re,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],r=0,a=1,s=32;r<s;r++,a++){var o=r/s*Math.PI*2,l=a/s*Math.PI*2;i.push(Math.cos(o),Math.sin(o),1,Math.cos(l),Math.sin(l),1)}n.addAttribute("position",new Ae(i,3));var c=new yt({fog:!1});this.cone=new Mt(n,c),this.add(this.cone),this.update()}Ka.prototype=Object.create(Ee.prototype);Ka.prototype.constructor=Ka;Ka.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()};Ka.prototype.update=function(){var t=new C;return function(){this.light.updateMatrixWorld();var n=this.light.distance?this.light.distance:1e3,i=n*Math.tan(this.light.angle);this.cone.scale.set(i,i,n),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}();function ep(t){var e=[];t&&t.isBone&&e.push(t);for(var n=0;n<t.children.length;n++)e.push.apply(e,ep(t.children[n]));return e}function es(t){for(var e=ep(t),n=new Re,i=[],r=[],a=new Ge(0,0,1),s=new Ge(0,1,0),o=0;o<e.length;o++){var l=e[o];l.parent&&l.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(s.r,s.g,s.b))}n.addAttribute("position",new Ae(i,3)),n.addAttribute("color",new Ae(r,3));var c=new yt({vertexColors:Jr,depthTest:!1,depthWrite:!1,transparent:!0});Mt.call(this,n,c),this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}es.prototype=Object.create(Mt.prototype);es.prototype.constructor=es;es.prototype.updateMatrixWorld=function(){var t=new C,e=new Ye,n=new Ye;return function(r){var a=this.bones,s=this.geometry,o=s.getAttribute("position");n.getInverse(this.root.matrixWorld);for(var l=0,c=0;l<a.length;l++){var u=a[l];u.parent&&u.parent.isBone&&(e.multiplyMatrices(n,u.matrixWorld),t.setFromMatrixPosition(e),o.setXYZ(c,t.x,t.y,t.z),e.multiplyMatrices(n,u.parent.matrixWorld),t.setFromMatrixPosition(e),o.setXYZ(c+1,t.x,t.y,t.z),c+=2)}s.getAttribute("position").needsUpdate=!0,Ee.prototype.updateMatrixWorld.call(this,r)}}();function ts(t,e,n){this.light=t,this.light.updateMatrixWorld(),this.color=n;var i=new Qi(e,4,2),r=new nn({wireframe:!0,fog:!1});Oe.call(this,i,r),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}ts.prototype=Object.create(Oe.prototype);ts.prototype.constructor=ts;ts.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()};ts.prototype.update=function(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)};function ns(t,e){this.type="RectAreaLightHelper",this.light=t,this.color=e;var n=[1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],i=new Re;i.addAttribute("position",new Ae(n,3)),i.computeBoundingSphere();var r=new yt({fog:!1});tt.call(this,i,r);var a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],s=new Re;s.addAttribute("position",new Ae(a,3)),s.computeBoundingSphere(),this.add(new Oe(s,new nn({side:THREE.BackSide,fog:!1}))),this.update()}ns.prototype=Object.create(tt.prototype);ns.prototype.constructor=ns;ns.prototype.update=function(){if(this.scale.set(.5*this.light.width,.5*this.light.height,1),this.color!==void 0)this.material.color.set(this.color),this.children[0].material.color.set(this.color);else{this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);var t=this.material.color,e=Math.max(t.r,t.g,t.b);e>1&&t.multiplyScalar(1/e),this.children[0].material.color.copy(this.material.color)}};ns.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()};function is(t,e,n){Ee.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;var i=new un(e);i.rotateY(Math.PI*.5),this.material=new nn({wireframe:!0,fog:!1}),this.color===void 0&&(this.material.vertexColors=Jr);var r=i.getAttribute("position"),a=new Float32Array(r.count*3);i.addAttribute("color",new st(a,3)),this.add(new Oe(i,this.material)),this.update()}is.prototype=Object.create(Ee.prototype);is.prototype.constructor=is;is.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()};is.prototype.update=function(){var t=new C,e=new Ge,n=new Ge;return function(){var r=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{var a=r.geometry.getAttribute("color");e.copy(this.light.color),n.copy(this.light.groundColor);for(var s=0,o=a.count;s<o;s++){var l=s<o/2?e:n;a.setXYZ(s,l.r,l.g,l.b)}a.needsUpdate=!0}r.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate())}}();function zo(t,e,n,i){t=t||10,e=e||10,n=new Ge(n!==void 0?n:4473924),i=new Ge(i!==void 0?i:8947848);for(var r=e/2,a=t/e,s=t/2,o=[],l=[],c=0,u=0,h=-s;c<=e;c++,h+=a){o.push(-s,0,h,s,0,h),o.push(h,0,-s,h,0,s);var f=c===r?n:i;f.toArray(l,u),u+=3,f.toArray(l,u),u+=3,f.toArray(l,u),u+=3,f.toArray(l,u),u+=3}var d=new Re;d.addAttribute("position",new Ae(o,3)),d.addAttribute("color",new Ae(l,3));var m=new yt({vertexColors:Jr});Mt.call(this,d,m)}zo.prototype=Object.create(Mt.prototype);zo.prototype.constructor=zo;function zc(t,e,n,i,r,a){t=t||10,e=e||16,n=n||8,i=i||64,r=new Ge(r!==void 0?r:4473924),a=new Ge(a!==void 0?a:8947848);var s=[],o=[],l,c,u,h,f,d,m;for(h=0;h<=e;h++)u=h/e*(Math.PI*2),l=Math.sin(u)*t,c=Math.cos(u)*t,s.push(0,0,0),s.push(l,0,c),m=h&1?r:a,o.push(m.r,m.g,m.b),o.push(m.r,m.g,m.b);for(h=0;h<=n;h++)for(m=h&1?r:a,d=t-t/n*h,f=0;f<i;f++)u=f/i*(Math.PI*2),l=Math.sin(u)*d,c=Math.cos(u)*d,s.push(l,0,c),o.push(m.r,m.g,m.b),u=(f+1)/i*(Math.PI*2),l=Math.sin(u)*d,c=Math.cos(u)*d,s.push(l,0,c),o.push(m.r,m.g,m.b);var g=new Re;g.addAttribute("position",new Ae(s,3)),g.addAttribute("color",new Ae(o,3));var p=new yt({vertexColors:Jr});Mt.call(this,g,p)}zc.prototype=Object.create(Mt.prototype);zc.prototype.constructor=zc;function Uo(t,e,n,i){this.object=t,this.size=e!==void 0?e:1;var r=n!==void 0?n:16776960,a=i!==void 0?i:1,s=0,o=this.object.geometry;o&&o.isGeometry?s=o.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var l=new Re,c=new Ae(s*2*3,3);l.addAttribute("position",c),Mt.call(this,l,new yt({color:r,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}Uo.prototype=Object.create(Mt.prototype);Uo.prototype.constructor=Uo;Uo.prototype.update=function(){var t=new C,e=new C,n=new zt;return function(){this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);for(var r=this.object.matrixWorld,a=this.geometry.attributes.position,s=this.object.geometry,o=s.vertices,l=s.faces,c=0,u=0,h=l.length;u<h;u++){var f=l[u],d=f.normal;t.copy(o[f.a]).add(o[f.b]).add(o[f.c]).divideScalar(3).applyMatrix4(r),e.copy(d).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),a.setXYZ(c,t.x,t.y,t.z),c=c+1,a.setXYZ(c,e.x,e.y,e.z),c=c+1}a.needsUpdate=!0}}();function rs(t,e,n){Ee.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,e===void 0&&(e=1);var i=new Re;i.addAttribute("position",new Ae([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));var r=new yt({fog:!1});this.lightPlane=new tt(i,r),this.add(this.lightPlane),i=new Re,i.addAttribute("position",new Ae([0,0,0,0,0,1],3)),this.targetLine=new tt(i,r),this.add(this.targetLine),this.update()}rs.prototype=Object.create(Ee.prototype);rs.prototype.constructor=rs;rs.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()};rs.prototype.update=function(){var t=new C,e=new C,n=new C;return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),n.subVectors(e,t),this.lightPlane.lookAt(e),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(e),this.targetLine.scale.z=n.length()}}();function Bo(t){var e=new Re,n=new yt({color:16777215,vertexColors:rd}),i=[],r=[],a={},s=new Ge(16755200),o=new Ge(16711680),l=new Ge(43775),c=new Ge(16777215),u=new Ge(3355443);h("n1","n2",s),h("n2","n4",s),h("n4","n3",s),h("n3","n1",s),h("f1","f2",s),h("f2","f4",s),h("f4","f3",s),h("f3","f1",s),h("n1","f1",s),h("n2","f2",s),h("n3","f3",s),h("n4","f4",s),h("p","n1",o),h("p","n2",o),h("p","n3",o),h("p","n4",o),h("u1","u2",l),h("u2","u3",l),h("u3","u1",l),h("c","t",c),h("p","c",u),h("cn1","cn2",u),h("cn3","cn4",u),h("cf1","cf2",u),h("cf3","cf4",u);function h(d,m,g){f(d,g),f(m,g)}function f(d,m){i.push(0,0,0),r.push(m.r,m.g,m.b),a[d]===void 0&&(a[d]=[]),a[d].push(i.length/3-1)}e.addAttribute("position",new Ae(i,3)),e.addAttribute("color",new Ae(r,3)),Mt.call(this,e,n),this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}Bo.prototype=Object.create(Mt.prototype);Bo.prototype.constructor=Bo;Bo.prototype.update=function(){var t,e,n=new C,i=new Hn;function r(a,s,o,l){n.set(s,o,l).unproject(i);var c=e[a];if(c!==void 0)for(var u=t.getAttribute("position"),h=0,f=c.length;h<f;h++)u.setXYZ(c[h],n.x,n.y,n.z)}return function(){t=this.geometry,e=this.pointMap;var s=1,o=1;i.projectionMatrix.copy(this.camera.projectionMatrix),r("c",0,0,-1),r("t",0,0,1),r("n1",-s,-o,-1),r("n2",s,-o,-1),r("n3",-s,o,-1),r("n4",s,o,-1),r("f1",-s,-o,1),r("f2",s,-o,1),r("f3",-s,o,1),r("f4",s,o,1),r("u1",s*.7,o*1.1,-1),r("u2",-s*.7,o*1.1,-1),r("u3",0,o*2,-1),r("cf1",-s,0,1),r("cf2",s,0,1),r("cf3",0,-o,1),r("cf4",0,o,1),r("cn1",-s,0,-1),r("cn2",s,0,-1),r("cn3",0,-o,-1),r("cn4",0,o,-1),t.getAttribute("position").needsUpdate=!0}}();function Ki(t,e){this.object=t,e===void 0&&(e=16776960);var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new Re;r.setIndex(new st(n,1)),r.addAttribute("position",new st(i,3)),Mt.call(this,r,new yt({color:e})),this.matrixAutoUpdate=!1,this.update()}Ki.prototype=Object.create(Mt.prototype);Ki.prototype.constructor=Ki;Ki.prototype.update=function(){var t=new li;return function(n){if(n!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&t.setFromObject(this.object),!t.isEmpty()){var i=t.min,r=t.max,a=this.geometry.attributes.position,s=a.array;s[0]=r.x,s[1]=r.y,s[2]=r.z,s[3]=i.x,s[4]=r.y,s[5]=r.z,s[6]=i.x,s[7]=i.y,s[8]=r.z,s[9]=r.x,s[10]=i.y,s[11]=r.z,s[12]=r.x,s[13]=r.y,s[14]=i.z,s[15]=i.x,s[16]=r.y,s[17]=i.z,s[18]=i.x,s[19]=i.y,s[20]=i.z,s[21]=r.x,s[22]=i.y,s[23]=i.z,a.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}();Ki.prototype.setFromObject=function(t){return this.object=t,this.update(),this};Ki.prototype.copy=function(t){return Mt.prototype.copy.call(this,t),this.object=t.object,this};Ki.prototype.clone=function(){return new this.constructor().copy(this)};function Go(t,e){this.type="Box3Helper",this.box=t;var n=e!==void 0?e:16776960,i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],a=new Re;a.setIndex(new st(i,1)),a.addAttribute("position",new Ae(r,3)),Mt.call(this,a,new yt({color:n})),this.geometry.computeBoundingSphere()}Go.prototype=Object.create(Mt.prototype);Go.prototype.constructor=Go;Go.prototype.updateMatrixWorld=function(t){var e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),Ee.prototype.updateMatrixWorld.call(this,t))};function ko(t,e,n){this.type="PlaneHelper",this.plane=t,this.size=e===void 0?1:e;var i=n!==void 0?n:16776960,r=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],a=new Re;a.addAttribute("position",new Ae(r,3)),a.computeBoundingSphere(),tt.call(this,a,new yt({color:i}));var s=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],o=new Re;o.addAttribute("position",new Ae(s,3)),o.computeBoundingSphere(),this.add(new Oe(o,new nn({color:i,opacity:.2,transparent:!0,depthWrite:!1})))}ko.prototype=Object.create(tt.prototype);ko.prototype.constructor=ko;ko.prototype.updateMatrixWorld=function(t){var e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?Vt:ds,this.lookAt(this.plane.normal),Ee.prototype.updateMatrixWorld.call(this,t)};var ks,jl;function Ti(t,e,n,i,r,a){Ee.call(this),t===void 0&&(t=new THREE.Vector3(0,0,1)),e===void 0&&(e=new THREE.Vector3(0,0,0)),n===void 0&&(n=1),i===void 0&&(i=16776960),r===void 0&&(r=.2*n),a===void 0&&(a=.2*r),ks===void 0&&(ks=new Re,ks.addAttribute("position",new Ae([0,0,0,0,1,0],3)),jl=new Ct(0,.5,1,5,1),jl.translate(0,-.5,0)),this.position.copy(e),this.line=new tt(ks,new yt({color:i})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Oe(jl,new nn({color:i})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,a)}Ti.prototype=Object.create(Ee.prototype);Ti.prototype.constructor=Ti;Ti.prototype.setDirection=function(){var t=new C,e;return function(i){i.y>.99999?this.quaternion.set(0,0,0,1):i.y<-.99999?this.quaternion.set(1,0,0,0):(t.set(i.z,0,-i.x).normalize(),e=Math.acos(i.y),this.quaternion.setFromAxisAngle(t,e))}}();Ti.prototype.setLength=function(t,e,n){e===void 0&&(e=.2*t),n===void 0&&(n=.2*e),this.line.scale.set(1,Math.max(0,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()};Ti.prototype.setColor=function(t){this.line.material.color.copy(t),this.cone.material.color.copy(t)};Ti.prototype.copy=function(t){return Ee.prototype.copy.call(this,t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this};Ti.prototype.clone=function(){return new this.constructor().copy(this)};function Uc(t){t=t||1;var e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Re;i.addAttribute("position",new Ae(e,3)),i.addAttribute("color",new Ae(n,3));var r=new yt({vertexColors:Jr});Mt.call(this,i,r)}Uc.prototype=Object.create(Mt.prototype);Uc.prototype.constructor=Uc;He.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(He.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t};Object.assign(xi.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var e=new Ze,n=0,i=t.length;n<i;n++){var r=t[n];e.vertices.push(new C(r.x,r.y,r.z||0))}return e}});Object.assign(Gn.prototype,{fromPoints:function(t){console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}});Object.create(gn.prototype);Object.create(gn.prototype);function tp(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),gn.call(this,t),this.type="catmullrom"}tp.prototype=Object.create(gn.prototype);Object.assign(tp.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});zo.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};es.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Object.assign(Io.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Gd.extractUrlBase(t)}});Object.assign(Vd.prototype,{setTexturePath:function(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}});Object.assign(Qd.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}});Object.assign(li.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}});Kd.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)};Object.assign(it,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),it.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),it.ceilPowerOfTwo(t)}});Object.assign(zt.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}});Object.assign(Ye.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){var t;return function(){return t===void 0&&(t=new C),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),t.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,n,i,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,a)}});Un.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)};ct.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)};Object.assign(Qr.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}});Object.assign(jt.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}});Object.assign(jt,{barycoordFromPoint:function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),jt.getBarycoord(t,e,n,i,r)},normal:function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),jt.getNormal(t,e,n,i)}});Object.assign(Vi.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Nr(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new zr(this,t)}});Object.assign(le.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(C.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(mt.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(Ze.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")}});Object.assign(Ee.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")}});Object.defineProperties(Ee.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.defineProperties(oo.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Object.defineProperty(gc.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});lo.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(He.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}});Et.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(t)};Object.defineProperties(Tt.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}});Object.defineProperties(st.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")}});Object.assign(Re.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addDrawCall:function(t,e,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}});Object.defineProperties(Re.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.assign(ci.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}});Object.defineProperties(Fc.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}});Object.defineProperties(nt.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ge}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===nd}}});Object.defineProperties(Wn.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(En.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}});Object.assign(Rd.prototype,{clearTarget:function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")}});Object.defineProperties(Rd.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Ld.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Ir.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}});Object.defineProperties(Pd.prototype,{standing:{set:function(){console.warn("THREE.WebVRManager: .standing has been removed.")}},userHeight:{set:function(){console.warn("THREE.WebVRManager: .userHeight has been removed.")}}});Qa.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var e=this,n=new Xd;return n.load(t,function(i){e.setBuffer(i)}),this};Yd.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};Oo.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};qi.crossOrigin=void 0;qi.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var r=new cu;r.setCrossOrigin(this.crossOrigin);var a=r.load(t,n,void 0,i);return e&&(a.mapping=e),a};qi.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var r=new Ud;r.setCrossOrigin(this.crossOrigin);var a=r.load(t,n,void 0,i);return e&&(a.mapping=e),a};qi.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};qi.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function Bc(t,e,n){if(t instanceof Hn){console.warn("THREE.DragControls: Constructor now expects ( objects, camera, domElement )");var i=t;t=e,e=i}var r=new Un,a=new fu,s=new le,o=new C,l=new C,c=new C,u=new Ye,h=null,f=null,d=this;function m(){n.addEventListener("mousemove",v,!1),n.addEventListener("mousedown",_,!1),n.addEventListener("mouseup",x,!1),n.addEventListener("mouseleave",x,!1),n.addEventListener("touchmove",y,!1),n.addEventListener("touchstart",M,!1),n.addEventListener("touchend",T,!1)}function g(){n.removeEventListener("mousemove",v,!1),n.removeEventListener("mousedown",_,!1),n.removeEventListener("mouseup",x,!1),n.removeEventListener("mouseleave",x,!1),n.removeEventListener("touchmove",y,!1),n.removeEventListener("touchstart",M,!1),n.removeEventListener("touchend",T,!1)}function p(){g()}function v(L){L.preventDefault();var b=n.getBoundingClientRect();if(s.x=(L.clientX-b.left)/b.width*2-1,s.y=-((L.clientY-b.top)/b.height)*2+1,a.setFromCamera(s,e),h&&d.enabled){a.ray.intersectPlane(r,l)&&h.position.copy(l.sub(o).applyMatrix4(u)),d.dispatchEvent({type:"drag",object:h});return}a.setFromCamera(s,e);var S=a.intersectObjects(t);if(S.length>0){var D=S[0].object;r.setFromNormalAndCoplanarPoint(e.getWorldDirection(r.normal),c.setFromMatrixPosition(D.matrixWorld)),f!==D&&(d.dispatchEvent({type:"hoveron",object:D}),n.style.cursor="pointer",f=D)}else f!==null&&(d.dispatchEvent({type:"hoveroff",object:f}),n.style.cursor="auto",f=null)}function _(L){L.preventDefault(),a.setFromCamera(s,e);var b=a.intersectObjects(t);b.length>0&&(h=b[0].object,a.ray.intersectPlane(r,l)&&(u.getInverse(h.parent.matrixWorld),o.copy(l).sub(c.setFromMatrixPosition(h.matrixWorld))),n.style.cursor="move",d.dispatchEvent({type:"dragstart",object:h}))}function x(L){L.preventDefault(),h&&(d.dispatchEvent({type:"dragend",object:h}),h=null),n.style.cursor=f?"pointer":"auto"}function y(L){L.preventDefault(),L=L.changedTouches[0];var b=n.getBoundingClientRect();if(s.x=(L.clientX-b.left)/b.width*2-1,s.y=-((L.clientY-b.top)/b.height)*2+1,a.setFromCamera(s,e),h&&d.enabled){a.ray.intersectPlane(r,l)&&h.position.copy(l.sub(o).applyMatrix4(u)),d.dispatchEvent({type:"drag",object:h});return}}function M(L){L.preventDefault(),L=L.changedTouches[0];var b=n.getBoundingClientRect();s.x=(L.clientX-b.left)/b.width*2-1,s.y=-((L.clientY-b.top)/b.height)*2+1,a.setFromCamera(s,e);var S=a.intersectObjects(t);S.length>0&&(h=S[0].object,r.setFromNormalAndCoplanarPoint(e.getWorldDirection(r.normal),c.setFromMatrixPosition(h.matrixWorld)),a.ray.intersectPlane(r,l)&&(u.getInverse(h.parent.matrixWorld),o.copy(l).sub(c.setFromMatrixPosition(h.matrixWorld))),n.style.cursor="move",d.dispatchEvent({type:"dragstart",object:h}))}function T(L){L.preventDefault(),h&&(d.dispatchEvent({type:"dragend",object:h}),h=null),n.style.cursor="auto"}m(),this.enabled=!0,this.activate=m,this.deactivate=g,this.dispose=p,this.setObjects=function(){console.error("THREE.DragControls: setObjects() has been removed.")},this.on=function(L,b){console.warn("THREE.DragControls: on() has been deprecated. Use addEventListener() instead."),d.addEventListener(L,b)},this.off=function(L,b){console.warn("THREE.DragControls: off() has been deprecated. Use removeEventListener() instead."),d.removeEventListener(L,b)},this.notify=function(L){console.error("THREE.DragControls: notify() has been deprecated. Use dispatchEvent() instead."),d.dispatchEvent({type:L})}}Bc.prototype=Object.create(Zt.prototype);Bc.prototype.constructor=Bc;function Gc(t,e){e=e!==void 0?e:document,this.enabled=!0,this.center=new C,this.panSpeed=.001,this.zoomSpeed=.1,this.rotationSpeed=.005;var n=this,i=new C,r=new C,a=new li,s={NONE:-1,ROTATE:0,ZOOM:1,PAN:2},o=s.NONE,l=this.center,c=new zt,u=new le,h=new le,f=new Yr,d=new Fn,m={type:"change"};this.focus=function(S){var D;a.setFromObject(S),a.isEmpty()===!1?(a.getCenter(l),D=a.getBoundingSphere(d).radius):(l.setFromMatrixPosition(S.matrixWorld),D=.1),r.set(0,0,1),r.applyQuaternion(t.quaternion),r.multiplyScalar(D*4),t.position.copy(l).add(r),n.dispatchEvent(m)},this.pan=function(S){var D=t.position.distanceTo(l);S.multiplyScalar(D*n.panSpeed),S.applyMatrix3(c.getNormalMatrix(t.matrix)),t.position.add(S),l.add(S),n.dispatchEvent(m)},this.zoom=function(S){var D=t.position.distanceTo(l);S.multiplyScalar(D*n.zoomSpeed),!(S.length()>D)&&(S.applyMatrix3(c.getNormalMatrix(t.matrix)),t.position.add(S),n.dispatchEvent(m))},this.rotate=function(S){i.copy(t.position).sub(l),f.setFromVector3(i),f.theta+=S.x,f.phi+=S.y,f.makeSafe(),i.setFromSpherical(f),t.position.copy(l).add(i),t.lookAt(l),n.dispatchEvent(m)};function g(S){n.enabled!==!1&&(S.button===0?o=s.ROTATE:S.button===1?o=s.ZOOM:S.button===2&&(o=s.PAN),h.set(S.clientX,S.clientY),e.addEventListener("mousemove",p,!1),e.addEventListener("mouseup",v,!1),e.addEventListener("mouseout",v,!1),e.addEventListener("dblclick",v,!1))}function p(S){if(n.enabled!==!1){u.set(S.clientX,S.clientY);var D=u.x-h.x,N=u.y-h.y;o===s.ROTATE?n.rotate(r.set(-D*n.rotationSpeed,-N*n.rotationSpeed,0)):o===s.ZOOM?n.zoom(r.set(0,0,N)):o===s.PAN&&n.pan(r.set(-D,N,0)),h.set(S.clientX,S.clientY)}}function v(S){e.removeEventListener("mousemove",p,!1),e.removeEventListener("mouseup",v,!1),e.removeEventListener("mouseout",v,!1),e.removeEventListener("dblclick",v,!1),o=s.NONE}function _(S){S.preventDefault(),n.zoom(r.set(0,0,S.deltaY>0?1:-1))}function x(S){S.preventDefault()}this.dispose=function(){e.removeEventListener("contextmenu",x,!1),e.removeEventListener("mousedown",g,!1),e.removeEventListener("wheel",_,!1),e.removeEventListener("mousemove",p,!1),e.removeEventListener("mouseup",v,!1),e.removeEventListener("mouseout",v,!1),e.removeEventListener("dblclick",v,!1),e.removeEventListener("touchstart",L,!1),e.removeEventListener("touchmove",b,!1)},e.addEventListener("contextmenu",x,!1),e.addEventListener("mousedown",g,!1),e.addEventListener("wheel",_,!1);var y=[new C,new C,new C],M=[new C,new C,new C],T=null;function L(S){if(n.enabled!==!1){switch(S.touches.length){case 1:y[0].set(S.touches[0].pageX,S.touches[0].pageY,0),y[1].set(S.touches[0].pageX,S.touches[0].pageY,0);break;case 2:y[0].set(S.touches[0].pageX,S.touches[0].pageY,0),y[1].set(S.touches[1].pageX,S.touches[1].pageY,0),T=y[0].distanceTo(y[1]);break}M[0].copy(y[0]),M[1].copy(y[1])}}function b(S){if(n.enabled===!1)return;S.preventDefault(),S.stopPropagation();function D(G,H){var z=H[0];for(var Z in H)z.distanceTo(G)>H[Z].distanceTo(G)&&(z=H[Z]);return z}switch(S.touches.length){case 1:y[0].set(S.touches[0].pageX,S.touches[0].pageY,0),y[1].set(S.touches[0].pageX,S.touches[0].pageY,0),n.rotate(y[0].sub(D(y[0],M)).multiplyScalar(-n.rotationSpeed));break;case 2:y[0].set(S.touches[0].pageX,S.touches[0].pageY,0),y[1].set(S.touches[1].pageX,S.touches[1].pageY,0);var N=y[0].distanceTo(y[1]);n.zoom(r.set(0,0,T-N)),T=N;var J=y[0].clone().sub(D(y[0],M)),k=y[1].clone().sub(D(y[1],M));J.x=-J.x,k.x=-k.x,n.pan(J.add(k).multiplyScalar(.5));break}M[0].copy(y[0]),M[1].copy(y[1])}e.addEventListener("touchstart",L,!1),e.addEventListener("touchmove",b,!1)}Gc.prototype=Object.create(Zt.prototype);Gc.prototype.constructor=Gc;function Vo(t,e){this.object=t,this.domElement=e!==void 0?e:document,this.enabled=!0,this.target=new C,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!1,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:wr.LEFT,MIDDLE:wr.MIDDLE,RIGHT:wr.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return c.phi},this.getAzimuthalAngle=function(){return c.theta},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),o=s.NONE},this.update=function(){var q=new C,j=new ct().setFromUnitVectors(t.up,new C(0,1,0)),oe=j.clone().inverse(),K=new C,Me=new ct;return function(){var xe=n.object.position;return q.copy(xe).sub(n.target),q.applyQuaternion(j),c.setFromVector3(q),n.autoRotate&&o===s.NONE&&G(J()),c.theta+=u.theta,c.phi+=u.phi,c.theta=Math.max(n.minAzimuthAngle,Math.min(n.maxAzimuthAngle,c.theta)),c.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,c.phi)),c.makeSafe(),c.radius*=h,c.radius=Math.max(n.minDistance,Math.min(n.maxDistance,c.radius)),n.target.add(f),q.setFromSpherical(c),q.applyQuaternion(oe),xe.copy(n.target).add(q),n.object.lookAt(n.target),n.enableDamping===!0?(u.theta*=1-n.dampingFactor,u.phi*=1-n.dampingFactor,f.multiplyScalar(1-n.dampingFactor)):(u.set(0,0,0),f.set(0,0,0)),h=1,d||K.distanceToSquared(n.object.position)>l||8*(1-Me.dot(n.object.quaternion))>l?(n.dispatchEvent(i),K.copy(n.object.position),Me.copy(n.object.quaternion),d=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",de,!1),n.domElement.removeEventListener("mousedown",ke,!1),n.domElement.removeEventListener("wheel",Ke,!1),n.domElement.removeEventListener("touchstart",I,!1),n.domElement.removeEventListener("touchend",ge,!1),n.domElement.removeEventListener("touchmove",ce,!1),document.removeEventListener("mousemove",Fe,!1),document.removeEventListener("mouseup",$e,!1),window.removeEventListener("keydown",B,!1)};var n=this,i={type:"change"},r={type:"start"},a={type:"end"},s={NONE:0,ROTATE_UP:1,ROTATE_LEFT:2,ROTATE:3,DOLLY:4,DOLLY_ROTATE:7,PAN:8,DOLLY_PAN:12},o=s.NONE,l=1e-6,c=new Yr,u=new Yr,h=1,f=new C,d=!1,m=new le,g=new le,p=new le,v=new le,_=new le,x=new le,y=new le,M=new le,T=new le,L=new le,b=new le,S=new le,D=new le,N=new le;function J(){return 2*Math.PI/60/60*n.autoRotateSpeed}function k(){return Math.pow(.95,n.zoomSpeed)}function G(q){u.theta-=q}function H(q){u.phi-=q}var z=function(){var q=new C;return function(oe,K){q.setFromMatrixColumn(K,0),q.multiplyScalar(-oe),f.add(q)}}(),Z=function(){var q=new C;return function(oe,K){n.screenSpacePanning===!0?q.setFromMatrixColumn(K,1):(q.setFromMatrixColumn(K,0),q.crossVectors(n.object.up,q)),q.multiplyScalar(oe),f.add(q)}}(),w=function(){var q=new C;return function(oe,K){var Me=n.domElement===document?n.domElement.body:n.domElement;if(n.object.isPerspectiveCamera){var pe=n.object.position;q.copy(pe).sub(n.target);var xe=q.length();xe*=Math.tan(n.object.fov/2*Math.PI/180),z(2*oe*xe/Me.clientHeight,n.object.matrix),Z(2*K*xe/Me.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(z(oe*(n.object.right-n.object.left)/n.object.zoom/Me.clientWidth,n.object.matrix),Z(K*(n.object.top-n.object.bottom)/n.object.zoom/Me.clientHeight,n.object.matrix)):(console.warn("WARNING: MapControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function R(q){n.object.isPerspectiveCamera?h/=q:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*q)),n.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function V(q){n.object.isPerspectiveCamera?h*=q:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/q)),n.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function F(q){m.set(q.clientX,q.clientY)}function O(q){S.set(q.clientX,q.clientY)}function ee(q){T.set(q.clientX,q.clientY)}function W(q){p.set(q.clientX,q.clientY),_.subVectors(p,m).multiplyScalar(n.rotateSpeed);var j=n.domElement===document?n.domElement.body:n.domElement;G(2*Math.PI*_.x/j.clientHeight),H(2*Math.PI*_.y/j.clientHeight),m.copy(p),n.update()}function se(q){D.set(q.clientX,q.clientY),N.subVectors(D,S),N.y>0?R(k()):N.y<0&&V(k()),S.copy(D),n.update()}function Y(q){L.set(q.clientX,q.clientY),b.subVectors(L,T).multiplyScalar(n.panSpeed),w(b.x,b.y),T.copy(L),n.update()}function re(q){q.deltaY<0?V(k()):q.deltaY>0&&R(k()),n.update()}function ae(q){switch(q.keyCode){case n.keys.UP:w(0,n.keyPanSpeed),n.update();break;case n.keys.BOTTOM:w(0,-n.keyPanSpeed),n.update();break;case n.keys.LEFT:w(n.keyPanSpeed,0),n.update();break;case n.keys.RIGHT:w(-n.keyPanSpeed,0),n.update();break}}function ue(q){m.set(q.touches[0].pageX,q.touches[0].pageY),g.set(q.touches[1].pageX,q.touches[1].pageY)}function X(q){if(n.enableZoom){var j=q.touches[0].pageX-q.touches[1].pageX,oe=q.touches[0].pageY-q.touches[1].pageY,K=Math.sqrt(j*j+oe*oe);S.set(0,K)}}function ve(q){n.enablePan&&T.set(q.touches[0].pageX,q.touches[0].pageY)}function be(q){if(n.enableRotate!==!1&&(o&s.ROTATE)!==0){if(p.set(q.touches[0].pageX,q.touches[0].pageY),v.set(q.touches[1].pageX,q.touches[1].pageY),_.subVectors(p,m),x.subVectors(v,g),y.subVectors(g,m),M.subVectors(v,p),ye()){var j=n.domElement===document?n.domElement.body:n.domElement;H(2*Math.PI*_.y/j.clientHeight),o=s.ROTATE_UP}else(o&s.ROTATE_LEFT)!==0&&G((y.angle()-M.angle())*n.rotateSpeed);m.copy(p),g.copy(v)}}function ye(){return!te(y)||!te(M)||!Ve(_)||!Ve(x)?!1:_.dot(x)>0}var te=function(){var q=Math.sin(Math.PI/6);return function(oe){return Math.abs(Math.sin(oe.angle()))<q}}(),Ve=function(){var q=Math.cos(Math.PI/2-Math.PI/6);return function(oe){return Math.abs(Math.cos(oe.angle()))<q}}();function Xe(q){if(n.enableZoom!==!1&&(o&s.DOLLY)!==0){var j=q.touches[0].pageX-q.touches[1].pageX,oe=q.touches[0].pageY-q.touches[1].pageY,K=Math.sqrt(j*j+oe*oe);D.set(0,K),N.set(0,Math.pow(D.y/S.y,n.zoomSpeed)),R(N.y),S.copy(D)}}function ie(q){n.enablePan!==!1&&(o&s.PAN)!==0&&(L.set(q.touches[0].pageX,q.touches[0].pageY),b.subVectors(L,T).multiplyScalar(n.panSpeed),w(b.x,b.y),T.copy(L))}function ke(q){if(n.enabled!==!1){switch(q.preventDefault(),q.button){case n.mouseButtons.LEFT:if(q.ctrlKey||q.metaKey||q.shiftKey){if(n.enableRotate===!1)return;F(q),o=s.ROTATE}else{if(n.enablePan===!1)return;ee(q),o=s.PAN}break;case n.mouseButtons.MIDDLE:if(n.enableZoom===!1)return;O(q),o=s.DOLLY;break;case n.mouseButtons.RIGHT:if(n.enableRotate===!1)return;F(q),o=s.ROTATE;break}o!==s.NONE&&(document.addEventListener("mousemove",Fe,!1),document.addEventListener("mouseup",$e,!1),n.dispatchEvent(r))}}function Fe(q){if(n.enabled!==!1)switch(q.preventDefault(),o){case s.ROTATE:if(n.enableRotate===!1)return;W(q);break;case s.DOLLY:if(n.enableZoom===!1)return;se(q);break;case s.PAN:if(n.enablePan===!1)return;Y(q);break}}function $e(q){n.enabled!==!1&&(document.removeEventListener("mousemove",Fe,!1),document.removeEventListener("mouseup",$e,!1),n.dispatchEvent(a),o=s.NONE)}function Ke(q){n.enabled===!1||n.enableZoom===!1||o!==s.NONE&&o!==s.ROTATE||(q.preventDefault(),q.stopPropagation(),n.dispatchEvent(r),re(q),n.dispatchEvent(a))}function B(q){n.enabled===!1||n.enableKeys===!1||n.enablePan===!1||ae(q)}function I(q){if(n.enabled!==!1){switch(q.preventDefault(),q.touches.length){case 1:if(n.enablePan===!1)return;ve(q),o=s.PAN;break;case 2:if(n.enableZoom===!1&&n.enableRotate===!1)return;ue(q),X(q),o=s.DOLLY_ROTATE;break;default:o=s.NONE}o!==s.NONE&&n.dispatchEvent(r)}}function ce(q){if(n.enabled!==!1)switch(q.preventDefault(),q.stopPropagation(),q.touches.length){case 1:if(n.enablePan===!1||o!==s.PAN)return;ie(q),n.update();break;case 2:if(n.enableZoom===!1&&n.enableRotate===!1||(o&s.DOLLY_ROTATE)===0)return;be(q),Xe(q),n.update();break;default:o=s.NONE}}function ge(q){n.enabled!==!1&&(n.dispatchEvent(a),o=s.NONE)}function de(q){n.enabled!==!1&&q.preventDefault()}n.domElement.addEventListener("contextmenu",de,!1),n.domElement.addEventListener("mousedown",ke,!1),n.domElement.addEventListener("wheel",Ke,!1),n.domElement.addEventListener("touchstart",I,!1),n.domElement.addEventListener("touchend",ge,!1),n.domElement.addEventListener("touchmove",ce,!1),window.addEventListener("keydown",B,!1),this.update()}Vo.prototype=Object.create(Zt.prototype);Vo.prototype.constructor=Vo;Object.defineProperties(Vo.prototype,{center:{get:function(){return console.warn("THREE.MapControls: .center has been renamed to .target"),this.target}},noZoom:{get:function(){return console.warn("THREE.MapControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(t){console.warn("THREE.MapControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!t}},noRotate:{get:function(){return console.warn("THREE.MapControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(t){console.warn("THREE.MapControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!t}},noPan:{get:function(){return console.warn("THREE.MapControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(t){console.warn("THREE.MapControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!t}},noKeys:{get:function(){return console.warn("THREE.MapControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(t){console.warn("THREE.MapControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!t}},staticMoving:{get:function(){return console.warn("THREE.MapControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.enableDamping},set:function(t){console.warn("THREE.MapControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.enableDamping=!t}},dynamicDampingFactor:{get:function(){return console.warn("THREE.MapControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor},set:function(t){console.warn("THREE.MapControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor=t}}});function as(t,e){this.object=t,this.domElement=e!==void 0?e:document,this.enabled=!0,this.target=new C,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!1,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:wr.LEFT,MIDDLE:wr.MIDDLE,RIGHT:wr.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return c.phi},this.getAzimuthalAngle=function(){return c.theta},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),o=s.NONE},this.update=function(){var ie=new C,ke=new ct().setFromUnitVectors(t.up,new C(0,1,0)),Fe=ke.clone().inverse(),$e=new C,Ke=new ct;return function(){var I=n.object.position;return ie.copy(I).sub(n.target),ie.applyQuaternion(ke),c.setFromVector3(ie),n.autoRotate&&o===s.NONE&&S(L()),c.theta+=u.theta,c.phi+=u.phi,c.theta=Math.max(n.minAzimuthAngle,Math.min(n.maxAzimuthAngle,c.theta)),c.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,c.phi)),c.makeSafe(),c.radius*=h,c.radius=Math.max(n.minDistance,Math.min(n.maxDistance,c.radius)),n.target.add(f),ie.setFromSpherical(c),ie.applyQuaternion(Fe),I.copy(n.target).add(ie),n.object.lookAt(n.target),n.enableDamping===!0?(u.theta*=1-n.dampingFactor,u.phi*=1-n.dampingFactor,f.multiplyScalar(1-n.dampingFactor)):(u.set(0,0,0),f.set(0,0,0)),h=1,d||$e.distanceToSquared(n.object.position)>l||8*(1-Ke.dot(n.object.quaternion))>l?(n.dispatchEvent(i),$e.copy(n.object.position),Ke.copy(n.object.quaternion),d=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",Xe,!1),n.domElement.removeEventListener("mousedown",ae,!1),n.domElement.removeEventListener("wheel",ve,!1),n.domElement.removeEventListener("touchstart",ye,!1),n.domElement.removeEventListener("touchend",Ve,!1),n.domElement.removeEventListener("touchmove",te,!1),document.removeEventListener("mousemove",ue,!1),document.removeEventListener("mouseup",X,!1),window.removeEventListener("keydown",be,!1)};var n=this,i={type:"change"},r={type:"start"},a={type:"end"},s={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY_PAN:4},o=s.NONE,l=1e-6,c=new Yr,u=new Yr,h=1,f=new C,d=!1,m=new le,g=new le,p=new le,v=new le,_=new le,x=new le,y=new le,M=new le,T=new le;function L(){return 2*Math.PI/60/60*n.autoRotateSpeed}function b(){return Math.pow(.95,n.zoomSpeed)}function S(ie){u.theta-=ie}function D(ie){u.phi-=ie}var N=function(){var ie=new C;return function(Fe,$e){ie.setFromMatrixColumn($e,0),ie.multiplyScalar(-Fe),f.add(ie)}}(),J=function(){var ie=new C;return function(Fe,$e){n.screenSpacePanning===!0?ie.setFromMatrixColumn($e,1):(ie.setFromMatrixColumn($e,0),ie.crossVectors(n.object.up,ie)),ie.multiplyScalar(Fe),f.add(ie)}}(),k=function(){var ie=new C;return function(Fe,$e){var Ke=n.domElement===document?n.domElement.body:n.domElement;if(n.object.isPerspectiveCamera){var B=n.object.position;ie.copy(B).sub(n.target);var I=ie.length();I*=Math.tan(n.object.fov/2*Math.PI/180),N(2*Fe*I/Ke.clientHeight,n.object.matrix),J(2*$e*I/Ke.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(N(Fe*(n.object.right-n.object.left)/n.object.zoom/Ke.clientWidth,n.object.matrix),J($e*(n.object.top-n.object.bottom)/n.object.zoom/Ke.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function G(ie){n.object.isPerspectiveCamera?h/=ie:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*ie)),n.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function H(ie){n.object.isPerspectiveCamera?h*=ie:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/ie)),n.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function z(ie){m.set(ie.clientX,ie.clientY)}function Z(ie){y.set(ie.clientX,ie.clientY)}function w(ie){v.set(ie.clientX,ie.clientY)}function R(ie){g.set(ie.clientX,ie.clientY),p.subVectors(g,m).multiplyScalar(n.rotateSpeed);var ke=n.domElement===document?n.domElement.body:n.domElement;S(2*Math.PI*p.x/ke.clientHeight),D(2*Math.PI*p.y/ke.clientHeight),m.copy(g),n.update()}function V(ie){M.set(ie.clientX,ie.clientY),T.subVectors(M,y),T.y>0?G(b()):T.y<0&&H(b()),y.copy(M),n.update()}function F(ie){_.set(ie.clientX,ie.clientY),x.subVectors(_,v).multiplyScalar(n.panSpeed),k(x.x,x.y),v.copy(_),n.update()}function O(ie){ie.deltaY<0?H(b()):ie.deltaY>0&&G(b()),n.update()}function ee(ie){switch(ie.keyCode){case n.keys.UP:k(0,n.keyPanSpeed),n.update();break;case n.keys.BOTTOM:k(0,-n.keyPanSpeed),n.update();break;case n.keys.LEFT:k(n.keyPanSpeed,0),n.update();break;case n.keys.RIGHT:k(-n.keyPanSpeed,0),n.update();break}}function W(ie){m.set(ie.touches[0].pageX,ie.touches[0].pageY)}function se(ie){if(n.enableZoom){var ke=ie.touches[0].pageX-ie.touches[1].pageX,Fe=ie.touches[0].pageY-ie.touches[1].pageY,$e=Math.sqrt(ke*ke+Fe*Fe);y.set(0,$e)}if(n.enablePan){var Ke=.5*(ie.touches[0].pageX+ie.touches[1].pageX),B=.5*(ie.touches[0].pageY+ie.touches[1].pageY);v.set(Ke,B)}}function Y(ie){g.set(ie.touches[0].pageX,ie.touches[0].pageY),p.subVectors(g,m).multiplyScalar(n.rotateSpeed);var ke=n.domElement===document?n.domElement.body:n.domElement;S(2*Math.PI*p.x/ke.clientHeight),D(2*Math.PI*p.y/ke.clientHeight),m.copy(g),n.update()}function re(ie){if(n.enableZoom){var ke=ie.touches[0].pageX-ie.touches[1].pageX,Fe=ie.touches[0].pageY-ie.touches[1].pageY,$e=Math.sqrt(ke*ke+Fe*Fe);M.set(0,$e),T.set(0,Math.pow(M.y/y.y,n.zoomSpeed)),G(T.y),y.copy(M)}if(n.enablePan){var Ke=.5*(ie.touches[0].pageX+ie.touches[1].pageX),B=.5*(ie.touches[0].pageY+ie.touches[1].pageY);_.set(Ke,B),x.subVectors(_,v).multiplyScalar(n.panSpeed),k(x.x,x.y),v.copy(_)}n.update()}function ae(ie){if(n.enabled!==!1){switch(ie.preventDefault(),ie.button){case n.mouseButtons.LEFT:if(ie.ctrlKey||ie.metaKey||ie.shiftKey){if(n.enablePan===!1)return;w(ie),o=s.PAN}else{if(n.enableRotate===!1)return;z(ie),o=s.ROTATE}break;case n.mouseButtons.MIDDLE:if(n.enableZoom===!1)return;Z(ie),o=s.DOLLY;break;case n.mouseButtons.RIGHT:if(n.enablePan===!1)return;w(ie),o=s.PAN;break}o!==s.NONE&&(document.addEventListener("mousemove",ue,!1),document.addEventListener("mouseup",X,!1),n.dispatchEvent(r))}}function ue(ie){if(n.enabled!==!1)switch(ie.preventDefault(),o){case s.ROTATE:if(n.enableRotate===!1)return;R(ie);break;case s.DOLLY:if(n.enableZoom===!1)return;V(ie);break;case s.PAN:if(n.enablePan===!1)return;F(ie);break}}function X(ie){n.enabled!==!1&&(document.removeEventListener("mousemove",ue,!1),document.removeEventListener("mouseup",X,!1),n.dispatchEvent(a),o=s.NONE)}function ve(ie){n.enabled===!1||n.enableZoom===!1||o!==s.NONE&&o!==s.ROTATE||(ie.preventDefault(),ie.stopPropagation(),n.dispatchEvent(r),O(ie),n.dispatchEvent(a))}function be(ie){n.enabled===!1||n.enableKeys===!1||n.enablePan===!1||ee(ie)}function ye(ie){if(n.enabled!==!1){switch(ie.preventDefault(),ie.touches.length){case 1:if(n.enableRotate===!1)return;W(ie),o=s.TOUCH_ROTATE;break;case 2:if(n.enableZoom===!1&&n.enablePan===!1)return;se(ie),o=s.TOUCH_DOLLY_PAN;break;default:o=s.NONE}o!==s.NONE&&n.dispatchEvent(r)}}function te(ie){if(n.enabled!==!1)switch(ie.preventDefault(),ie.stopPropagation(),ie.touches.length){case 1:if(n.enableRotate===!1||o!==s.TOUCH_ROTATE)return;Y(ie);break;case 2:if(n.enableZoom===!1&&n.enablePan===!1||o!==s.TOUCH_DOLLY_PAN)return;re(ie);break;default:o=s.NONE}}function Ve(ie){n.enabled!==!1&&(n.dispatchEvent(a),o=s.NONE)}function Xe(ie){n.enabled!==!1&&ie.preventDefault()}n.domElement.addEventListener("contextmenu",Xe,!1),n.domElement.addEventListener("mousedown",ae,!1),n.domElement.addEventListener("wheel",ve,!1),n.domElement.addEventListener("touchstart",ye,!1),n.domElement.addEventListener("touchend",Ve,!1),n.domElement.addEventListener("touchmove",te,!1),window.addEventListener("keydown",be,!1),this.update()}as.prototype=Object.create(Zt.prototype);as.prototype.constructor=as;Object.defineProperties(as.prototype,{center:{get:function(){return console.warn("THREE.OrbitControls: .center has been renamed to .target"),this.target}},noZoom:{get:function(){return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(t){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!t}},noRotate:{get:function(){return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(t){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!t}},noPan:{get:function(){return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(t){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!t}},noKeys:{get:function(){return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(t){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!t}},staticMoving:{get:function(){return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.enableDamping},set:function(t){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.enableDamping=!t}},dynamicDampingFactor:{get:function(){return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor},set:function(t){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor=t}}});function kc(t,e){var n=this,i={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4};this.object=t,this.domElement=e!==void 0?e:document,this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.radius=0,this.rotateSpeed=1,this.zoomSpeed=1.2,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.noRoll=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.keys=[65,83,68],this.target=new C;var r=1e-6,a=!0,s=i.NONE,o=i.NONE,l=new C,c=new C,u=new C,h=new le,f=new le,d=0,m=0,g=new le,p=new le;this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.up0=this.object.up.clone(),this.left0=this.object.left,this.right0=this.object.right,this.top0=this.object.top,this.bottom0=this.object.bottom;var v={type:"change"},_={type:"start"},x={type:"end"};this.handleResize=function(){if(this.domElement===document)this.screen.left=0,this.screen.top=0,this.screen.width=window.innerWidth,this.screen.height=window.innerHeight;else{var z=this.domElement.getBoundingClientRect(),Z=this.domElement.ownerDocument.documentElement;this.screen.left=z.left+window.pageXOffset-Z.clientLeft,this.screen.top=z.top+window.pageYOffset-Z.clientTop,this.screen.width=z.width,this.screen.height=z.height}this.radius=.5*Math.min(this.screen.width,this.screen.height),this.left0=this.object.left,this.right0=this.object.right,this.top0=this.object.top,this.bottom0=this.object.bottom};var y=function(){var z=new le;return function(w,R){return z.set((w-n.screen.left)/n.screen.width,(R-n.screen.top)/n.screen.height),z}}(),M=function(){var z=new C,Z=new C,w=new C;return function(V,F){w.set((V-n.screen.width*.5-n.screen.left)/n.radius,(n.screen.height*.5+n.screen.top-F)/n.radius,0);var O=w.length();return n.noRoll?O<Math.SQRT1_2?w.z=Math.sqrt(1-O*O):w.z=.5/O:O>1?w.normalize():w.z=Math.sqrt(1-O*O),l.copy(n.object.position).sub(n.target),z.copy(n.object.up).setLength(w.y),z.add(Z.copy(n.object.up).cross(l).setLength(w.x)),z.add(l.setLength(w.z)),z}}();this.rotateCamera=function(){var z=new C,Z=new ct;return function(){var R=Math.acos(c.dot(u)/c.length()/u.length());R&&(z.crossVectors(c,u).normalize(),R*=n.rotateSpeed,Z.setFromAxisAngle(z,-R),l.applyQuaternion(Z),n.object.up.applyQuaternion(Z),u.applyQuaternion(Z),n.staticMoving?c.copy(u):(Z.setFromAxisAngle(z,R*(n.dynamicDampingFactor-1)),c.applyQuaternion(Z)),a=!0)}}(),this.zoomCamera=function(){if(s===i.TOUCH_ZOOM_PAN){var z=m/d;d=m,n.object.zoom*=z,a=!0}else{var z=1+(f.y-h.y)*n.zoomSpeed;Math.abs(z-1)>r&&z>0&&(n.object.zoom/=z,n.staticMoving?h.copy(f):h.y+=(f.y-h.y)*this.dynamicDampingFactor,a=!0)}},this.panCamera=function(){var z=new le,Z=new C,w=new C;return function(){if(z.copy(p).sub(g),z.lengthSq()){var V=(n.object.right-n.object.left)/n.object.zoom,F=(n.object.top-n.object.bottom)/n.object.zoom;z.x*=V,z.y*=F,w.copy(l).cross(n.object.up).setLength(z.x),w.add(Z.copy(n.object.up).setLength(z.y)),n.object.position.add(w),n.target.add(w),n.staticMoving?g.copy(p):g.add(z.subVectors(p,g).multiplyScalar(n.dynamicDampingFactor)),a=!0}}}(),this.update=function(){l.subVectors(n.object.position,n.target),n.noRotate||n.rotateCamera(),n.noZoom||(n.zoomCamera(),a&&n.object.updateProjectionMatrix()),n.noPan||n.panCamera(),n.object.position.addVectors(n.target,l),n.object.lookAt(n.target),a&&(n.dispatchEvent(v),a=!1)},this.reset=function(){s=i.NONE,o=i.NONE,n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.up.copy(n.up0),l.subVectors(n.object.position,n.target),n.object.left=n.left0,n.object.right=n.right0,n.object.top=n.top0,n.object.bottom=n.bottom0,n.object.lookAt(n.target),n.dispatchEvent(v),a=!1};function T(z){n.enabled!==!1&&(window.removeEventListener("keydown",T),o=s,s===i.NONE&&(z.keyCode===n.keys[i.ROTATE]&&!n.noRotate?s=i.ROTATE:z.keyCode===n.keys[i.ZOOM]&&!n.noZoom?s=i.ZOOM:z.keyCode===n.keys[i.PAN]&&!n.noPan&&(s=i.PAN)))}function L(z){n.enabled!==!1&&(s=o,window.addEventListener("keydown",T,!1))}function b(z){n.enabled!==!1&&(z.preventDefault(),z.stopPropagation(),s===i.NONE&&(s=z.button),s===i.ROTATE&&!n.noRotate?(c.copy(M(z.pageX,z.pageY)),u.copy(c)):s===i.ZOOM&&!n.noZoom?(h.copy(y(z.pageX,z.pageY)),f.copy(h)):s===i.PAN&&!n.noPan&&(g.copy(y(z.pageX,z.pageY)),p.copy(g)),document.addEventListener("mousemove",S,!1),document.addEventListener("mouseup",D,!1),n.dispatchEvent(_))}function S(z){n.enabled!==!1&&(z.preventDefault(),z.stopPropagation(),s===i.ROTATE&&!n.noRotate?u.copy(M(z.pageX,z.pageY)):s===i.ZOOM&&!n.noZoom?f.copy(y(z.pageX,z.pageY)):s===i.PAN&&!n.noPan&&p.copy(y(z.pageX,z.pageY)))}function D(z){n.enabled!==!1&&(z.preventDefault(),z.stopPropagation(),s=i.NONE,document.removeEventListener("mousemove",S),document.removeEventListener("mouseup",D),n.dispatchEvent(x))}function N(z){n.enabled!==!1&&(z.preventDefault(),z.stopPropagation(),h.y+=z.deltaY*.01,n.dispatchEvent(_),n.dispatchEvent(x))}function J(z){if(n.enabled!==!1){switch(z.touches.length){case 1:s=i.TOUCH_ROTATE,c.copy(M(z.touches[0].pageX,z.touches[0].pageY)),u.copy(c);break;case 2:s=i.TOUCH_ZOOM_PAN;var Z=z.touches[0].pageX-z.touches[1].pageX,w=z.touches[0].pageY-z.touches[1].pageY;m=d=Math.sqrt(Z*Z+w*w);var R=(z.touches[0].pageX+z.touches[1].pageX)/2,V=(z.touches[0].pageY+z.touches[1].pageY)/2;g.copy(y(R,V)),p.copy(g);break;default:s=i.NONE}n.dispatchEvent(_)}}function k(z){if(n.enabled!==!1)switch(z.preventDefault(),z.stopPropagation(),z.touches.length){case 1:u.copy(M(z.touches[0].pageX,z.touches[0].pageY));break;case 2:var Z=z.touches[0].pageX-z.touches[1].pageX,w=z.touches[0].pageY-z.touches[1].pageY;m=Math.sqrt(Z*Z+w*w);var R=(z.touches[0].pageX+z.touches[1].pageX)/2,V=(z.touches[0].pageY+z.touches[1].pageY)/2;p.copy(y(R,V));break;default:s=i.NONE}}function G(z){if(n.enabled!==!1){switch(z.touches.length){case 1:u.copy(M(z.touches[0].pageX,z.touches[0].pageY)),c.copy(u);break;case 2:d=m=0;var Z=(z.touches[0].pageX+z.touches[1].pageX)/2,w=(z.touches[0].pageY+z.touches[1].pageY)/2;p.copy(y(Z,w)),g.copy(p);break}s=i.NONE,n.dispatchEvent(x)}}function H(z){z.preventDefault()}this.dispose=function(){this.domElement.removeEventListener("contextmenu",H,!1),this.domElement.removeEventListener("mousedown",b,!1),this.domElement.removeEventListener("wheel",N,!1),this.domElement.removeEventListener("touchstart",J,!1),this.domElement.removeEventListener("touchend",G,!1),this.domElement.removeEventListener("touchmove",k,!1),document.removeEventListener("mousemove",S,!1),document.removeEventListener("mouseup",D,!1),window.removeEventListener("keydown",T,!1),window.removeEventListener("keyup",L,!1)},this.domElement.addEventListener("contextmenu",H,!1),this.domElement.addEventListener("mousedown",b,!1),this.domElement.addEventListener("wheel",N,!1),this.domElement.addEventListener("touchstart",J,!1),this.domElement.addEventListener("touchend",G,!1),this.domElement.addEventListener("touchmove",k,!1),window.addEventListener("keydown",T,!1),window.addEventListener("keyup",L,!1),this.handleResize(),this.update()}kc.prototype=Object.create(Zt.prototype);kc.prototype.constructor=kc;function Vc(t,e){var n=this;this.domElement=e||document.body,this.isLocked=!1,t.rotation.set(0,0,0);var i=new Ee;i.add(t);var r=new Ee;r.position.y=10,r.add(i);var a=Math.PI/2;function s(c){if(n.isLocked!==!1){var u=c.movementX||c.mozMovementX||c.webkitMovementX||0,h=c.movementY||c.mozMovementY||c.webkitMovementY||0;r.rotation.y-=u*.002,i.rotation.x-=h*.002,i.rotation.x=Math.max(-a,Math.min(a,i.rotation.x))}}function o(){document.pointerLockElement===n.domElement?(n.dispatchEvent({type:"lock"}),n.isLocked=!0):(n.dispatchEvent({type:"unlock"}),n.isLocked=!1)}function l(){console.error("THREE.PointerLockControls: Unable to use Pointer Lock API")}this.connect=function(){document.addEventListener("mousemove",s,!1),document.addEventListener("pointerlockchange",o,!1),document.addEventListener("pointerlockerror",l,!1)},this.disconnect=function(){document.removeEventListener("mousemove",s,!1),document.removeEventListener("pointerlockchange",o,!1),document.removeEventListener("pointerlockerror",l,!1)},this.dispose=function(){this.disconnect()},this.getObject=function(){return r},this.getDirection=function(){var c=new C(0,0,-1),u=new Ai(0,0,0,"YXZ");return function(h){return u.set(i.rotation.x,r.rotation.y,0),h.copy(c).applyEuler(u),h}}(),this.lock=function(){this.domElement.requestPointerLock()},this.unlock=function(){document.exitPointerLock()},this.connect()}Vc.prototype=Object.create(Zt.prototype);Vc.prototype.constructor=Vc;function Hc(t,e){var n=this,i={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4};this.object=t,this.domElement=e!==void 0?e:document,this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.keys=[65,83,68],this.target=new C;var r=1e-6,a=new C,s=i.NONE,o=i.NONE,l=new C,c=new le,u=new le,h=new C,f=0,d=new le,m=new le,g=0,p=0,v=new le,_=new le;this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.up0=this.object.up.clone();var x={type:"change"},y={type:"start"},M={type:"end"};this.handleResize=function(){if(this.domElement===document)this.screen.left=0,this.screen.top=0,this.screen.width=window.innerWidth,this.screen.height=window.innerHeight;else{var w=this.domElement.getBoundingClientRect(),R=this.domElement.ownerDocument.documentElement;this.screen.left=w.left+window.pageXOffset-R.clientLeft,this.screen.top=w.top+window.pageYOffset-R.clientTop,this.screen.width=w.width,this.screen.height=w.height}};var T=function(){var w=new le;return function(V,F){return w.set((V-n.screen.left)/n.screen.width,(F-n.screen.top)/n.screen.height),w}}(),L=function(){var w=new le;return function(V,F){return w.set((V-n.screen.width*.5-n.screen.left)/(n.screen.width*.5),(n.screen.height+2*(n.screen.top-F))/n.screen.width),w}}();this.rotateCamera=function(){var w=new C,R=new ct,V=new C,F=new C,O=new C,ee=new C,W;return function(){ee.set(u.x-c.x,u.y-c.y,0),W=ee.length(),W?(l.copy(n.object.position).sub(n.target),V.copy(l).normalize(),F.copy(n.object.up).normalize(),O.crossVectors(F,V).normalize(),F.setLength(u.y-c.y),O.setLength(u.x-c.x),ee.copy(F.add(O)),w.crossVectors(ee,l).normalize(),W*=n.rotateSpeed,R.setFromAxisAngle(w,W),l.applyQuaternion(R),n.object.up.applyQuaternion(R),h.copy(w),f=W):!n.staticMoving&&f&&(f*=Math.sqrt(1-n.dynamicDampingFactor),l.copy(n.object.position).sub(n.target),R.setFromAxisAngle(h,f),l.applyQuaternion(R),n.object.up.applyQuaternion(R)),c.copy(u)}}(),this.zoomCamera=function(){var w;s===i.TOUCH_ZOOM_PAN?(w=g/p,g=p,l.multiplyScalar(w)):(w=1+(m.y-d.y)*n.zoomSpeed,w!==1&&w>0&&l.multiplyScalar(w),n.staticMoving?d.copy(m):d.y+=(m.y-d.y)*this.dynamicDampingFactor)},this.panCamera=function(){var w=new le,R=new C,V=new C;return function(){w.copy(_).sub(v),w.lengthSq()&&(w.multiplyScalar(l.length()*n.panSpeed),V.copy(l).cross(n.object.up).setLength(w.x),V.add(R.copy(n.object.up).setLength(w.y)),n.object.position.add(V),n.target.add(V),n.staticMoving?v.copy(_):v.add(w.subVectors(_,v).multiplyScalar(n.dynamicDampingFactor)))}}(),this.checkDistances=function(){(!n.noZoom||!n.noPan)&&(l.lengthSq()>n.maxDistance*n.maxDistance&&(n.object.position.addVectors(n.target,l.setLength(n.maxDistance)),d.copy(m)),l.lengthSq()<n.minDistance*n.minDistance&&(n.object.position.addVectors(n.target,l.setLength(n.minDistance)),d.copy(m)))},this.update=function(){l.subVectors(n.object.position,n.target),n.noRotate||n.rotateCamera(),n.noZoom||n.zoomCamera(),n.noPan||n.panCamera(),n.object.position.addVectors(n.target,l),n.checkDistances(),n.object.lookAt(n.target),a.distanceToSquared(n.object.position)>r&&(n.dispatchEvent(x),a.copy(n.object.position))},this.reset=function(){s=i.NONE,o=i.NONE,n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.up.copy(n.up0),l.subVectors(n.object.position,n.target),n.object.lookAt(n.target),n.dispatchEvent(x),a.copy(n.object.position)};function b(w){n.enabled!==!1&&(window.removeEventListener("keydown",b),o=s,s===i.NONE&&(w.keyCode===n.keys[i.ROTATE]&&!n.noRotate?s=i.ROTATE:w.keyCode===n.keys[i.ZOOM]&&!n.noZoom?s=i.ZOOM:w.keyCode===n.keys[i.PAN]&&!n.noPan&&(s=i.PAN)))}function S(w){n.enabled!==!1&&(s=o,window.addEventListener("keydown",b,!1))}function D(w){n.enabled!==!1&&(w.preventDefault(),w.stopPropagation(),s===i.NONE&&(s=w.button),s===i.ROTATE&&!n.noRotate?(u.copy(L(w.pageX,w.pageY)),c.copy(u)):s===i.ZOOM&&!n.noZoom?(d.copy(T(w.pageX,w.pageY)),m.copy(d)):s===i.PAN&&!n.noPan&&(v.copy(T(w.pageX,w.pageY)),_.copy(v)),document.addEventListener("mousemove",N,!1),document.addEventListener("mouseup",J,!1),n.dispatchEvent(y))}function N(w){n.enabled!==!1&&(w.preventDefault(),w.stopPropagation(),s===i.ROTATE&&!n.noRotate?(c.copy(u),u.copy(L(w.pageX,w.pageY))):s===i.ZOOM&&!n.noZoom?m.copy(T(w.pageX,w.pageY)):s===i.PAN&&!n.noPan&&_.copy(T(w.pageX,w.pageY)))}function J(w){n.enabled!==!1&&(w.preventDefault(),w.stopPropagation(),s=i.NONE,document.removeEventListener("mousemove",N),document.removeEventListener("mouseup",J),n.dispatchEvent(M))}function k(w){if(n.enabled!==!1&&n.noZoom!==!0){switch(w.preventDefault(),w.stopPropagation(),w.deltaMode){case 2:d.y-=w.deltaY*.025;break;case 1:d.y-=w.deltaY*.01;break;default:d.y-=w.deltaY*25e-5;break}n.dispatchEvent(y),n.dispatchEvent(M)}}function G(w){if(n.enabled!==!1){switch(w.preventDefault(),w.touches.length){case 1:s=i.TOUCH_ROTATE,u.copy(L(w.touches[0].pageX,w.touches[0].pageY)),c.copy(u);break;default:s=i.TOUCH_ZOOM_PAN;var R=w.touches[0].pageX-w.touches[1].pageX,V=w.touches[0].pageY-w.touches[1].pageY;p=g=Math.sqrt(R*R+V*V);var F=(w.touches[0].pageX+w.touches[1].pageX)/2,O=(w.touches[0].pageY+w.touches[1].pageY)/2;v.copy(T(F,O)),_.copy(v);break}n.dispatchEvent(y)}}function H(w){if(n.enabled!==!1)switch(w.preventDefault(),w.stopPropagation(),w.touches.length){case 1:c.copy(u),u.copy(L(w.touches[0].pageX,w.touches[0].pageY));break;default:var R=w.touches[0].pageX-w.touches[1].pageX,V=w.touches[0].pageY-w.touches[1].pageY;p=Math.sqrt(R*R+V*V);var F=(w.touches[0].pageX+w.touches[1].pageX)/2,O=(w.touches[0].pageY+w.touches[1].pageY)/2;_.copy(T(F,O));break}}function z(w){if(n.enabled!==!1){switch(w.touches.length){case 0:s=i.NONE;break;case 1:s=i.TOUCH_ROTATE,u.copy(L(w.touches[0].pageX,w.touches[0].pageY)),c.copy(u);break}n.dispatchEvent(M)}}function Z(w){n.enabled!==!1&&w.preventDefault()}this.dispose=function(){this.domElement.removeEventListener("contextmenu",Z,!1),this.domElement.removeEventListener("mousedown",D,!1),this.domElement.removeEventListener("wheel",k,!1),this.domElement.removeEventListener("touchstart",G,!1),this.domElement.removeEventListener("touchend",z,!1),this.domElement.removeEventListener("touchmove",H,!1),document.removeEventListener("mousemove",N,!1),document.removeEventListener("mouseup",J,!1),window.removeEventListener("keydown",b,!1),window.removeEventListener("keyup",S,!1)},this.domElement.addEventListener("contextmenu",Z,!1),this.domElement.addEventListener("mousedown",D,!1),this.domElement.addEventListener("wheel",k,!1),this.domElement.addEventListener("touchstart",G,!1),this.domElement.addEventListener("touchend",z,!1),this.domElement.addEventListener("touchmove",H,!1),window.addEventListener("keydown",b,!1),window.addEventListener("keyup",S,!1),this.handleResize(),this.update()}Hc.prototype=Object.create(Zt.prototype);Hc.prototype.constructor=Hc;function Mf(t,e){Ee.call(this),e=e!==void 0?e:document,this.visible=!1;var n=new Wc;this.add(n);var i=new jc;this.add(i);var r=this;V("camera",t),V("object",void 0),V("enabled",!0),V("axis",null),V("mode","translate"),V("translationSnap",null),V("rotationSnap",null),V("space","world"),V("size",1),V("dragging",!1),V("showX",!0),V("showY",!0),V("showZ",!0);var a={type:"change"},s={type:"mouseDown"},o={type:"mouseUp",mode:r.mode},l={type:"objectChange"},c=new fu,u=new C,h=new C,f=new ct,d={X:new C(1,0,0),Y:new C(0,1,0),Z:new C(0,0,1)},m=new ct,g=new C,p=new C,v=new C,_=new C,x=0,y=new C,M=new ct,T=new C,L=new C,b=new ct,S=new C,D=new C,N=new ct,J=new C,k=new C,G=new ct,H=new C,z=new C,Z=new C,w=new ct,R=new C;V("parentQuaternion",b),V("worldPosition",k),V("worldPositionStart",D),V("worldQuaternion",G),V("worldQuaternionStart",N),V("cameraPosition",y),V("cameraQuaternion",M),V("pointStart",p),V("pointEnd",v),V("rotationAxis",_),V("rotationAngle",x),V("eye",z),e.addEventListener("mousedown",W,!1),e.addEventListener("touchstart",W,!1),e.addEventListener("mousemove",ee,!1),e.addEventListener("touchmove",ee,!1),e.addEventListener("touchmove",se,!1),document.addEventListener("mouseup",Y,!1),e.addEventListener("touchend",Y,!1),e.addEventListener("touchcancel",Y,!1),e.addEventListener("touchleave",Y,!1),e.addEventListener("contextmenu",O,!1),this.dispose=function(){e.removeEventListener("mousedown",W),e.removeEventListener("touchstart",W),e.removeEventListener("mousemove",ee),e.removeEventListener("touchmove",ee),e.removeEventListener("touchmove",se),document.removeEventListener("mouseup",Y),e.removeEventListener("touchend",Y),e.removeEventListener("touchcancel",Y),e.removeEventListener("touchleave",Y),e.removeEventListener("contextmenu",O)},this.attach=function(re){this.object=re,this.visible=!0},this.detach=function(){this.object=void 0,this.visible=!1,this.axis=null};function V(re,ae){var ue=ae;Object.defineProperty(r,re,{get:function(){return ue!==void 0?ue:ae},set:function(X){ue!==X&&(ue=X,i[re]=X,n[re]=X,r.dispatchEvent({type:re+"-changed",value:X}),r.dispatchEvent(a))}}),r[re]=ae,i[re]=ae,n[re]=ae}this.updateMatrixWorld=function(){this.object!==void 0&&(this.object.updateMatrixWorld(),this.object.parent.matrixWorld.decompose(L,b,S),this.object.matrixWorld.decompose(k,G,H)),this.camera.updateMatrixWorld(),this.camera.matrixWorld.decompose(y,M,T),this.camera instanceof Et?z.copy(y).sub(k).normalize():this.camera instanceof Ja&&z.copy(y).normalize(),Ee.prototype.updateMatrixWorld.call(this)},this.pointerHover=function(re){if(!(this.object===void 0||this.dragging===!0||re.button!==void 0&&re.button!==0)){c.setFromCamera(re,this.camera);var ae=c.intersectObjects(n.picker[this.mode].children,!0)[0]||!1;ae?this.axis=ae.object.name:this.axis=null}},this.pointerDown=function(re){if(!(this.object===void 0||this.dragging===!0||re.button!==void 0&&re.button!==0)&&(re.button===0||re.button===void 0)&&this.axis!==null){c.setFromCamera(re,this.camera);var ae=c.intersectObjects([i],!0)[0]||!1;if(ae){var ue=this.space;if(this.mode==="scale"?ue="local":(this.axis==="E"||this.axis==="XYZE"||this.axis==="XYZ")&&(ue="world"),ue==="local"&&this.mode==="rotate"){var X=this.rotationSnap;this.axis==="X"&&X&&(this.object.rotation.x=Math.round(this.object.rotation.x/X)*X),this.axis==="Y"&&X&&(this.object.rotation.y=Math.round(this.object.rotation.y/X)*X),this.axis==="Z"&&X&&(this.object.rotation.z=Math.round(this.object.rotation.z/X)*X)}this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),Z.copy(this.object.position),w.copy(this.object.quaternion),R.copy(this.object.scale),this.object.matrixWorld.decompose(D,N,J),p.copy(ae.point).sub(D),ue==="local"&&p.applyQuaternion(N.clone().inverse())}this.dragging=!0,s.mode=this.mode,this.dispatchEvent(s)}},this.pointerMove=function(re){var ae=this.axis,ue=this.mode,X=this.object,ve=this.space;if(ue==="scale"?ve="local":(ae==="E"||ae==="XYZE"||ae==="XYZ")&&(ve="world"),!(X===void 0||ae===null||this.dragging===!1||re.button!==void 0&&re.button!==0)){c.setFromCamera(re,this.camera);var be=c.intersectObjects([i],!0)[0]||!1;if(be!==!1){if(v.copy(be.point).sub(D),ve==="local"&&v.applyQuaternion(N.clone().inverse()),ue==="translate")ae.search("X")===-1&&(v.x=p.x),ae.search("Y")===-1&&(v.y=p.y),ae.search("Z")===-1&&(v.z=p.z),ve==="local"?X.position.copy(v).sub(p).applyQuaternion(w):X.position.copy(v).sub(p),X.position.add(Z),this.translationSnap&&(ve==="local"&&(X.position.applyQuaternion(f.copy(w).inverse()),ae.search("X")!==-1&&(X.position.x=Math.round(X.position.x/this.translationSnap)*this.translationSnap),ae.search("Y")!==-1&&(X.position.y=Math.round(X.position.y/this.translationSnap)*this.translationSnap),ae.search("Z")!==-1&&(X.position.z=Math.round(X.position.z/this.translationSnap)*this.translationSnap),X.position.applyQuaternion(w)),ve==="world"&&(X.parent&&X.position.add(u.setFromMatrixPosition(X.parent.matrixWorld)),ae.search("X")!==-1&&(X.position.x=Math.round(X.position.x/this.translationSnap)*this.translationSnap),ae.search("Y")!==-1&&(X.position.y=Math.round(X.position.y/this.translationSnap)*this.translationSnap),ae.search("Z")!==-1&&(X.position.z=Math.round(X.position.z/this.translationSnap)*this.translationSnap),X.parent&&X.position.sub(u.setFromMatrixPosition(X.parent.matrixWorld))));else if(ue==="scale"){if(ae.search("XYZ")!==-1){var ye=v.length()/p.length();v.dot(p)<0&&(ye*=-1),u.set(ye,ye,ye)}else u.copy(v).divide(p),ae.search("X")===-1&&(u.x=1),ae.search("Y")===-1&&(u.y=1),ae.search("Z")===-1&&(u.z=1);X.scale.copy(R).multiply(u)}else if(ue==="rotate"){var te=20/k.distanceTo(u.setFromMatrixPosition(this.camera.matrixWorld)),Ve=this.space==="local"?G:m,Xe=d[ae];ae==="E"?(u.copy(v).cross(p),_.copy(z),x=v.angleTo(p)*(u.dot(z)<0?1:-1)):ae==="XYZE"?(u.copy(v).sub(p).cross(z).normalize(),_.copy(u),x=v.sub(p).dot(u.cross(z))*te):(ae==="X"||ae==="Y"||ae==="Z")&&(g.copy(Xe).applyQuaternion(Ve),_.copy(Xe),u=Xe.clone(),h=v.clone().sub(p),ve==="local"&&(u.applyQuaternion(Ve),h.applyQuaternion(N)),x=h.dot(u.cross(z).normalize())*te),this.rotationSnap&&(x=Math.round(x/this.rotationSnap)*this.rotationSnap),this.rotationAngle=x,ve==="local"?(X.quaternion.copy(w),X.quaternion.multiply(f.setFromAxisAngle(_,x))):(X.quaternion.copy(f.setFromAxisAngle(_,x)),X.quaternion.multiply(w))}this.dispatchEvent(a),this.dispatchEvent(l)}}},this.pointerUp=function(re){re.button!==void 0&&re.button!==0||(this.dragging&&this.axis!==null&&(o.mode=this.mode,this.dispatchEvent(o)),this.dragging=!1,re.button===void 0&&(this.axis=null))};function F(re){var ae=re.changedTouches?re.changedTouches[0]:re,ue=e.getBoundingClientRect();return{x:(ae.clientX-ue.left)/ue.width*2-1,y:-(ae.clientY-ue.top)/ue.height*2+1,button:re.button}}function O(re){re.preventDefault()}function ee(re){!r.enabled||r.pointerHover(F(re))}function W(re){!r.enabled||(re.preventDefault(),document.addEventListener("mousemove",se,!1),r.pointerHover(F(re)),r.pointerDown(F(re)))}function se(re){!r.enabled||(re.preventDefault(),r.pointerMove(F(re)))}function Y(re){!r.enabled||(re.preventDefault(),document.removeEventListener("mousemove",se,!1),r.pointerUp(F(re)))}this.getMode=function(){return r.mode},this.setMode=function(re){r.mode=re},this.setTranslationSnap=function(re){r.translationSnap=re},this.setRotationSnap=function(re){r.rotationSnap=re},this.setSize=function(re){r.size=re},this.setSpace=function(re){r.space=re},this.update=function(){console.warn("THREE.TransformControls: update function has been depricated.")}}Mf.prototype=Object.assign(Object.create(Ee.prototype),{constructor:Mf,isTransformControls:!0});function Wc(){Ee.call(this),this.type="TransformControlsGizmo";var t=new nn({depthTest:!1,depthWrite:!1,transparent:!0,side:er,fog:!1}),e=new yt({depthTest:!1,depthWrite:!1,transparent:!0,linewidth:1,fog:!1}),n=t.clone();n.opacity=.15;var i=t.clone();i.opacity=.33;var r=t.clone();r.color.set(16711680);var a=t.clone();a.color.set(65280);var s=t.clone();s.color.set(255);var o=t.clone();o.opacity=.25;var l=o.clone();l.color.set(16776960);var c=o.clone();c.color.set(65535);var u=o.clone();u.color.set(16711935);var h=t.clone();h.color.set(16776960);var f=e.clone();f.color.set(16711680);var d=e.clone();d.color.set(65280);var m=e.clone();m.color.set(255);var g=e.clone();g.color.set(65535);var p=e.clone();p.color.set(16711935);var v=e.clone();v.color.set(16776960);var _=e.clone();_.color.set(7895160);var x=v.clone();x.opacity=.25;var y=new Ct(0,.05,.2,12,1,!1),M=new cn(.125,.125,.125),T=new Re;T.addAttribute("position",new Ae([0,0,0,1,0,0],3));var L=function(X,ve){for(var be=new Re,ye=[],te=0;te<=64*ve;++te)ye.push(0,Math.cos(te/32*Math.PI)*X,Math.sin(te/32*Math.PI)*X);return be.addAttribute("position",new Ae(ye,3)),be},b=function(X,ve){var be=new Re;return be.addAttribute("position",new Ae([0,0,0,1,1,1],3)),be},S={X:[[new Oe(y,r),[1,0,0],[0,0,-Math.PI/2],null,"fwd"],[new Oe(y,r),[1,0,0],[0,0,Math.PI/2],null,"bwd"],[new tt(T,f)]],Y:[[new Oe(y,a),[0,1,0],null,null,"fwd"],[new Oe(y,a),[0,1,0],[Math.PI,0,0],null,"bwd"],[new tt(T,d),null,[0,0,Math.PI/2]]],Z:[[new Oe(y,s),[0,0,1],[Math.PI/2,0,0],null,"fwd"],[new Oe(y,s),[0,0,1],[-Math.PI/2,0,0],null,"bwd"],[new tt(T,m),null,[0,-Math.PI/2,0]]],XYZ:[[new Oe(new un(.1,0),o),[0,0,0],[0,0,0]]],XY:[[new Oe(new dn(.295,.295),l),[.15,.15,0]],[new tt(T,v),[.18,.3,0],null,[.125,1,1]],[new tt(T,v),[.3,.18,0],[0,0,Math.PI/2],[.125,1,1]]],YZ:[[new Oe(new dn(.295,.295),c),[0,.15,.15],[0,Math.PI/2,0]],[new tt(T,g),[0,.18,.3],[0,0,Math.PI/2],[.125,1,1]],[new tt(T,g),[0,.3,.18],[0,-Math.PI/2,0],[.125,1,1]]],XZ:[[new Oe(new dn(.295,.295),u),[.15,0,.15],[-Math.PI/2,0,0]],[new tt(T,p),[.18,0,.3],null,[.125,1,1]],[new tt(T,p),[.3,0,.18],[0,-Math.PI/2,0],[.125,1,1]]]},D={X:[[new Oe(new Ct(.2,0,1,4,1,!1),n),[.6,0,0],[0,0,-Math.PI/2]]],Y:[[new Oe(new Ct(.2,0,1,4,1,!1),n),[0,.6,0]]],Z:[[new Oe(new Ct(.2,0,1,4,1,!1),n),[0,0,.6],[Math.PI/2,0,0]]],XYZ:[[new Oe(new un(.2,0),n)]],XY:[[new Oe(new dn(.4,.4),n),[.2,.2,0]]],YZ:[[new Oe(new dn(.4,.4),n),[0,.2,.2],[0,Math.PI/2,0]]],XZ:[[new Oe(new dn(.4,.4),n),[.2,0,.2],[-Math.PI/2,0,0]]]},N={START:[[new Oe(new un(.01,2),i),null,null,null,"helper"]],END:[[new Oe(new un(.01,2),i),null,null,null,"helper"]],DELTA:[[new tt(b(),i),null,null,null,"helper"]],X:[[new tt(T,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new tt(T,i.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new tt(T,i.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},J={X:[[new tt(L(1,.5),f)],[new Oe(new un(.04,0),r),[0,0,.99],null,[1,3,1]]],Y:[[new tt(L(1,.5),d),null,[0,0,-Math.PI/2]],[new Oe(new un(.04,0),a),[0,0,.99],null,[3,1,1]]],Z:[[new tt(L(1,.5),m),null,[0,Math.PI/2,0]],[new Oe(new un(.04,0),s),[.99,0,0],null,[1,3,1]]],E:[[new tt(L(1.25,1),x),null,[0,Math.PI/2,0]],[new Oe(new Ct(.03,0,.15,4,1,!1),x),[1.17,0,0],[0,0,-Math.PI/2],[1,1,.001]],[new Oe(new Ct(.03,0,.15,4,1,!1),x),[-1.17,0,0],[0,0,Math.PI/2],[1,1,.001]],[new Oe(new Ct(.03,0,.15,4,1,!1),x),[0,-1.17,0],[Math.PI,0,0],[1,1,.001]],[new Oe(new Ct(.03,0,.15,4,1,!1),x),[0,1.17,0],[0,0,0],[1,1,.001]]],XYZE:[[new tt(L(1,1),_),null,[0,Math.PI/2,0]]]},k={AXIS:[[new tt(T,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},G={X:[[new Oe(new ai(1,.1,4,24),n),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new Oe(new ai(1,.1,4,24),n),[0,0,0],[Math.PI/2,0,0]]],Z:[[new Oe(new ai(1,.1,4,24),n),[0,0,0],[0,0,-Math.PI/2]]],E:[[new Oe(new ai(1.25,.1,2,24),n)]],XYZE:[[new Oe(new Qi(.7,10,8),n)]]},H={X:[[new Oe(M,r),[.8,0,0],[0,0,-Math.PI/2]],[new tt(T,f),null,null,[.8,1,1]]],Y:[[new Oe(M,a),[0,.8,0]],[new tt(T,d),null,[0,0,Math.PI/2],[.8,1,1]]],Z:[[new Oe(M,s),[0,0,.8],[Math.PI/2,0,0]],[new tt(T,m),null,[0,-Math.PI/2,0],[.8,1,1]]],XY:[[new Oe(M,l),[.85,.85,0],null,[2,2,.2]],[new tt(T,v),[.855,.98,0],null,[.125,1,1]],[new tt(T,v),[.98,.855,0],[0,0,Math.PI/2],[.125,1,1]]],YZ:[[new Oe(M,c),[0,.85,.85],null,[.2,2,2]],[new tt(T,g),[0,.855,.98],[0,0,Math.PI/2],[.125,1,1]],[new tt(T,g),[0,.98,.855],[0,-Math.PI/2,0],[.125,1,1]]],XZ:[[new Oe(M,u),[.85,0,.85],null,[2,.2,2]],[new tt(T,p),[.855,0,.98],null,[.125,1,1]],[new tt(T,p),[.98,0,.855],[0,-Math.PI/2,0],[.125,1,1]]],XYZX:[[new Oe(new cn(.125,.125,.125),o),[1.1,0,0]]],XYZY:[[new Oe(new cn(.125,.125,.125),o),[0,1.1,0]]],XYZZ:[[new Oe(new cn(.125,.125,.125),o),[0,0,1.1]]]},z={X:[[new Oe(new Ct(.2,0,.8,4,1,!1),n),[.5,0,0],[0,0,-Math.PI/2]]],Y:[[new Oe(new Ct(.2,0,.8,4,1,!1),n),[0,.5,0]]],Z:[[new Oe(new Ct(.2,0,.8,4,1,!1),n),[0,0,.5],[Math.PI/2,0,0]]],XY:[[new Oe(M,n),[.85,.85,0],null,[3,3,.2]]],YZ:[[new Oe(M,n),[0,.85,.85],null,[.2,3,3]]],XZ:[[new Oe(M,n),[.85,0,.85],null,[3,.2,3]]],XYZX:[[new Oe(new cn(.2,.2,.2),n),[1.1,0,0]]],XYZY:[[new Oe(new cn(.2,.2,.2),n),[0,1.1,0]]],XYZZ:[[new Oe(new cn(.2,.2,.2),n),[0,0,1.1]]]},Z={X:[[new tt(T,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new tt(T,i.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new tt(T,i.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},w=function(X){var ve=new Ee;for(var be in X)for(var ye=X[be].length;ye--;){var te=X[be][ye][0].clone(),Ve=X[be][ye][1],Xe=X[be][ye][2],ie=X[be][ye][3],ke=X[be][ye][4];te.name=be,te.tag=ke,Ve&&te.position.set(Ve[0],Ve[1],Ve[2]),Xe&&te.rotation.set(Xe[0],Xe[1],Xe[2]),ie&&te.scale.set(ie[0],ie[1],ie[2]),te.updateMatrix();var Fe=te.geometry.clone();Fe.applyMatrix(te.matrix),te.geometry=Fe,te.position.set(0,0,0),te.rotation.set(0,0,0),te.scale.set(1,1,1),ve.add(te)}return ve},R=new C(0,0,0),V=new Ai,F=new C(0,1,0),O=new C(0,0,0),ee=new Ye,W=new ct,se=new ct,Y=new ct,re=new C(1,0,0),ae=new C(0,1,0),ue=new C(0,0,1);this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=w(S)),this.add(this.gizmo.rotate=w(J)),this.add(this.gizmo.scale=w(H)),this.add(this.picker.translate=w(D)),this.add(this.picker.rotate=w(G)),this.add(this.picker.scale=w(z)),this.add(this.helper.translate=w(N)),this.add(this.helper.rotate=w(k)),this.add(this.helper.scale=w(Z)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1,this.updateMatrixWorld=function(){var X=this.space;this.mode==="scale"&&(X="local");var ve=X==="local"?this.worldQuaternion:Y;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";var be=[];be=be.concat(this.picker[this.mode].children),be=be.concat(this.gizmo[this.mode].children),be=be.concat(this.helper[this.mode].children);for(var ye=0;ye<be.length;ye++){var te=be[ye];te.visible=!0,te.rotation.set(0,0,0),te.position.copy(this.worldPosition);var Ve=this.worldPosition.distanceTo(this.cameraPosition);if(te.scale.set(1,1,1).multiplyScalar(Ve*this.size/7),te.tag==="helper"){te.visible=!1,te.name==="AXIS"?(te.position.copy(this.worldPositionStart),te.visible=!!this.axis,this.axis==="X"&&(W.setFromEuler(V.set(0,0,0)),te.quaternion.copy(ve).multiply(W),Math.abs(F.copy(re).applyQuaternion(ve).dot(this.eye))>.9&&(te.visible=!1)),this.axis==="Y"&&(W.setFromEuler(V.set(0,0,Math.PI/2)),te.quaternion.copy(ve).multiply(W),Math.abs(F.copy(ae).applyQuaternion(ve).dot(this.eye))>.9&&(te.visible=!1)),this.axis==="Z"&&(W.setFromEuler(V.set(0,Math.PI/2,0)),te.quaternion.copy(ve).multiply(W),Math.abs(F.copy(ue).applyQuaternion(ve).dot(this.eye))>.9&&(te.visible=!1)),this.axis==="XYZE"&&(W.setFromEuler(V.set(0,Math.PI/2,0)),F.copy(this.rotationAxis),te.quaternion.setFromRotationMatrix(ee.lookAt(O,F,ae)),te.quaternion.multiply(W),te.visible=this.dragging),this.axis==="E"&&(te.visible=!1)):te.name==="START"?(te.position.copy(this.worldPositionStart),te.visible=this.dragging):te.name==="END"?(te.position.copy(this.worldPosition),te.visible=this.dragging):te.name==="DELTA"?(te.position.copy(this.worldPositionStart),te.quaternion.copy(this.worldQuaternionStart),R.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),R.applyQuaternion(this.worldQuaternionStart.clone().inverse()),te.scale.copy(R),te.visible=this.dragging):(te.quaternion.copy(ve),this.dragging?te.position.copy(this.worldPositionStart):te.position.copy(this.worldPosition),this.axis&&(te.visible=this.axis.search(te.name)!==-1));continue}if(te.quaternion.copy(ve),this.mode==="translate"||this.mode==="scale"){var Xe=.99,ie=.2,ke=-.4;(te.name==="X"||te.name==="XYZX")&&Math.abs(F.copy(re).applyQuaternion(ve).dot(this.eye))>Xe&&(te.scale.set(1e-10,1e-10,1e-10),te.visible=!1),(te.name==="Y"||te.name==="XYZY")&&Math.abs(F.copy(ae).applyQuaternion(ve).dot(this.eye))>Xe&&(te.scale.set(1e-10,1e-10,1e-10),te.visible=!1),(te.name==="Z"||te.name==="XYZZ")&&Math.abs(F.copy(ue).applyQuaternion(ve).dot(this.eye))>Xe&&(te.scale.set(1e-10,1e-10,1e-10),te.visible=!1),te.name==="XY"&&Math.abs(F.copy(ue).applyQuaternion(ve).dot(this.eye))<ie&&(te.scale.set(1e-10,1e-10,1e-10),te.visible=!1),te.name==="YZ"&&Math.abs(F.copy(re).applyQuaternion(ve).dot(this.eye))<ie&&(te.scale.set(1e-10,1e-10,1e-10),te.visible=!1),te.name==="XZ"&&Math.abs(F.copy(ae).applyQuaternion(ve).dot(this.eye))<ie&&(te.scale.set(1e-10,1e-10,1e-10),te.visible=!1),te.name.search("X")!==-1&&(F.copy(re).applyQuaternion(ve).dot(this.eye)<ke?te.tag==="fwd"?te.visible=!1:te.scale.x*=-1:te.tag==="bwd"&&(te.visible=!1)),te.name.search("Y")!==-1&&(F.copy(ae).applyQuaternion(ve).dot(this.eye)<ke?te.tag==="fwd"?te.visible=!1:te.scale.y*=-1:te.tag==="bwd"&&(te.visible=!1)),te.name.search("Z")!==-1&&(F.copy(ue).applyQuaternion(ve).dot(this.eye)<ke?te.tag==="fwd"?te.visible=!1:te.scale.z*=-1:te.tag==="bwd"&&(te.visible=!1))}else this.mode==="rotate"&&(se.copy(ve),F.copy(this.eye).applyQuaternion(W.copy(ve).inverse()),te.name.search("E")!==-1&&te.quaternion.setFromRotationMatrix(ee.lookAt(this.eye,O,ae)),te.name==="X"&&(W.setFromAxisAngle(re,Math.atan2(-F.y,F.z)),W.multiplyQuaternions(se,W),te.quaternion.copy(W)),te.name==="Y"&&(W.setFromAxisAngle(ae,Math.atan2(F.x,F.z)),W.multiplyQuaternions(se,W),te.quaternion.copy(W)),te.name==="Z"&&(W.setFromAxisAngle(ue,Math.atan2(F.y,F.x)),W.multiplyQuaternions(se,W),te.quaternion.copy(W)));te.visible=te.visible&&(te.name.indexOf("X")===-1||this.showX),te.visible=te.visible&&(te.name.indexOf("Y")===-1||this.showY),te.visible=te.visible&&(te.name.indexOf("Z")===-1||this.showZ),te.visible=te.visible&&(te.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),te.material._opacity=te.material._opacity||te.material.opacity,te.material._color=te.material._color||te.material.color.clone(),te.material.color.copy(te.material._color),te.material.opacity=te.material._opacity,this.enabled?this.axis&&(te.name===this.axis?(te.material.opacity=1,te.material.color.lerp(new Ge(1,1,1),.5)):this.axis.split("").some(function(Fe){return te.name===Fe})?(te.material.opacity=1,te.material.color.lerp(new Ge(1,1,1),.5)):(te.material.opacity*=.25,te.material.color.lerp(new Ge(1,1,1),.5))):(te.material.opacity*=.5,te.material.color.lerp(new Ge(1,1,1),.5))}Ee.prototype.updateMatrixWorld.call(this)}}Wc.prototype=Object.assign(Object.create(Ee.prototype),{constructor:Wc,isTransformControlsGizmo:!0});function jc(){Oe.call(this,new dn(1e5,1e5,2,2),new nn({visible:!1,wireframe:!0,side:er,transparent:!0,opacity:.1})),this.type="TransformControlsPlane";var t=new C(1,0,0),e=new C(0,1,0),n=new C(0,0,1),i=new C,r=new C,a=new C,s=new Ye,o=new ct;this.updateMatrixWorld=function(){var l=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(l="local"),t.set(1,0,0).applyQuaternion(l==="local"?this.worldQuaternion:o),e.set(0,1,0).applyQuaternion(l==="local"?this.worldQuaternion:o),n.set(0,0,1).applyQuaternion(l==="local"?this.worldQuaternion:o),a.copy(e),this.mode){case"translate":case"scale":switch(this.axis){case"X":a.copy(this.eye).cross(t),r.copy(t).cross(a);break;case"Y":a.copy(this.eye).cross(e),r.copy(e).cross(a);break;case"Z":a.copy(this.eye).cross(n),r.copy(n).cross(a);break;case"XY":r.copy(n);break;case"YZ":r.copy(t);break;case"XZ":a.copy(n),r.copy(e);break;case"XYZ":case"E":r.set(0,0,0);break}break;case"rotate":default:r.set(0,0,0)}r.length()===0?this.quaternion.copy(this.cameraQuaternion):(s.lookAt(i.set(0,0,0),r,a),this.quaternion.setFromRotationMatrix(s)),Ee.prototype.updateMatrixWorld.call(this)}}jc.prototype=Object.assign(Object.create(Oe.prototype),{constructor:jc,isTransformControlsPlane:!0});const C1=/^[og]\s*(.+)?/,P1=/^mtllib /,R1=/^usemtl /,D1=/^usemap /,wf=/\s+/,Sf=new ne,Xl=new ne,Ef=new ne,Tf=new ne,_n=new ne,Vs=new ut;function I1(){const t={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,n){if(this.object&&this.object.fromDeclaration===!1){this.object.name=e,this.object.fromDeclaration=n!==!1;return}const i=this.object&&typeof this.object.currentMaterial=="function"?this.object.currentMaterial():void 0;if(this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:n!==!1,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(r,a){const s=this._finalize(!1);s&&(s.inherited||s.groupCount<=0)&&this.materials.splice(s.index,1);const o={index:this.materials.length,name:r||"",mtllib:Array.isArray(a)&&a.length>0?a[a.length-1]:"",smooth:s!==void 0?s.smooth:this.smooth,groupStart:s!==void 0?s.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(l){const c={index:typeof l=="number"?l:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return c.clone=this.clone.bind(c),c}};return this.materials.push(o),o},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(r){const a=this.currentMaterial();if(a&&a.groupEnd===-1&&(a.groupEnd=this.geometry.vertices.length/3,a.groupCount=a.groupEnd-a.groupStart,a.inherited=!1),r&&this.materials.length>1)for(let s=this.materials.length-1;s>=0;s--)this.materials[s].groupCount<=0&&this.materials.splice(s,1);return r&&this.materials.length===0&&this.materials.push({name:"",smooth:this.smooth}),a}},i&&i.name&&typeof i.clone=="function"){const r=i.clone(0);r.inherited=!0,this.object.materials.push(r)}this.objects.push(this.object)},finalize:function(){this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0)},parseVertexIndex:function(e,n){const i=parseInt(e,10);return(i>=0?i-1:i+n/3)*3},parseNormalIndex:function(e,n){const i=parseInt(e,10);return(i>=0?i-1:i+n/3)*3},parseUVIndex:function(e,n){const i=parseInt(e,10);return(i>=0?i-1:i+n/2)*2},addVertex:function(e,n,i){const r=this.vertices,a=this.object.geometry.vertices;a.push(r[e+0],r[e+1],r[e+2]),a.push(r[n+0],r[n+1],r[n+2]),a.push(r[i+0],r[i+1],r[i+2])},addVertexPoint:function(e){const n=this.vertices;this.object.geometry.vertices.push(n[e+0],n[e+1],n[e+2])},addVertexLine:function(e){const n=this.vertices;this.object.geometry.vertices.push(n[e+0],n[e+1],n[e+2])},addNormal:function(e,n,i){const r=this.normals,a=this.object.geometry.normals;a.push(r[e+0],r[e+1],r[e+2]),a.push(r[n+0],r[n+1],r[n+2]),a.push(r[i+0],r[i+1],r[i+2])},addFaceNormal:function(e,n,i){const r=this.vertices,a=this.object.geometry.normals;Sf.fromArray(r,e),Xl.fromArray(r,n),Ef.fromArray(r,i),_n.subVectors(Ef,Xl),Tf.subVectors(Sf,Xl),_n.cross(Tf),_n.normalize(),a.push(_n.x,_n.y,_n.z),a.push(_n.x,_n.y,_n.z),a.push(_n.x,_n.y,_n.z)},addColor:function(e,n,i){const r=this.colors,a=this.object.geometry.colors;r[e]!==void 0&&a.push(r[e+0],r[e+1],r[e+2]),r[n]!==void 0&&a.push(r[n+0],r[n+1],r[n+2]),r[i]!==void 0&&a.push(r[i+0],r[i+1],r[i+2])},addUV:function(e,n,i){const r=this.uvs,a=this.object.geometry.uvs;a.push(r[e+0],r[e+1]),a.push(r[n+0],r[n+1]),a.push(r[i+0],r[i+1])},addDefaultUV:function(){const e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){const n=this.uvs;this.object.geometry.uvs.push(n[e+0],n[e+1])},addFace:function(e,n,i,r,a,s,o,l,c){const u=this.vertices.length;let h=this.parseVertexIndex(e,u),f=this.parseVertexIndex(n,u),d=this.parseVertexIndex(i,u);if(this.addVertex(h,f,d),this.addColor(h,f,d),o!==void 0&&o!==""){const m=this.normals.length;h=this.parseNormalIndex(o,m),f=this.parseNormalIndex(l,m),d=this.parseNormalIndex(c,m),this.addNormal(h,f,d)}else this.addFaceNormal(h,f,d);if(r!==void 0&&r!==""){const m=this.uvs.length;h=this.parseUVIndex(r,m),f=this.parseUVIndex(a,m),d=this.parseUVIndex(s,m),this.addUV(h,f,d),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";const n=this.vertices.length;for(let i=0,r=e.length;i<r;i++){const a=this.parseVertexIndex(e[i],n);this.addVertexPoint(a),this.addColor(a)}},addLineGeometry:function(e,n){this.object.geometry.type="Line";const i=this.vertices.length,r=this.uvs.length;for(let a=0,s=e.length;a<s;a++)this.addVertexLine(this.parseVertexIndex(e[a],i));for(let a=0,s=n.length;a<s;a++)this.addUVLine(this.parseUVIndex(n[a],r))}};return t.startObject("",!1),t}class O1 extends fs{constructor(e){super(e),this.materials=null}load(e,n,i,r){const a=this,s=new Kf(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(o){try{n(a.parse(o))}catch(l){r?r(l):console.error(l),a.manager.itemError(e)}},i,r)}setMaterials(e){return this.materials=e,this}parse(e){const n=new I1;e.indexOf(`\r
`)!==-1&&(e=e.replace(/\r\n/g,`
`)),e.indexOf(`\\
`)!==-1&&(e=e.replace(/\\\n/g,""));const i=e.split(`
`);let r=[];for(let o=0,l=i.length;o<l;o++){const c=i[o].trimStart();if(c.length===0)continue;const u=c.charAt(0);if(u!=="#")if(u==="v"){const h=c.split(wf);switch(h[0]){case"v":n.vertices.push(parseFloat(h[1]),parseFloat(h[2]),parseFloat(h[3])),h.length>=7?(Vs.setRGB(parseFloat(h[4]),parseFloat(h[5]),parseFloat(h[6])).convertSRGBToLinear(),n.colors.push(Vs.r,Vs.g,Vs.b)):n.colors.push(void 0,void 0,void 0);break;case"vn":n.normals.push(parseFloat(h[1]),parseFloat(h[2]),parseFloat(h[3]));break;case"vt":n.uvs.push(parseFloat(h[1]),parseFloat(h[2]));break}}else if(u==="f"){const f=c.slice(1).trim().split(wf),d=[];for(let g=0,p=f.length;g<p;g++){const v=f[g];if(v.length>0){const _=v.split("/");d.push(_)}}const m=d[0];for(let g=1,p=d.length-1;g<p;g++){const v=d[g],_=d[g+1];n.addFace(m[0],v[0],_[0],m[1],v[1],_[1],m[2],v[2],_[2])}}else if(u==="l"){const h=c.substring(1).trim().split(" ");let f=[];const d=[];if(c.indexOf("/")===-1)f=h;else for(let m=0,g=h.length;m<g;m++){const p=h[m].split("/");p[0]!==""&&f.push(p[0]),p[1]!==""&&d.push(p[1])}n.addLineGeometry(f,d)}else if(u==="p"){const f=c.slice(1).trim().split(" ");n.addPointGeometry(f)}else if((r=C1.exec(c))!==null){const h=(" "+r[0].slice(1).trim()).slice(1);n.startObject(h)}else if(R1.test(c))n.object.startMaterial(c.substring(7).trim(),n.materialLibraries);else if(P1.test(c))n.materialLibraries.push(c.substring(7).trim());else if(D1.test(c))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if(u==="s"){if(r=c.split(" "),r.length>1){const f=r[1].trim().toLowerCase();n.object.smooth=f!=="0"&&f!=="off"}else n.object.smooth=!0;const h=n.object.currentMaterial();h&&(h.smooth=n.object.smooth)}else{if(c==="\0")continue;console.warn('THREE.OBJLoader: Unexpected line: "'+c+'"')}}n.finalize();const a=new ha;if(a.materialLibraries=[].concat(n.materialLibraries),!(n.objects.length===1&&n.objects[0].geometry.vertices.length===0)===!0)for(let o=0,l=n.objects.length;o<l;o++){const c=n.objects[o],u=c.geometry,h=c.materials,f=u.type==="Line",d=u.type==="Points";let m=!1;if(u.vertices.length===0)continue;const g=new On;g.setAttribute("position",new Wt(u.vertices,3)),u.normals.length>0&&g.setAttribute("normal",new Wt(u.normals,3)),u.colors.length>0&&(m=!0,g.setAttribute("color",new Wt(u.colors,3))),u.hasUVIndices===!0&&g.setAttribute("uv",new Wt(u.uvs,2));const p=[];for(let _=0,x=h.length;_<x;_++){const y=h[_],M=y.name+"_"+y.smooth+"_"+m;let T=n.materials[M];if(this.materials!==null){if(T=this.materials.create(y.name),f&&T&&!(T instanceof js)){const L=new js;oi.prototype.copy.call(L,T),L.color.copy(T.color),T=L}else if(d&&T&&!(T instanceof fa)){const L=new fa({size:10,sizeAttenuation:!1});oi.prototype.copy.call(L,T),L.color.copy(T.color),L.map=T.map,T=L}}T===void 0&&(f?T=new js:d?T=new fa({size:1,sizeAttenuation:!1}):T=new Jf,T.name=y.name,T.flatShading=!y.smooth,T.vertexColors=m,n.materials[M]=T),p.push(T)}let v;if(p.length>1){for(let _=0,x=h.length;_<x;_++){const y=h[_];g.addGroup(y.groupStart,y.groupCount,_)}f?v=new Ch(g,p):d?v=new Il(g,p):v=new kn(g,p)}else f?v=new Ch(g,p[0]):d?v=new Il(g,p[0]):v=new kn(g,p[0]);v.name=c.name,a.add(v)}else if(n.vertices.length>0){const o=new fa({size:1,sizeAttenuation:!1}),l=new On;l.setAttribute("position",new Wt(n.vertices,3)),n.colors.length>0&&n.colors[0]!==void 0&&(l.setAttribute("color",new Wt(n.colors,3)),o.vertexColors=!0);const c=new Il(l,o);a.add(c)}return a}}class F1 extends fs{constructor(e){super(e)}load(e,n,i,r){const a=this,s=this.path===""?hx.extractUrlBase(e):this.path,o=new Kf(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){try{n(a.parse(l,s))}catch(c){r?r(c):console.error(c),a.manager.itemError(e)}},i,r)}setMaterialOptions(e){return this.materialOptions=e,this}parse(e,n){const i=e.split(`
`);let r={};const a=/\s+/,s={};for(let l=0;l<i.length;l++){let c=i[l];if(c=c.trim(),c.length===0||c.charAt(0)==="#")continue;const u=c.indexOf(" ");let h=u>=0?c.substring(0,u):c;h=h.toLowerCase();let f=u>=0?c.substring(u+1):"";if(f=f.trim(),h==="newmtl")r={name:f},s[f]=r;else if(h==="ka"||h==="kd"||h==="ks"||h==="ke"){const d=f.split(a,3);r[h]=[parseFloat(d[0]),parseFloat(d[1]),parseFloat(d[2])]}else r[h]=f}const o=new N1(this.resourcePath||n,this.materialOptions);return o.setCrossOrigin(this.crossOrigin),o.setManager(this.manager),o.setMaterials(s),o}}class N1{constructor(e="",n={}){this.baseUrl=e,this.options=n,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.crossOrigin="anonymous",this.side=this.options.side!==void 0?this.options.side:wi,this.wrap=this.options.wrap!==void 0?this.options.wrap:$s}setCrossOrigin(e){return this.crossOrigin=e,this}setManager(e){this.manager=e}setMaterials(e){this.materialsInfo=this.convert(e),this.materials={},this.materialsArray=[],this.nameLookup={}}convert(e){if(!this.options)return e;const n={};for(const i in e){const r=e[i],a={};n[i]=a;for(const s in r){let o=!0,l=r[s];const c=s.toLowerCase();switch(c){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(l=[l[0]/255,l[1]/255,l[2]/255]),this.options&&this.options.ignoreZeroRGBs&&l[0]===0&&l[1]===0&&l[2]===0&&(o=!1);break}o&&(a[c]=l)}}return n}preload(){for(const e in this.materialsInfo)this.create(e)}getIndex(e){return this.nameLookup[e]}getAsArray(){let e=0;for(const n in this.materialsInfo)this.materialsArray[e]=this.create(n),this.nameLookup[n]=e,e++;return this.materialsArray}create(e){return this.materials[e]===void 0&&this.createMaterial_(e),this.materials[e]}createMaterial_(e){const n=this,i=this.materialsInfo[e],r={name:e,side:this.side};function a(o,l){return typeof l!="string"||l===""?"":/^https?:\/\//i.test(l)?l:o+l}function s(o,l){if(r[o])return;const c=n.getTextureParams(l,r),u=n.loadTexture(a(n.baseUrl,c.url));u.repeat.copy(c.scale),u.offset.copy(c.offset),u.wrapS=n.wrap,u.wrapT=n.wrap,(o==="map"||o==="emissiveMap")&&(u.encoding=gt),r[o]=u}for(const o in i){const l=i[o];let c;if(l!=="")switch(o.toLowerCase()){case"kd":r.color=new ut().fromArray(l).convertSRGBToLinear();break;case"ks":r.specular=new ut().fromArray(l).convertSRGBToLinear();break;case"ke":r.emissive=new ut().fromArray(l).convertSRGBToLinear();break;case"map_kd":s("map",l);break;case"map_ks":s("specularMap",l);break;case"map_ke":s("emissiveMap",l);break;case"norm":s("normalMap",l);break;case"map_bump":case"bump":s("bumpMap",l);break;case"map_d":s("alphaMap",l),r.transparent=!0;break;case"ns":r.shininess=parseFloat(l);break;case"d":c=parseFloat(l),c<1&&(r.opacity=c,r.transparent=!0);break;case"tr":c=parseFloat(l),this.options&&this.options.invertTrProperty&&(c=1-c),c>0&&(r.opacity=1-c,r.transparent=!0);break}}return this.materials[e]=new Jf(r),this.materials[e]}getTextureParams(e,n){const i={scale:new dt(1,1),offset:new dt(0,0)},r=e.split(/\s+/);let a;return a=r.indexOf("-bm"),a>=0&&(n.bumpScale=parseFloat(r[a+1]),r.splice(a,2)),a=r.indexOf("-s"),a>=0&&(i.scale.set(parseFloat(r[a+1]),parseFloat(r[a+2])),r.splice(a,4)),a=r.indexOf("-o"),a>=0&&(i.offset.set(parseFloat(r[a+1]),parseFloat(r[a+2])),r.splice(a,4)),i.url=r.join(" ").trim(),i}loadTexture(e,n,i,r,a){const s=this.manager!==void 0?this.manager:Qf;let o=s.getHandler(e);o===null&&(o=new sx(s)),o.setCrossOrigin&&o.setCrossOrigin(this.crossOrigin);const l=o.load(e,i,r,a);return n!==void 0&&(l.mapping=n),l}}let pa,Ys,ma,z1=document.getElementById("render-product");const U1="https://raw.githubusercontent.com/mizaelalves/product-card/master/object/sofa.obj",B1="https://cdn.statically.io/gh/mizaelalves/product-card/e0aafa9b/object/Textures/sofa.mtl",G1=()=>{pa=new tx,Ys=new fn(15,500/400),Ys.position.set(5,5,6),ma=new Zf({alpha:!0,antialias:!0}),ma.setSize(466,260),z1.appendChild(ma.domElement);var t=new F1;const e=new O1;t.load(B1,function(r){r.preload(),e.setMaterials(r),e.load(U1,function(a){pa.add(a)},function(a){console.log(a.loaded/a.total*100+"% loaded")},function(a){console.log("An error happened")})}),new as(Ys,ma.domElement);const n=new ux(16777215,.4);pa.add(n);const i=new cx(16777215,1,100);i.position.set(15,15,15),pa.add(i)},np=()=>{requestAnimationFrame(np),k1()},k1=()=>{ma.render(pa,Ys)};G1();np();
